import{an as c,ba as m,bg as u,bA as h,b9 as n,a5 as s,a6 as t,eU as d,a9 as b}from"./index-b516d057.js";import{R as g}from"./Basemap-8d62c69e.js";import{b as i}from"./Ground-ed93a93a.js";import{l as p}from"./CollectionFlattener-193451da.js";import{o as v}from"./editableLayers-856f2cb4.js";import{y as f,m as L,b as T}from"./basemapUtils-6ec10a55.js";import{l as w,d as $,t as C}from"./TablesMixin-292d1d89.js";const y={"world-elevation":{id:"worldElevation",url:"//elevation3d.arcgis.com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer",layerType:"ArcGISTiledElevationServiceLayer"},"world-topobathymetry":{id:"worldTopoBathymetry",url:"//elevation3d.arcgis.com/arcgis/rest/services/WorldElevation3D/TopoBathy3D/ImageServer",layerType:"ArcGISTiledElevationServiceLayer"}};function I(e){let a=null;if(typeof e=="string")if(e in y){const o=y[e];a=new i({resourceInfo:{data:{layers:[o]}}})}else c.getLogger("esri.support.groundUtils").warn(`Unable to find ground definition for: ${e}. Try "world-elevation"`);else a=m(i,e);return a}let r=class extends w($(u.EventedMixin(h))){constructor(e){super(e),this.allLayers=new p({getCollections:()=>{var a,o,l;return[(a=this.basemap)==null?void 0:a.baseLayers,(o=this.ground)==null?void 0:o.layers,this.layers,(l=this.basemap)==null?void 0:l.referenceLayers]},getChildrenFunction:a=>"layers"in a?a.layers:null}),this.allTables=C(this),this.basemap=null,this.editableLayers=new p({getCollections:()=>[this.allLayers],itemFilterFunction:v}),this.ground=new i,this._basemapCache=f()}destroy(){L(this._basemapCache),this._basemapCache=null,this.allLayers.destroy(),this.allTables.destroy(),this.editableLayers.destroy(),this.basemap=n(this.basemap),n(this.ground),this._set("ground",null)}castBasemap(e){return T(e,this._basemapCache)}castGround(e){return I(e)??this._get("ground")}findLayerById(e){return this.allLayers.find(a=>a.id===e)}findTableById(e){return this.allTables.find(a=>a.id===e)}};s([t({readOnly:!0,dependsOn:[]})],r.prototype,"allLayers",void 0),s([t({readOnly:!0})],r.prototype,"allTables",void 0),s([t({type:g,json:{read:{source:"baseMap"},write:{target:"baseMap"}}})],r.prototype,"basemap",void 0),s([d("basemap")],r.prototype,"castBasemap",null),s([t({readOnly:!0})],r.prototype,"editableLayers",void 0),s([t({type:i,nonNullable:!0})],r.prototype,"ground",void 0),s([d("ground")],r.prototype,"castGround",null),r=s([b("esri.Map")],r);const O=r;export{O as g};
