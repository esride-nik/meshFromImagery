import{a5 as o,a6 as n,m7 as D,a9 as C,ae as V,dS as A,dT as re,dU as xe,ch as Fe,dx as ke,a7 as R,B as Ie,eH as E,D as ne,M as Re,e3 as J,ah as j,bh as Pe,e4 as Ae,eK as Je,kf as je,v as Ge,V as P,an as Ee,dk as Me,dl as qe,a0 as Ue,a1 as We,a2 as ze,cd as Ve,dO as Ze,E as Ke,ck as me,m as he,oT as He,s as O,I as Qe,S as Ye,j as Xe,f as et,al as tt,eo as rt,ad as ot,br as st,di as it,g9 as nt,aa as at}from"./index-b516d057.js";import{o as lt}from"./jsonUtils-52514725.js";import{i as ut}from"./originUtils-cfe4feaf.js";import{u as Q,c as pt,d as Te,f as ct,O as we}from"./RouteParameters-e6740eb5.js";import{f as yt,n as dt,h as ft,O as q}from"./Stop-bb61a730.js";import{a as mt}from"./GPMessage-28c119de.js";import{m as Z,c as K,C as U,T as W,j as z,S as Y,a as ht}from"./RouteInfo-fa5be8a1.js";import"./DictionaryLoader-e327eff9.js";import"./Version-1f969b2a.js";import"./FieldsIndex-e8db657f.js";import"./UnknownTimeZone-a05df022.js";import"./HeatmapColorStop-3fff4333.js";import"./heatmapUtils-7f42325f.js";import"./multiOriginJSONSupportUtils-c978f4c3.js";import"./commonProperties-da958896.js";let F=class extends V{constructor(t){super(t),this.break=new A({color:[255,255,255],size:12,outline:{color:[0,122,194],width:3}}),this.first=new A({color:[0,255,0],size:20,outline:{color:[255,255,255],width:4}}),this.unlocated=new A({color:[255,0,0],size:12,outline:{color:[255,255,255],width:3}}),this.last=new A({color:[255,0,0],size:20,outline:{color:[255,255,255],width:4}}),this.middle=new A({color:[51,51,51],size:12,outline:{color:[0,122,194],width:3}}),this.waypoint=new A({color:[255,255,255],size:12,outline:{color:[0,122,194],width:3}})}};o([n({types:D})],F.prototype,"break",void 0),o([n({types:D})],F.prototype,"first",void 0),o([n({types:D})],F.prototype,"unlocated",void 0),o([n({types:D})],F.prototype,"last",void 0),o([n({types:D})],F.prototype,"middle",void 0),o([n({types:D})],F.prototype,"waypoint",void 0),F=o([C("esri.layers.support.RouteStopSymbols")],F);const $e=F;let L=class extends V{constructor(t){super(t),this.directionLines=new re({color:[0,122,194],width:6}),this.directionPoints=new A({color:[255,255,255],size:6,outline:{color:[0,122,194],width:2}}),this.pointBarriers=new A({style:"x",size:10,outline:{color:[255,0,0],width:3}}),this.polygonBarriers=new xe({color:[255,170,0,.6],outline:{width:7.5,color:[255,0,0,.6]}}),this.polylineBarriers=new re({width:7.5,color:[255,85,0,.7]}),this.routeInfo=new re({width:8,color:[20,89,127]}),this.stops=new $e}};o([n({types:D})],L.prototype,"directionLines",void 0),o([n({types:D})],L.prototype,"directionPoints",void 0),o([n({types:D})],L.prototype,"pointBarriers",void 0),o([n({types:D})],L.prototype,"polygonBarriers",void 0),o([n({types:D})],L.prototype,"polylineBarriers",void 0),o([n({types:D})],L.prototype,"routeInfo",void 0),o([n({type:$e})],L.prototype,"stops",void 0),L=o([C("esri.layers.support.RouteSymbols")],L);const De=L,ve=new Fe({0:"informative",1:"process-definition",2:"process-start",3:"process-stop",50:"warning",100:"error",101:"empty",200:"abort"});let te=class extends mt{constructor(t){super(t),this.type=null}};o([n({type:String,json:{read:ve.read,write:ve.write}})],te.prototype,"type",void 0),te=o([C("esri.rest.support.NAMessage")],te);const wt=te;let H=class extends V{constructor(t){super(t)}};o([n({json:{read:{source:"string"}}})],H.prototype,"text",void 0),o([ke(yt,{name:"stringType"})],H.prototype,"type",void 0),H=o([C("esri.rest.support.DirectionsString")],H);const _e=H;let k=class extends V{constructor(t){super(t),this.arriveTime=null,this.arriveTimeOffset=null,this.geometry=null,this.strings=null}readArriveTimeOffset(t,r){return dt(r.ETA,r.arriveTimeUTC)}readGeometry(t,r){return Ie.fromJSON(r.point)}};o([n({type:Date,json:{read:{source:"arriveTimeUTC"}}})],k.prototype,"arriveTime",void 0),o([n()],k.prototype,"arriveTimeOffset",void 0),o([R("arriveTimeOffset",["arriveTimeUTC","ETA"])],k.prototype,"readArriveTimeOffset",null),o([n({type:Ie})],k.prototype,"geometry",void 0),o([R("geometry",["point"])],k.prototype,"readGeometry",null),o([n({type:[_e]})],k.prototype,"strings",void 0),k=o([C("esri.rest.support.DirectionsEvent")],k);const vt=k;function gt(e){if(e==null||e==="")return null;let t=0,r=0,i=0,l=0;const p=[];let u,c,w,v,a,g,N,B,m=0,S=0,d=0;if(a=e.match(/((\+|\-)[^\+\-\|]+|\|)/g),a||(a=[]),parseInt(a[m],32)===0){m=2;const s=parseInt(a[m],32);m++,g=parseInt(a[m],32),m++,1&s&&(S=a.indexOf("|")+1,N=parseInt(a[S],32),S++),2&s&&(d=a.indexOf("|",S)+1,B=parseInt(a[d],32),d++)}else g=parseInt(a[m],32),m++;for(;m<a.length&&a[m]!=="|";){u=parseInt(a[m],32)+t,m++,t=u,c=parseInt(a[m],32)+r,m++,r=c;const s=[u/g,c/g];S&&(v=parseInt(a[S],32)+i,S++,i=v,s.push(v/N)),d&&(w=parseInt(a[d],32)+l,d++,l=w,s.push(w/B)),p.push(s)}return{paths:[p],hasZ:S>0,hasM:d>0}}let M=class extends E{constructor(e){super(e),this.events=null,this.strings=null}readGeometry(e,t){const r=gt(t.compressedGeometry);return r!=null?ne.fromJSON(r):null}};o([n({type:[vt]})],M.prototype,"events",void 0),o([R("geometry",["compressedGeometry"])],M.prototype,"readGeometry",null),o([n({type:[_e]})],M.prototype,"strings",void 0),M=o([C("esri.rest.support.DirectionsFeature")],M);const St=M;function bt(e,t){if(e.length===0)return new ne({spatialReference:t});const r=[];for(const u of e)for(const c of u.paths)r.push(...c);const i=[];r.forEach((u,c)=>{c!==0&&u[0]===r[c-1][0]&&u[1]===r[c-1][1]||i.push(u)});const{hasM:l,hasZ:p}=e[0];return new ne({hasM:l,hasZ:p,paths:[i],spatialReference:t})}let T=class extends J{constructor(t){super(t),this.extent=null,this.features=[],this.geometryType="polyline",this.routeId=null,this.routeName=null,this.totalDriveTime=null,this.totalLength=null,this.totalTime=null}readFeatures(t,r){if(!t)return[];const i=r.summary.envelope.spatialReference??r.spatialReference,l=i&&j.fromJSON(i);return t.map(p=>{const u=St.fromJSON(p);if(u.geometry!=null&&(u.geometry.spatialReference=l),u.events!=null)for(const c of u.events)c.geometry!=null&&(c.geometry.spatialReference=l);return u})}get mergedGeometry(){return this.features?bt(this.features.map(({geometry:t})=>t),this.extent.spatialReference):null}get strings(){return this.features.flatMap(({strings:t})=>t).filter(Pe)}};o([n({type:Re,json:{read:{source:"summary.envelope"}}})],T.prototype,"extent",void 0),o([n({nonNullable:!0})],T.prototype,"features",void 0),o([R("features")],T.prototype,"readFeatures",null),o([n()],T.prototype,"geometryType",void 0),o([n({readOnly:!0})],T.prototype,"mergedGeometry",null),o([n()],T.prototype,"routeId",void 0),o([n()],T.prototype,"routeName",void 0),o([n({value:null,readOnly:!0})],T.prototype,"strings",null),o([n({json:{read:{source:"summary.totalDriveTime"}}})],T.prototype,"totalDriveTime",void 0),o([n({json:{read:{source:"summary.totalLength"}}})],T.prototype,"totalLength",void 0),o([n({json:{read:{source:"summary.totalTime"}}})],T.prototype,"totalTime",void 0),T=o([C("esri.rest.support.DirectionsFeatureSet")],T);const Bt=T;let $=class extends V{constructor(t){super(t),this.directionLines=null,this.directionPoints=null,this.directions=null,this.route=null,this.routeName=null,this.stops=null,this.traversedEdges=null,this.traversedJunctions=null,this.traversedTurns=null}};o([n({type:J,json:{write:!0}})],$.prototype,"directionLines",void 0),o([n({type:J,json:{write:!0}})],$.prototype,"directionPoints",void 0),o([n({type:Bt,json:{write:!0}})],$.prototype,"directions",void 0),o([n({type:E,json:{write:!0}})],$.prototype,"route",void 0),o([n({type:String,json:{write:!0}})],$.prototype,"routeName",void 0),o([n({type:[E],json:{write:!0}})],$.prototype,"stops",void 0),o([n({type:J,json:{write:!0}})],$.prototype,"traversedEdges",void 0),o([n({type:J,json:{write:!0}})],$.prototype,"traversedJunctions",void 0),o([n({type:J,json:{write:!0}})],$.prototype,"traversedTurns",void 0),$=o([C("esri.rest.support.RouteResult")],$);const Nt=$;function oe(e){return e?J.fromJSON(e).features.filter(Pe):[]}let _=class extends V{constructor(t){super(t),this.messages=null,this.pointBarriers=null,this.polylineBarriers=null,this.polygonBarriers=null,this.routeResults=null}readPointBarriers(t,r){return oe(r.barriers)}readPolylineBarriers(t){return oe(t)}readPolygonBarriers(t){return oe(t)}};o([n({type:[wt]})],_.prototype,"messages",void 0),o([n({type:[E]})],_.prototype,"pointBarriers",void 0),o([R("pointBarriers",["barriers"])],_.prototype,"readPointBarriers",null),o([n({type:[E]})],_.prototype,"polylineBarriers",void 0),o([R("polylineBarriers")],_.prototype,"readPolylineBarriers",null),o([n({type:[E]})],_.prototype,"polygonBarriers",void 0),o([R("polygonBarriers")],_.prototype,"readPolygonBarriers",null),o([n({type:[Nt]})],_.prototype,"routeResults",void 0),_=o([C("esri.rest.support.RouteSolveResult")],_);const It=_;function X(e){return e instanceof J}async function Rt(e,t,r){const i=[],l=[],p={},u={},c=Ae(e),{path:w}=c;X(t.stops)&&Q(t.stops.features,l,"stops.features",p),X(t.pointBarriers)&&Q(t.pointBarriers.features,l,"pointBarriers.features",p),X(t.polylineBarriers)&&Q(t.polylineBarriers.features,l,"polylineBarriers.features",p),X(t.polygonBarriers)&&Q(t.polygonBarriers.features,l,"polygonBarriers.features",p);const v=await Je(l);for(const B in p){const m=p[B];i.push(B),u[B]=v.slice(m[0],m[1])}if(pt(u,i)){let B=null;try{B=await Te(w,t.apiKey,r)}catch{}B&&!B.hasZ&&ct(u,i)}for(const B in u)u[B].forEach((m,S)=>{je(t,B)[S].geometry=m});const a={...r,query:{...c.query,...ft(t),f:"json"}},g=w.endsWith("/solve")?w:`${w}/solve`,{data:N}=await Ge(g,a);return Pt(N)}function Pt(e){const{barriers:t,directionLines:r,directionPoints:i,directions:l,messages:p,polygonBarriers:u,polylineBarriers:c,routes:w,stops:v,traversedEdges:a,traversedJunctions:g,traversedTurns:N}=e,B=s=>{const b=S.find(I=>I.routeName===s);if(b!=null)return b;const f={routeId:S.length+1,routeName:s};return S.push(f),f},m=s=>{const b=S.find(I=>I.routeId===s);if(b!=null)return b;const f={routeId:s,routeName:null};return S.push(f),f},S=[];w==null||w.features.forEach((s,b)=>{s.geometry.spatialReference=w.spatialReference??void 0;const f=s.attributes.Name,I=b+1;S.push({routeId:I,routeName:f,route:s})}),l==null||l.forEach(s=>{const{routeName:b}=s;B(b).directions=s});const d=((v==null?void 0:v.features.every(s=>s.attributes.RouteName==null))??!1)&&S.length>0?S[0].routeName:null;return v==null||v.features.forEach(s=>{var I;s.geometry&&((I=s.geometry).spatialReference??(I.spatialReference=v.spatialReference??void 0));const b=d??s.attributes.RouteName,f=B(b);f.stops??(f.stops=[]),f.stops.push(s)}),r==null||r.features.forEach(s=>{const b=s.attributes.RouteID,f=m(b),{geometryType:I,spatialReference:x}=r;f.directionLines??(f.directionLines={features:[],geometryType:I,spatialReference:x}),f.directionLines.features.push(s)}),i==null||i.features.forEach(s=>{const b=s.attributes.RouteID,f=m(b),{geometryType:I,spatialReference:x}=i;f.directionPoints??(f.directionPoints={features:[],geometryType:I,spatialReference:x}),f.directionPoints.features.push(s)}),a==null||a.features.forEach(s=>{const b=s.attributes.RouteID,f=m(b),{geometryType:I,spatialReference:x}=a;f.traversedEdges??(f.traversedEdges={features:[],geometryType:I,spatialReference:x}),f.traversedEdges.features.push(s)}),g==null||g.features.forEach(s=>{const b=s.attributes.RouteID,f=m(b),{geometryType:I,spatialReference:x}=g;f.traversedJunctions??(f.traversedJunctions={features:[],geometryType:I,spatialReference:x}),f.traversedJunctions.features.push(s)}),N==null||N.features.forEach(s=>{const b=s.attributes.RouteID,f=m(b);f.traversedTurns??(f.traversedTurns={features:[]}),f.traversedTurns.features.push(s)}),It.fromJSON({routeResults:S,barriers:t,polygonBarriers:u,polylineBarriers:c,messages:p})}function se(e){return e.length?e:null}function ae(e){switch(e){case"esriGeometryPoint":return{type:"esriSMS",style:"esriSMSCircle",size:12,color:[0,0,0,0],outline:ae("esriGeometryPolyline")};case"esriGeometryPolyline":return{type:"esriSLS",style:"esriSLSSolid",width:1,color:[0,0,0,0]};case"esriGeometryPolygon":return{type:"esriSFS",style:"esriSFSNull",outline:ae("esriGeometryPolyline")}}}function ee(e){return"layers"in e}function Tt(e){return e.declaredClass==="esri.rest.support.FeatureSet"}function $t(e){return e.declaredClass==="esri.rest.support.NetworkFeatureSet"}function Dt(e,t,r){var le,ue,pe,ce,ye,de;const i=(le=t.networkDataset)==null?void 0:le.networkAttributes,l=(i==null?void 0:i.filter(({usageType:y})=>y==="cost"))??[],p=r.travelMode??t.defaultTravelMode;if(p==null)return void Le.warn("route-layer:missing-travel-mode","The routing service must have a default travel mode or one must be specified in the route parameter.");const{timeAttributeName:u,distanceAttributeName:c}=p,w=l.find(({name:y})=>y===u),v=l.find(({name:y})=>y===c),a=((ue=r.travelMode)==null?void 0:ue.impedanceAttributeName)??r.impedanceAttribute??t.impedance,g=w==null?void 0:w.units,N=v==null?void 0:v.units;if(!g||!N)throw new O("routelayer:unknown-impedance-units","the units of either the distance or time impedance are unknown");const B=r.directionsLanguage??t.directionsLanguage,m=r.accumulateAttributes??t.accumulateAttributeNames??[],S=new Set(l.filter(({name:y})=>y===u||y===c||y===a||y!=null&&m.includes(y)).map(({name:y})=>y)),d=y=>{for(const fe in y)S.has(fe)||delete y[fe]};for(const y of e.pointBarriers)y.costs!=null&&(y.addedCost=y.costs[a]??0,d(y.costs));for(const y of e.polygonBarriers)y.costs!=null&&(y.scaleFactor=y.costs[a]??1,d(y.costs));for(const y of e.polylineBarriers)y.costs!=null&&(y.scaleFactor=y.costs[a]??1,d(y.costs));const{routeInfo:s}=e,{findBestSequence:b,preserveFirstStop:f,preserveLastStop:I,startTimeIsUTC:x,timeWindowsAreUTC:Ce}=r;s.analysisSettings=new ht({accumulateAttributes:m,directionsLanguage:B,findBestSequence:b,preserveFirstStop:f,preserveLastStop:I,startTimeIsUTC:x,timeWindowsAreUTC:Ce,travelMode:p}),s.totalDuration=G(((pe=s.totalCosts)==null?void 0:pe[u])??0,g),s.totalDistance=ie(((ce=s.totalCosts)==null?void 0:ce[c])??0,N),s.totalLateDuration=G(((ye=s.totalViolations)==null?void 0:ye[u])??0,g),s.totalWaitDuration=G(((de=s.totalWait)==null?void 0:de[u])??0,g),s.totalCosts!=null&&d(s.totalCosts),s.totalViolations!=null&&d(s.totalViolations),s.totalWait!=null&&d(s.totalWait);for(const y of e.stops)y.serviceCosts!=null&&(y.serviceDuration=G(y.serviceCosts[u]??0,g),y.serviceDistance=ie(y.serviceCosts[c]??0,N),d(y.serviceCosts)),y.cumulativeCosts!=null&&(y.cumulativeDuration=G(y.cumulativeCosts[u]??0,g),y.cumulativeDistance=ie(y.cumulativeCosts[c]??0,N),d(y.cumulativeCosts)),y.violations!=null&&(y.lateDuration=G(y.violations[u]??0,g),d(y.violations)),y.wait!=null&&(y.waitDuration=G(y.wait[u]??0,g),d(y.wait))}async function ge(e){const t=j.WGS84;return await st(e.spatialReference,t),it(e,t)}function G(e,t){switch(t){case"seconds":return e/60;case"hours":return 60*e;case"days":return 60*e*24;default:return e}}function ie(e,t){return t==="decimal-degrees"||t==="points"||t==="unknown"?e:nt(e,t,"meters")}function _t(e){const{attributes:t,geometry:r,popupTemplate:i,symbol:l}=e.toGraphic().toJSON();return{attributes:t,geometry:r,popupInfo:i,symbol:l}}const Ot=P.ofType(Z),Lt=P.ofType(K),Se=P.ofType(U),be=P.ofType(W),Be=P.ofType(z),Ne=P.ofType(q),Oe="esri.layers.RouteLayer",Le=Ee.getLogger(Oe);let h=class extends Me(qe(Ue(We(ze(at))))){constructor(e){super(e),this._cachedServiceDescription=null,this._featureCollection=null,this._type="Feature Collection",this.defaultSymbols=new De,this.directionLines=null,this.directionPoints=null,this.featureCollectionType="route",this.legendEnabled=!1,this.maxScale=0,this.minScale=0,this.pointBarriers=new Se,this.polygonBarriers=new be,this.polylineBarriers=new Be,this.routeInfo=null,this.spatialReference=j.WGS84,this.stops=new Ne,this.type="route";const t=()=>{this._setStopSymbol(this.stops)};this.addHandles(Ve(()=>this.stops,"change",t,{sync:!0,onListenerAdd:t}))}writeFeatureCollectionWebmap(e,t,r,i){const l=[this._writePolygonBarriers(),this._writePolylineBarriers(),this._writePointBarriers(),this._writeRouteInfo(),this._writeDirectionLines(),this._writeDirectionPoints(),this._writeStops()].filter(c=>!!c),p=l.map((c,w)=>w),u=i.origin==="web-map"?"featureCollection.layers":"layers";Ze(u,l,t),t.opacity=this.opacity,t.visibility=this.visible,t.visibleLayers=p}readDirectionLines(e,t){return this._getNetworkFeatures(t,"DirectionLines",r=>Z.fromGraphic(r))}readDirectionPoints(e,t){return this._getNetworkFeatures(t,"DirectionPoints",r=>K.fromGraphic(r))}get fullExtent(){var l;const e=new Re({xmin:-180,ymin:-90,xmax:180,ymax:90,spatialReference:j.WGS84});if(((l=this.routeInfo)==null?void 0:l.geometry)!=null)return this.routeInfo.geometry.extent??e;if(this.stops==null)return e;const t=this.stops.filter(p=>p.geometry!=null);if(t.length<2)return e;const{spatialReference:r}=t.at(0).geometry;if(r==null)return e;const i=t.toArray().map(p=>{const u=p.geometry;return[u.x,u.y]});return new Ke({points:i,spatialReference:r}).extent}readMaxScale(e,t){var l;const r=ee(t)?t.layers:(l=t.featureCollection)==null?void 0:l.layers,i=r==null?void 0:r.find(p=>p.layerDefinition.maxScale!=null);return(i==null?void 0:i.layerDefinition.maxScale)??0}readMinScale(e,t){var l;const r=ee(t)?t.layers:(l=t.featureCollection)==null?void 0:l.layers,i=r==null?void 0:r.find(p=>p.layerDefinition.minScale!=null);return(i==null?void 0:i.layerDefinition.minScale)??0}readPointBarriers(e,t){return this._getNetworkFeatures(t,"Barriers",r=>U.fromGraphic(r))}readPolygonBarriers(e,t){return this._getNetworkFeatures(t,"PolygonBarriers",r=>W.fromGraphic(r))}readPolylineBarriers(e,t){return this._getNetworkFeatures(t,"PolylineBarriers",r=>z.fromGraphic(r))}readRouteInfo(e,t){const r=this._getNetworkFeatures(t,"RouteInfo",i=>Y.fromGraphic(i));return r.length>0?r.at(0):null}readSpatialReference(e,t){var c,w;const r=ee(t)?t.layers:(c=t.featureCollection)==null?void 0:c.layers;if(!(r!=null&&r.length))return j.WGS84;const{layerDefinition:i,featureSet:l}=r[0],p=l.features[0],u=((w=p==null?void 0:p.geometry)==null?void 0:w.spatialReference)??l.spatialReference??i.spatialReference??i.extent.spatialReference??me;return j.fromJSON(u)}readStops(e,t){return this._getNetworkFeatures(t,"Stops",r=>q.fromGraphic(r),r=>this._setStopSymbol(r))}get title(){var e;return((e=this.routeInfo)==null?void 0:e.name)!=null?this.routeInfo.name:"Route"}set title(e){this._overrideIfSome("title",e)}get url(){return he.routeServiceUrl}set url(e){e!=null?this._set("url",He(e,Le)):this._set("url",he.routeServiceUrl)}load(e){return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Feature Collection"]},e)),Promise.resolve(this)}removeAll(){this.removeResult(),this.pointBarriers.removeAll(),this.polygonBarriers.removeAll(),this.polylineBarriers.removeAll(),this.stops.removeAll()}removeResult(){this.directionLines!=null&&(this.directionLines.removeAll(),this._set("directionLines",null)),this.directionPoints!=null&&(this.directionPoints.removeAll(),this._set("directionPoints",null)),this.routeInfo!=null&&this._set("routeInfo",null)}async save(){await this.load();const{fullExtent:e,portalItem:t}=this;if(!t)throw new O("routelayer:portal-item-not-set","save() requires to the layer to have a portal item");if(!t.id)throw new O("routelayer:portal-item-not-saved","Please use saveAs() first to save the routelayer");if(t.type!=="Feature Collection")throw new O("routelayer:portal-item-wrong-type",'Portal item needs to have type "Feature Collection"');if(this.routeInfo==null)throw new O("routelayer:route-unsolved","save() requires a solved route");const{portal:r}=t;await r.signIn(),r.user||await t.reload();const{itemUrl:i,itemControl:l}=t;if(l!=="admin"&&l!=="update")throw new O("routelayer:insufficient-permissions","To save this layer, you need to be the owner or an administrator of your organization");const p={messages:[],origin:"portal-item",portal:r,url:i?Qe(i):void 0,writtenProperties:[]},u=this.write(void 0,p);return t.extent=await ge(e),t.title=this.title,await t.update({data:u}),t}async saveAs(e,t={}){var c;if(await this.load(),this.routeInfo==null)throw new O("routelayer:route-unsolved","saveAs() requires a solved route");const r=Ye.from(e).clone();r.extent??(r.extent=await ge(this.fullExtent)),r.id=null,r.portal??(r.portal=Xe.getDefault()),r.title??(r.title=this.title),r.type="Feature Collection",r.typeKeywords=["Data","Feature Collection",et.MULTI_LAYER,"Route Layer"];const{portal:i}=r,l={messages:[],origin:"portal-item",portal:i,url:null,writtenProperties:[]};await i.signIn();const p=t==null?void 0:t.folder,u=this.write(void 0,l);return await((c=i.user)==null?void 0:c.addItem({item:r,folder:p,data:u})),this.portalItem=r,ut(l),l.portalItem=r,r}async solve(e,t){const r=(e==null?void 0:e.stops)??this.stops,i=(e==null?void 0:e.pointBarriers)??se(this.pointBarriers),l=(e==null?void 0:e.polylineBarriers)??se(this.polylineBarriers),p=(e==null?void 0:e.polygonBarriers)??se(this.polygonBarriers);if(r==null)throw new O("routelayer:undefined-stops","the route layer must have stops defined in the route parameters.");if((Tt(r)||$t(r))&&r.features.length<2||P.isCollection(r)&&r.length<2)throw new O("routelayer:insufficent-stops","the route layer must have two or more stops to solve a route.");if(P.isCollection(r))for(const d of r)d.routeName=null;const u=e==null?void 0:e.apiKey,c=this.url,w=await this._getServiceDescription(c,u,t),v=(e==null?void 0:e.travelMode)??w.defaultTravelMode,a=(e==null?void 0:e.accumulateAttributes)??[];v!=null&&(a.push(v.distanceAttributeName),v.timeAttributeName&&a.push(v.timeAttributeName));const g={startTime:new Date},N={accumulateAttributes:a,directionsOutputType:"featuresets",ignoreInvalidLocations:!0,pointBarriers:i,polylineBarriers:l,polygonBarriers:p,preserveFirstStop:!0,preserveLastStop:!0,returnBarriers:!!i,returnDirections:!0,returnPolygonBarriers:!!p,returnPolylineBarriers:!!l,returnRoutes:!0,returnStops:!0,stops:r},B=e?we.from(e):new we;for(const d in g)B[d]==null&&(B[d]=g[d]);let m;B.set(N);try{m=await Rt(c,B,t)}catch(d){throw tt(d)?d:new O("routelayer:failed-route-request","the routing request failed",{error:d})}const S=this._toRouteLayerSolution(m);return this._isOverridden("title")||(this.title=S.routeInfo.name??"Route"),Dt(S,w,B),S}update(e){const{stops:t,directionLines:r,directionPoints:i,pointBarriers:l,polylineBarriers:p,polygonBarriers:u,routeInfo:c}=e;this.set({stops:t,pointBarriers:l,polylineBarriers:p,polygonBarriers:u}),this._set("directionLines",r),this._set("directionPoints",i),this._set("routeInfo",c),c.geometry!=null&&(this.spatialReference=c.geometry.spatialReference)}_getNetworkFeatures(e,t,r,i){var S;const l=ee(e)?e.layers:(S=e.featureCollection)==null?void 0:S.layers,p=l==null?void 0:l.find(d=>d.layerDefinition.name===t);if(p==null)return new P;const{layerDefinition:u,popupInfo:c,featureSet:w}=p,v=u.drawingInfo.renderer,{features:a}=w,g=w.spatialReference??u.spatialReference??u.extent.spatialReference??me,N=v&&lt(v),B=j.fromJSON(g),m=a.map(d=>{const s=E.fromJSON(d);s.geometry!=null&&d.geometry!=null&&d.geometry.spatialReference==null&&(s.geometry.spatialReference=B);const b=r(s);return b.symbol??(b.symbol=(N==null?void 0:N.getSymbol(s))??this._getNetworkSymbol(t)),b.popupTemplate??(b.popupTemplate=c&&rt.fromJSON(c)),b});return i&&m.some(d=>!d.symbol)&&i(m),new P(m)}_getNetworkSymbol(e){switch(e){case"Barriers":return this.defaultSymbols.pointBarriers;case"DirectionPoints":return this.defaultSymbols.directionPoints;case"DirectionLines":return this.defaultSymbols.directionLines;case"PolylineBarriers":return this.defaultSymbols.polylineBarriers;case"PolygonBarriers":return this.defaultSymbols.polygonBarriers;case"RouteInfo":return this.defaultSymbols.routeInfo;case"Stops":return null}}async _getServiceDescription(e,t,r){if(this._cachedServiceDescription!=null&&this._cachedServiceDescription.url===e)return this._cachedServiceDescription.serviceDescription;const i=await Te(e,t,r);return this._cachedServiceDescription={serviceDescription:i,url:e},i}_setStopSymbol(e){if(!e||e.length===0||this.defaultSymbols.stops==null||e.every(({symbol:a})=>a!=null))return;const{first:t,last:r,middle:i,unlocated:l,waypoint:p,break:u}=this.defaultSymbols.stops;if(this.routeInfo==null||e.length===1)return void e.forEach((a,g)=>{switch(g){case 0:a.symbol=t;break;case e.length-1:a.symbol=r;break;default:a.symbol=i}});const c=e.map(({sequence:a})=>a).filter(a=>a!=null),w=Math.min(...c),v=Math.max(...c);for(const a of e)a.sequence!==w?a.sequence!==v?a.status==="ok"||a.status==="not-located-on-closest"?a.locationType!=="waypoint"?a.locationType!=="break"?a.symbol=i:a.symbol=u:a.symbol=p:a.symbol=l:a.symbol=r:a.symbol=t}_toRouteLayerSolution(e){var v,a,g,N,B,m,S;const t=(v=e.routeResults[0].stops)==null?void 0:v.map(d=>q.fromJSON(d.toJSON()));this._setStopSymbol(t);const r=new Ne(t),i=new be((a=e.polygonBarriers)==null?void 0:a.map(d=>{const s=W.fromJSON(d.toJSON());return s.symbol=this.defaultSymbols.polygonBarriers,s})),l=new Be((g=e.polylineBarriers)==null?void 0:g.map(d=>{const s=z.fromJSON(d.toJSON());return s.symbol=this.defaultSymbols.polylineBarriers,s})),p=new Se((N=e.pointBarriers)==null?void 0:N.map(d=>{const s=U.fromJSON(d.toJSON());return s.symbol=this.defaultSymbols.pointBarriers,s})),u=(B=e.routeResults[0].route)==null?void 0:B.toJSON(),c=Y.fromJSON(u);c.symbol=this.defaultSymbols.routeInfo;const w=new Lt((m=e.routeResults[0].directionPoints)==null?void 0:m.features.map(d=>{const s=K.fromJSON(d.toJSON());return s.symbol=this.defaultSymbols.directionPoints,s}));return{directionLines:new Ot((S=e.routeResults[0].directionLines)==null?void 0:S.features.map(d=>{const s=Z.fromJSON(d.toJSON());return s.symbol=this.defaultSymbols.directionLines,s})),directionPoints:w,pointBarriers:p,polygonBarriers:i,polylineBarriers:l,routeInfo:c,stops:r}}_writeDirectionLines(){return this._writeNetworkFeatures(this.directionLines,this.defaultSymbols.directionLines,"esriGeometryPolyline",Z.fields,Z.popupInfo,"DirectionLines","Direction Lines")}_writeDirectionPoints(){return this._writeNetworkFeatures(this.directionPoints,this.defaultSymbols.directionPoints,"esriGeometryPoint",K.fields,K.popupInfo,"DirectionPoints","Direction Points")}_writeNetworkFeatures(e,t,r,i,l,p,u){if(!(e!=null&&e.length))return null;const c=this.spatialReference.toJSON(),{fullExtent:w,maxScale:v,minScale:a}=this;return{featureSet:{features:e.toArray().map(g=>_t(g)),geometryType:r,spatialReference:c},layerDefinition:{capabilities:"Query,Update,Editing",drawingInfo:{renderer:{type:"simple",symbol:t!=null?t.toJSON():ae(r)}},extent:w.toJSON(),fields:i,geometryType:r,hasM:!1,hasZ:!1,maxScale:v,minScale:a,name:p,objectIdField:"ObjectID",spatialReference:c,title:u,type:"Feature Layer",typeIdField:""},popupInfo:l}}_writePointBarriers(){return this._writeNetworkFeatures(this.pointBarriers,this.defaultSymbols.pointBarriers,"esriGeometryPoint",U.fields,U.popupInfo,"Barriers","Point Barriers")}_writePolygonBarriers(){return this._writeNetworkFeatures(this.polygonBarriers,this.defaultSymbols.polygonBarriers,"esriGeometryPolygon",W.fields,W.popupInfo,"PolygonBarriers","Polygon Barriers")}_writePolylineBarriers(){return this._writeNetworkFeatures(this.polylineBarriers,this.defaultSymbols.polylineBarriers,"esriGeometryPolyline",z.fields,z.popupInfo,"PolylineBarriers","Line Barriers")}_writeRouteInfo(){return this._writeNetworkFeatures(this.routeInfo!=null?new P([this.routeInfo]):null,this.defaultSymbols.routeInfo,"esriGeometryPolyline",Y.fields,Y.popupInfo,"RouteInfo","Route Details")}_writeStops(){var p,u,c;const e=this._writeNetworkFeatures(this.stops,null,"esriGeometryPoint",q.fields,q.popupInfo,"Stops","Stops");if(e==null)return null;const{stops:t}=this.defaultSymbols,r=(p=t==null?void 0:t.first)==null?void 0:p.toJSON(),i=(u=t==null?void 0:t.middle)==null?void 0:u.toJSON(),l=(c=t==null?void 0:t.last)==null?void 0:c.toJSON();return e.layerDefinition.drawingInfo.renderer={type:"uniqueValue",field1:"Sequence",defaultSymbol:i,uniqueValueInfos:[{value:"1",symbol:r,label:"First Stop"},{value:`${this.stops.length}`,symbol:l,label:"Last Stop"}]},e}};o([n({readOnly:!0,json:{read:!1,origins:{"portal-item":{write:{allowNull:!0,ignoreOrigin:!0}},"web-map":{write:{overridePolicy(){return{allowNull:!0,ignoreOrigin:this.portalItem==null}}}}}}})],h.prototype,"_featureCollection",void 0),o([ot(["web-map","portal-item"],"_featureCollection")],h.prototype,"writeFeatureCollectionWebmap",null),o([n({readOnly:!0,json:{read:!1,origins:{"web-map":{write:{target:"type",overridePolicy(){return{ignoreOrigin:this.portalItem!=null}}}}}}})],h.prototype,"_type",void 0),o([n({nonNullable:!0,type:De})],h.prototype,"defaultSymbols",void 0),o([n({readOnly:!0})],h.prototype,"directionLines",void 0),o([R(["web-map","portal-item"],"directionLines",["layers","featureCollection.layers"])],h.prototype,"readDirectionLines",null),o([n({readOnly:!0})],h.prototype,"directionPoints",void 0),o([R(["web-map","portal-item"],"directionPoints",["layers","featureCollection.layers"])],h.prototype,"readDirectionPoints",null),o([n({readOnly:!0,json:{read:!1,origins:{"web-map":{write:{ignoreOrigin:!0}}}}})],h.prototype,"featureCollectionType",void 0),o([n({readOnly:!0})],h.prototype,"fullExtent",null),o([n({json:{origins:{"web-map":{name:"featureCollection.showLegend"}},write:!0}})],h.prototype,"legendEnabled",void 0),o([n({type:["show","hide"]})],h.prototype,"listMode",void 0),o([n({type:Number,nonNullable:!0,json:{write:!1}})],h.prototype,"maxScale",void 0),o([R(["web-map","portal-item"],"maxScale",["layers","featureCollection.layers"])],h.prototype,"readMaxScale",null),o([n({type:Number,nonNullable:!0,json:{write:!1}})],h.prototype,"minScale",void 0),o([R(["web-map","portal-item"],"minScale",["layers","featureCollection.layers"])],h.prototype,"readMinScale",null),o([n({type:["ArcGISFeatureLayer"],value:"ArcGISFeatureLayer"})],h.prototype,"operationalLayerType",void 0),o([n({nonNullable:!0,type:P.ofType(U)})],h.prototype,"pointBarriers",void 0),o([R(["web-map","portal-item"],"pointBarriers",["layers","featureCollection.layers"])],h.prototype,"readPointBarriers",null),o([n({nonNullable:!0,type:P.ofType(W)})],h.prototype,"polygonBarriers",void 0),o([R(["web-map","portal-item"],"polygonBarriers",["layers","featureCollection.layers"])],h.prototype,"readPolygonBarriers",null),o([n({nonNullable:!0,type:P.ofType(z)})],h.prototype,"polylineBarriers",void 0),o([R(["web-map","portal-item"],"polylineBarriers",["layers","featureCollection.layers"])],h.prototype,"readPolylineBarriers",null),o([n({readOnly:!0})],h.prototype,"routeInfo",void 0),o([R(["web-map","portal-item"],"routeInfo",["layers","featureCollection.layers"])],h.prototype,"readRouteInfo",null),o([n({type:j})],h.prototype,"spatialReference",void 0),o([R(["web-map","portal-item"],"spatialReference",["layers","featureCollection.layers"])],h.prototype,"readSpatialReference",null),o([n({nonNullable:!0,type:P.ofType(q)})],h.prototype,"stops",void 0),o([R(["web-map","portal-item"],"stops",["layers","featureCollection.layers"])],h.prototype,"readStops",null),o([n()],h.prototype,"title",null),o([n({readOnly:!0,json:{read:!1}})],h.prototype,"type",void 0),o([n()],h.prototype,"url",null),h=o([C(Oe)],h);const rr=h;export{rr as default};
