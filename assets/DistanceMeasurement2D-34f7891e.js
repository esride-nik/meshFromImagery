import{a5 as i,a6 as s,a9 as C,eL as x,km as A,kl as N,cb as y,h3 as D,b9 as f,B as k,eH as S,dD as j,kN as R,dV as q,kd as V,lp as F,lo as J,dS as I,D as K,di as w,ah as U,g9 as Q,kp as b,gs as X,eJ as Y,gl as Z}from"./index-b516d057.js";import{e as B,O as ee,n as G,i as te}from"./jsxFactory-92036771.js";import{e as ie}from"./defaultUnit-414db021.js";import{g as se,d as re,D as oe}from"./unitFormatUtils-67047561.js";import{geodesicLength as ne,geodesicDensify as ae,planarLength as le}from"./geometryEngine-656a968c.js";import{M as E,y as M,v as L}from"./geodesicUtils-822c19ca.js";import{l as me}from"./ViewingMode-5d7d590b.js";import{l as he}from"./Draw-ee21c93a.js";import{l as ce,d as ue,v as pe,x as de}from"./InteractiveToolBase-ddd44c70.js";import{S as ve}from"./GraphicManipulator-bf7f8b04.js";import{n as ye,u as we}from"./MeasurementWidgetContent-60198b21.js";import{e as z}from"./globalCss-94006b67.js";import"./uuid-709b6c67.js";import"./getDefaultUnitForView-d1ffbf16.js";import"./Cyclical-4c223a04.js";import"./geometryEngineBase-dfbd3a67.js";import"./hydrated-40effdd0.js";import"./dehydratedPoint-5a1dfed5.js";import"./SnappingVisualizer2D-4547907b.js";import"./enums-f1a6a48a.js";import"./snappingUtils-93e84fbe.js";import"./Query-071039d7.js";import"./FullTextSearch-12e0754c.js";import"./QuantizationParameters-f983cf8d.js";import"./screenUtils-8dc4a7f9.js";import"./signal-51ed66f5.js";import"./elevationInfoUtils-be36d866.js";import"./SnappingContext-90969376.js";import"./PointSnappingHint-671c9f09.js";import"./EditGeometryOperations-c2e73f2d.js";import"./geometry2dUtils-a99dcf3d.js";import"./SnappingOperation-4a4ee09b.js";import"./Scheduler-ff5943a4.js";import"./debugFlags-9a30f077.js";import"./RenderState-1d6218ee.js";import"./surfaceCoordinateSystems-1cfad4a3.js";import"./UpdatingHandles-7949a657.js";import"./dehydratedFeatureComparison-7855b188.js";import"./SketchTooltipOptions-cc43c059.js";import"./SnappingDragPipelineStep-e275580d.js";import"./hydratedFeatures-2365c307.js";import"./mat2d-d4af8487.js";import"./mat2df64-4d1a9198.js";import"./interfaces-1a80c8eb.js";import"./drawUtils-bd7471ac.js";import"./interfaces-0421c5e6.js";import"./defaults-4faa92e6.js";import"./defaultsJSON-59981e75.js";import"./drapedUtils-5cffceb9.js";import"./UnitSelect-52961079.js";const g=1e5;let u=class extends ce{constructor(e){super(e),this._drawActive=!1,this._measurementLayer=new x({internal:!0,listMode:"hide",visible:!1}),this._manipulatorLayer=new x({internal:!0,listMode:"hide",visible:!1}),this._vertices=[],this.geodesicDistanceThreshold=1e5,this.measurement=null,this.measurementLabel=null}initialize(){A("esri/core/t9n/Units").then(t=>{this.messages=t}),this.addHandles(N(async()=>{this.messages=await A("esri/core/t9n/Units")}));const e=this.view;this._draw=new he({view:e}),e.map.addMany([this._measurementLayer,this._manipulatorLayer]),e.focus(),this.addHandles([y(()=>[this.unit,this.geodesicDistanceThreshold,this.messages],()=>{this._updatePolylines()},D),y(()=>[this.view.effectiveTheme.accentColor,this.view.effectiveTheme.textColor],()=>{if(!this._vertices.length)return;const t=this._vertices.map(({coord:r})=>r);for(const{handle:r}of this._vertices)r.remove();this._vertices=[],this._measurementLayer.removeAll(),this._manipulatorLayer.removeAll(),this.manipulators.removeAll(),this._updateSketch(t)})])}destroy(){const{map:e}=this.view;this._draw.view=null,this._draw=f(this._draw),e.removeMany([this._measurementLayer,this._manipulatorLayer]),this._measurementLayer.removeAll(),this._manipulatorLayer.removeAll(),this._set("measurement",null),this._set("measurementLabel",null),this._measurementLayer=f(this._measurementLayer),this._manipulatorLayer=f(this._manipulatorLayer),this._resetVertices()}get cursor(){return this._drawActive?"crosshair":null}set editable(e){this._set("editable",e),e||this._draw.reset()}onActivate(){this._drawActive||this._vertices.length!==0||this._startSketch()}onShow(){this._measurementLayer.visible=!0,this._manipulatorLayer.visible=!0}onHide(){this._measurementLayer.visible=!1,this._manipulatorLayer.visible=!1}_resetVertices(){for(const{handle:e}of this._vertices)e.remove();this._vertices=[]}_startSketch(){this._drawActive=!0;const e=this._draw.create("polyline",{mode:"click"});e.on(["vertex-add","vertex-update","vertex-remove","cursor-update","undo","redo"],t=>this._updateSketch(t.vertices)),e.on("draw-complete",()=>{this._stopSketch()})}_stopSketch(){this.manipulators.forEach(({manipulator:e})=>{e.interactive=!0}),this._drawActive=!1,this.finishToolCreation()}_updateSketch(e){const{spatialReference:t}=this.view;for(;this._vertices.length>e.length;){const{handle:o,manipulator:c}=this._vertices.pop();o.remove(),this.manipulators.remove(c)}for(let o=this._vertices.length;o<e.length;o++){const[c,d]=e[o],v=ge(new k({x:c,y:d,spatialReference:t}),this.view,this._manipulatorLayer);this.manipulators.add(v);const _=ue(v,(O,W)=>{W.next(pe(this.view)).next(de(O.graphic,me.Local)).next(()=>{const T=O.graphic.geometry;this._vertices[o].coord=[T.x,T.y],this._updatePolylines()})});this._vertices.push({manipulator:v,coord:[c,d],handle:_})}const r=this._vertices.length-1,n=this._vertices[r],[l,a]=e[r];n.coord[0]===l&&n.coord[1]===a||(n.coord=[l,a],n.manipulator.graphic.geometry=new k({x:l,y:a,spatialReference:t}));const m=this._drawActive?this._vertices[r].manipulator:null;this.manipulators.forEach(({manipulator:o})=>{o.interactive=m==null||o!==m}),this._updatePolylines()}_updatePolylines(){var v;if(this._vertices.length<2)return void this._measurementLayer.removeAll();const e=this._vertices.map(({coord:_})=>_),{measurement:t,drawing:r,original:n}=_e(e,this.view.spatialReference,this.geodesicDistanceThreshold);this._set("measurement",t);const l=Me(this.messages,t,this.unit);let a,m;this._set("measurementLabel",l);const{graphics:o}=this._measurementLayer,c=o.length===2,{effectiveTheme:d}=this.view;c?(a=o.at(0),m=o.at(1)):(a=new S({symbol:new j({data:{type:"CIMSymbolReference",symbol:{type:"CIMLineSymbol",symbolLayers:[{type:"CIMSolidStroke",effects:[{type:"CIMGeometricEffectDashes",dashTemplate:[14,12],lineDashEnding:"FullGap",controlPointEnding:"NoConstraint"}],enable:!0,capStyle:"Butt",joinStyle:"Round",width:3.5,color:R(d.accentColor).toArray()},{type:"CIMSolidStroke",enable:!0,capStyle:"Butt",joinStyle:"Round",width:5,color:d.accentColor.toArray()}]}}})}),m=new S({symbol:new q({color:d.textColor,haloColor:V(R(d.textColor,F.Low),.5),haloSize:2,font:new J({size:14,family:"sans-serif"})})}),o.removeAll(),o.addMany([a,m])),a.geometry=r,m.geometry=(v=n.extent)==null?void 0:v.center,m.symbol.text=l}};function ge(e,t,r){const n=V(t.effectiveTheme.accentColor,.5),l={type:"simple-line",width:0},a=8,m=new I({style:"circle",color:n,size:a,outline:l}),o=new I({style:"circle",color:n,size:1.5*a,outline:l}),c=new S({geometry:e,symbol:m});return new ve({view:t,layer:r,graphic:c,focusedSymbol:o})}function _e(e,t,r){const n=new K({paths:[e],spatialReference:t});let l,a;if(t.isGeographic)if(E(t))l=M([n],"meters")[0],a=L(n,g);else{const m=w(n,U.WGS84),o=L(m,g);l=M([m],"meters")[0],a=w(o,t)}else if(t.isWebMercator)l=ne(n,"meters"),a=ae(n,g,"meters");else{const m=le(n,"meters");if(m>=r){const o=w(n,U.WGS84),c=L(o,g);l=M([o],"meters")[0],a=w(c,t)}else l=m,a=n}return{measurement:{geometry:a,length:l},original:n,drawing:a}}function fe(e){return e!=null}function be(e){if(!e)return!1;const{isGeographic:t,isWebMercator:r,isWGS84:n}=e;return t&&!n&&!E(e)||!t&&!r}function Me(e,t,r){if(!t||!e)return"";switch(r){case"metric":return oe(e,t.length,"meters");case"imperial":return re(e,t.length,"meters");default:return se(e,Q(t.length,"meters",r),r)}}i([s()],u.prototype,"_drawActive",void 0),i([s({readOnly:!0})],u.prototype,"cursor",null),i([s({value:!0})],u.prototype,"editable",null),i([s({type:Number})],u.prototype,"geodesicDistanceThreshold",void 0),i([s({readOnly:!0})],u.prototype,"measurement",void 0),i([s({readOnly:!0})],u.prototype,"measurementLabel",void 0),i([s()],u.prototype,"messages",void 0),i([s()],u.prototype,"unit",void 0),i([s({constructOnly:!0})],u.prototype,"view",void 0),u=i([C("esri.widgets.DistanceMeasurement2D.DistanceMeasurement2DTool")],u);let p=class extends ye{constructor(e){super(e),this.supportedViewType="2d",this.unsupportedErrorMessage="DistanceMeasurement2DViewModel is only supported in 2D views.",this.geodesicDistanceThreshold=1e5}initialize(){this.addHandles([y(()=>{var e;return(e=this.view)==null?void 0:e.spatialReference},()=>this.clear()),y(()=>this.unit,e=>{this.tool!=null&&(this.tool.unit=e)},D),y(()=>this.geodesicDistanceThreshold,e=>{this.tool!=null&&(this.tool.geodesicDistanceThreshold=e)},D)])}get measurement(){return this.tool!=null?this.tool.measurement:null}get measurementLabel(){return this.tool!=null?this.tool.measurementLabel:null}get state(){var e;return this.disabled||this.view==null||!fe((e=this.view)==null?void 0:e.spatialReference)?"disabled":this.tool!=null&&this.measurement?this.tool.active?"measuring":"measured":"ready"}get unit(){return this._validateUnit(this.defaultUnit)}set unit(e){this._overrideIfSome("unit",this._validateUnit(e))}get unitOptions(){return b}set unitOptions(e){this._overrideIfSome("unitOptions",this._validateUnits(e))}async start(){const e=this.view;e!=null&&(await X(()=>e.ready),be(e.spatialReference)&&await Y()),this.createTool({interactive:!0})}clear(){this.removeTool()}constructTool(){return new u({view:this.view,visible:this.visible,geodesicDistanceThreshold:this.geodesicDistanceThreshold,unit:this.unit})}_validateUnit(e){const{unitOptions:t,defaultUnit:r}=this;return e!=null&&t.includes(e)?e:t.includes(r)?r:t.length>0?t[0]:r}_validateUnits(e){if(e==null)return[];const t=e.filter(r=>b.includes(r));return t.length===0?b.slice():t}};i([s(ie)],p.prototype,"defaultUnit",void 0),i([s({type:Number})],p.prototype,"geodesicDistanceThreshold",void 0),i([s({readOnly:!0})],p.prototype,"measurement",null),i([s({readOnly:!0})],p.prototype,"measurementLabel",null),i([s({readOnly:!0})],p.prototype,"state",null),i([s({type:String})],p.prototype,"unit",null),i([s({type:[String]})],p.prototype,"unitOptions",null),p=i([C("esri.widgets.DistanceMeasurement2D.DistanceMeasurement2DViewModel")],p);const P=p,H="esri-distance-measurement-2d",$={base:H,newMeasurementButton:`${H}__clear-button`,widgetIcon:te.measureLine};let h=class extends ee{constructor(e,t){super(e,t),this.iconClass=$.widgetIcon,this.icon=null,this.messages=null,this.messagesCommon=null,this.viewModel=new P}get active(){return this.viewModel.active}get label(){var e;return((e=this.messages)==null?void 0:e.widgetLabel)??""}set label(e){this._overrideIfSome("label",e)}get unit(){return this.viewModel.unit}set unit(e){this.viewModel.unit=e}get unitOptions(){return this.viewModel.unitOptions}set unitOptions(e){this.viewModel.unitOptions=e}get view(){return this.viewModel.view}set view(e){this.viewModel.view=e}get visible(){return this.viewModel.visible}set visible(e){this.viewModel.visible=e}render(){const{messages:e,messagesCommon:t,unit:r,unitOptions:n,viewModel:l}=this,{active:a,measurementLabel:m,state:o,supported:c}=l;return G("div",{"aria-label":this.messages.widgetLabel,class:this.classes($.base,z.widget,z.panel),key:this,role:"presentation"},this.visible?G(we,{active:a,measurementItems:[{key:"distance",title:e.distance,value:m}],messages:{...e,notApplicable:t.notApplicable},newMeasurementButtonClass:$.newMeasurementButton,state:o,supported:c,unit:r,unitOptions:n,onNewMeasurementClick:()=>{Z(this.viewModel.start())},onUnitChange:d=>{this.unit=d}}):null)}};i([s({readOnly:!0})],h.prototype,"active",null),i([s()],h.prototype,"iconClass",void 0),i([s()],h.prototype,"icon",void 0),i([s()],h.prototype,"label",null),i([s()],h.prototype,"uiStrings",void 0),i([s(),B("esri/widgets/DistanceMeasurement2D/t9n/DistanceMeasurement2D")],h.prototype,"messages",void 0),i([s(),B("esri/t9n/common")],h.prototype,"messagesCommon",void 0),i([s()],h.prototype,"unit",null),i([s()],h.prototype,"unitOptions",null),i([s()],h.prototype,"view",null),i([s({type:P})],h.prototype,"viewModel",void 0),i([s({type:Boolean})],h.prototype,"visible",null),h=i([C("esri.widgets.DistanceMeasurement2D")],h);const _t=h;export{_t as default};
