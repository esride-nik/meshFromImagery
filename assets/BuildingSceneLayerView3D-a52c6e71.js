import{hF as Q,dZ as A,bg as O,a5 as l,a6 as n,a9 as _,kI as P,bA as R,h3 as F,an as h,dw as f,hG as E,eH as b,i1 as G,s as v,V as x,gj as B,cb as V,dr as S,al as N,nc as U,ir as W,bn as H,hQ as j}from"./index-b516d057.js";import"./BuildingGroupSublayer-2dcd1645.js";import{x as k}from"./WhereClause-41137be1.js";import"./BuildingComponentSublayer-0e038021.js";import{d as T}from"./FeatureFilter-55dd341e.js";import{b as $}from"./Query-071039d7.js";import{E as z,c as D,a as X}from"./I3SMeshView3D-c4f22244.js";import{a as Y}from"./edgeUtils-6e4a97fb.js";import{n as Z}from"./symbolColorUtils-3ca646c8.js";import{L as I,d as J,l as K,o as ee}from"./I3SQueryFeatureStore-daac455a.js";import{e as te,u as re,m as ie}from"./I3SUtil-1c5e04a1.js";import{t as se}from"./DefinitionExpressionSceneLayerView-8a0da2cd.js";import{u as oe,n as le,p as C}from"./popupUtils-e4ebc84a.js";import{I as ne}from"./Scheduler-ff5943a4.js";import{n as ae}from"./LayerView3D-c03d44fc.js";import{W as pe}from"./SceneView-123ac862.js";import{u as ue}from"./LayerView-060b46d4.js";import"./loadAll-5e767cfa.js";import"./TimeOnly-879c5107.js";import"./UnknownTimeZone-a05df022.js";import"./jsonUtils-52514725.js";import"./DictionaryLoader-e327eff9.js";import"./Version-1f969b2a.js";import"./FieldsIndex-e8db657f.js";import"./HeatmapColorStop-3fff4333.js";import"./heatmapUtils-7f42325f.js";import"./FeatureLayer-c4c5819f.js";import"./FeatureLayerBase-0746b503.js";import"./HeightModelInfo-b816d32b.js";import"./featureLayerUtils-16361d1f.js";import"./featureQueryAll-40af0622.js";import"./AttachmentQuery-bede5a71.js";import"./RelationshipQuery-2c9e4485.js";import"./FullTextSearch-12e0754c.js";import"./QuantizationParameters-f983cf8d.js";import"./LayerFloorInfo-4234db4d.js";import"./serviceCapabilitiesUtils-42d4d20c.js";import"./editsZScale-e45bb69c.js";import"./queryZScale-d7a48772.js";import"./APIKeyMixin-bfb00271.js";import"./EditBusLayer-caf9fed8.js";import"./uuid-709b6c67.js";import"./FeatureEffectLayer-1948d1a0.js";import"./FeatureEffect-c80bb16d.js";import"./FeatureReductionLayer-443167bc.js";import"./clusterUtils-50a66940.js";import"./MD5-715f37cd.js";import"./FeatureReductionSelection-d84c375a.js";import"./LabelClass-c3c309a8.js";import"./labelUtils-b29175f3.js";import"./defaults-4faa92e6.js";import"./defaultsJSON-59981e75.js";import"./OrderedLayer-32293fe1.js";import"./FeatureTemplate-d1d1c7be.js";import"./FeatureType-f30c4b8b.js";import"./fieldProperties-8c831c84.js";import"./labelingInfo-aae625ac.js";import"./versionUtils-5892620e.js";import"./styleUtils-a3d96bf6.js";import"./TopFeaturesQuery-6d0bf5f5.js";import"./capabilities-c607cf72.js";import"./I3SIndexInfo-ea0c11e7.js";import"./I3SLayerDefinitions-9d2b79a5.js";import"./UpdatingHandles-7949a657.js";import"./I3SOverrides-a9f31f33.js";import"./ElevationQuery-a3eaf0a0.js";import"./RenderGeometry-5dbc1699.js";import"./vec3f32-bac7ea57.js";import"./DefaultTechniqueConfiguration-b4dbe32f.js";import"./requestImageUtils-b142708c.js";import"./enums-bdecffa2.js";import"./Texture-bcb6d63f.js";import"./contextUtils-81fda295.js";import"./interfaces-8918b36f.js";import"./Material-5f4156ac.js";import"./ViewingMode-5d7d590b.js";import"./FramebufferObject-123b7c8d.js";import"./ShaderTechniqueConfiguration-2502462e.js";import"./ElevationProvider-abb53936.js";import"./dehydratedPoint-5a1dfed5.js";import"./hydratedFeatures-2365c307.js";import"./weather-2eb64924.js";import"./RenderState-1d6218ee.js";import"./NestedMap-1b5db22e.js";import"./frustum-f9d53cdf.js";import"./VertexElementDescriptor-2925c6af.js";import"./VertexArrayObject-d19dab8d.js";import"./Octree-7cea9440.js";import"./InterleavedLayout-d76b0d59.js";import"./types-1305598a.js";import"./OrderIndependentTransparency-755f7dcc.js";import"./floatRGBA-ca990bbb.js";import"./Intersector-2e1d9db3.js";import"./Intersector-fa865806.js";import"./boundedPlane-1da2f094.js";import"./verticalOffsetUtils-e5214af9.js";import"./orientedBoundingBox-67c5cd22.js";import"./glUtil-ce5ee52b.js";import"./vec2f32-eaf29605.js";import"./ColorMaterial-bdf1f62a.js";import"./VerticalOffset.glsl-5743f98e.js";import"./dehydratedFeatures-2a3f0608.js";import"./quantizationUtils-17105106.js";import"./featureConversionUtils-09cf00ff.js";import"./OptimizedFeature-e90b69df.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./OptimizedGeometry-196224d4.js";import"./SnappingCandidate-970faec6.js";import"./objectResourceUtils-003803db.js";import"./devEnvironmentUtils-4eab2a99.js";import"./DefaultMaterial_COLOR_GAMMA-101ea40c.js";import"./resourceUtils-1d03d2fe.js";import"./mat3f32-6c416b1c.js";import"./callExpressionWithFeature-36423058.js";import"./lineStippleUtils-0688e06c.js";import"./projectVectorToDehydratedPoint-e30a7ff8.js";import"./interfaces-1a80c8eb.js";import"./webStyleSymbolUtils-4761c8f2.js";import"./Intersector-a291e778.js";import"./fontUtils-56b88a2f.js";import"./projectVectorToVector-56c29b20.js";import"./I3SNode-81f8301c.js";import"./I3SBinaryReader-e72af7de.js";import"./layerViewUtils-6ebe90f4.js";import"./ReactiveSet-7afb73d5.js";import"./meshFeatureSet-8aa95dd7.js";import"./FeatureLayerView3D-08fb50ad.js";import"./FeatureLayerViewBase3D-6a7790b6.js";import"./FeatureLikeLayerView3D-88097627.js";import"./geometryServiceUtils-3e048225.js";import"./project-1bd91657.js";import"./dehydratedFeatureComparison-7855b188.js";import"./terrainUtils-b6b761ab.js";import"./queryForSymbologySnapping-caae9522.js";import"./projectPointToVectorWithEngine-f608a34a.js";import"./elevationInfoUtils-be36d866.js";import"./hash-6f442295.js";import"./Graphics3DObjectStates-511adea3.js";import"./rendererConversion-b2429202.js";import"./basemapUtils-6ec10a55.js";import"./Basemap-8d62c69e.js";import"./writeUtils-e226a8aa.js";import"./optimizedFeatureQueryEngineAdapter-1fecea41.js";import"./PooledRBush-fa11eac4.js";import"./quickselect-bc0541de.js";import"./screenUtils-8dc4a7f9.js";import"./signal-51ed66f5.js";import"./floorFilterUtils-080a7cd2.js";import"./QueryEngine-ee1ccbba.js";import"./projectionSupport-dcf335fc.js";import"./json-48e3ea08.js";import"./QueryEngineCapabilities-85c4f1d0.js";import"./utils-f54bcc46.js";import"./utils-1a995f8e.js";import"./scaleUtils-72744379.js";import"./FeatureStore-02a891a3.js";import"./BoundsStore-230a1891.js";import"./heatmapTextureUtils-6877589a.js";import"./projectExtentUtils-15e84132.js";import"./query-351887b5.js";import"./pbfQueryUtils-b37a842c.js";import"./pbf-2651fe50.js";import"./WorkerHandle-9433ab9a.js";import"./EventedSet-680e6831.js";import"./FeatureLayerView-7680760d.js";import"./RefreshableLayerView-4a86a8ac.js";import"./Viewpoint-f83262d0.js";import"./Cyclical-4c223a04.js";import"./jsxFactory-92036771.js";import"./debugFlags-9a30f077.js";import"./coordinateSystem-38339d17.js";import"./LayerConstants-d3ac1b7a.js";import"./DefaultUI-af7068c2.js";import"./Map-1ad4186f.js";import"./Ground-ed93a93a.js";import"./CollectionFlattener-193451da.js";import"./editableLayers-856f2cb4.js";import"./TablesMixin-292d1d89.js";import"./IViewEvents-9a85f53d.js";import"./interfaces-0421c5e6.js";import"./heightModelInfoUtils-0dd2b6e4.js";import"./mat2d-d4af8487.js";import"./mat2df32-fb26a8c9.js";import"./mat2df64-4d1a9198.js";import"./capabilities-9d56a1da.js";import"./themeUtils-7dcf5b71.js";import"./globalCss-94006b67.js";import"./accessibleHandler-e91101b2.js";import"./Compass-b37d7d1d.js";import"./GoTo-4d856ce0.js";import"./NavigationToggle-57c00adb.js";import"./Zoom-73b5f25a.js";import"./resources-d4afed0c.js";import"./viewpointUtils-245ed782.js";import"./projectVectorToPoint-fbaf5599.js";import"./earthUtils-ef4b5643.js";import"./spatialReferenceSupport-5aeb751c.js";import"./ElevationSamplerData-9f34f589.js";import"./Environment-91bfea7d.js";import"./projectPointToWGS84ComparableLonLat-1ba40d40.js";import"./projectVectorToWGS84ComparableLonLat-5675a9f4.js";import"./ShadowCastVisualizeTechniqueConfiguration-4fcc4e25.js";import"./ray-8da55042.js";import"./ZoomMomentumEstimator-7437d26a.js";import"./labelFormatUtils-d440367f.js";import"./FeatureTileDescriptor3D-27dbeac7.js";import"./RenderCoordsHelper-8f237859.js";import"./intersectorUtilsConversions-d05d75a3.js";import"./LercDecoder-b49c0e9c.js";import"./RenderableTile-52f61d09.js";import"./enums-fb086c25.js";import"./config-1337d16e.js";import"./TiledDisplayObject-e7d105ae.js";import"./DisplayObject-9a6e3923.js";import"./TileKey-4b1303ff.js";import"./rasterUtils-15abcc11.js";import"./TileInfoView-ce4d65fb.js";import"./TileStrategy-a729431f.js";import"./QueueProcessor-4b9d43d3.js";import"./StyleDefinition-29c49b98.js";import"./enums-f1a6a48a.js";import"./edgeProcessing-82213448.js";import"./resources-15104e7a.js";import"./EdgeWorkerHandle-7d97defa.js";import"./workerHelper-d1cc0cda.js";import"./testSVGPremultipliedAlpha-f5e92e14.js";import"./DefaultVertexAttributeLayouts-8962d8eb.js";import"./RenderingContext-c0ea7a49.js";import"./ProgramCache-891c4b8d.js";import"./Program-96bc94ed.js";import"./hitTestSelectUtils-d512707e.js";import"./SceneModification-073489fb.js";import"./persistable-a11ce298.js";import"./multiOriginJSONSupportUtils-c978f4c3.js";import"./resourceExtension-63924db9.js";import"./SceneLayerWorker-b7dd55be.js";const L=(e,t)=>{let r=class extends Q(A(O.EventedMixin(e))){constructor(i){super(i),this.sublayer=null,this.parent=null,this.view=null}initialize(){}get suspended(){return!this.canResume()}get updating(){return!this.suspended&&this.isUpdating()}get visible(){var i;return!!((i=this.sublayer)!=null&&i.visible)}set visible(i){this._overrideIfSome("visible",i)}get fullOpacity(){var s,o;const i=p=>p??1;return i((s=this.sublayer)==null?void 0:s.opacity)*i((o=this.parent)==null?void 0:o.fullOpacity)}canResume(){var i,s;return!((i=this.parent)!=null&&i.suspended)&&((s=this.view)==null?void 0:s.ready)&&this.visible||!1}isUpdating(){return!1}};return l([n()],r.prototype,"sublayer",void 0),l([n()],r.prototype,"parent",void 0),l([n({readOnly:!0})],r.prototype,"suspended",null),l([n({type:Boolean,readOnly:!0})],r.prototype,"updating",null),l([n()],r.prototype,"view",void 0),l([n()],r.prototype,"visible",null),l([n()],r.prototype,"fullOpacity",null),r=l([_("esri.views.3d.layers.BuildingSublayerView3D")],r),r};var d;(function(e){e[e.Solid=0]="Solid",e[e.WireFrame=1]="WireFrame",e[e.XRay=2]="XRay"})(d||(d={}));const q=.15,de=.5*q;function me(e){switch(e.filterMode.type){case"solid":return{mode:d.Solid};case"wire-frame":return{mode:d.WireFrame,edgeMaterial:Y(e.filterMode.edges,{})};case"x-ray":return{mode:d.XRay}}}function M(e,t){if(t==null)return e.color[3]=0,e.edgeMaterial=null,void(e.pickable=!1);switch(t.mode){case d.Solid:return;case d.WireFrame:return e.color[3]=0,e.edgeMaterial=t.edgeMaterial,void(e.pickable=!1);case d.XRay:return e.color[0]=1,e.color[1]=1,e.color[2]=1,e.color[3]*=q,e.colorMixMode=Z.Replace,e.castShadows=!1,e.pickable=!1,void(e.edgeMaterial=he(e.edgeMaterial))}}function he(e){return e==null?null:(c.lastMaterial!==e&&(c.cachedMaterial=ye(e),c.lastMaterial=e),c.cachedMaterial)}function ye(e){const t=P(e.color);return t[3]*=de,{...e,color:t}}const c={cachedMaterial:null,lastMaterial:null};class g extends R{constructor(){super(...arguments),this.sublayer=null}get updating(){return!1}get suspended(){return!1}get availableFields(){return[]}get filter(){return null}set filter(t){throw new Error("Not implemented")}queryFeatures(t,r){throw new Error("Not implemented")}queryObjectIds(t,r){throw new Error("Not implemented")}queryFeatureCount(t,r){throw new Error("Not implemented")}createQuery(){throw new Error("Not implemented")}queryExtent(t,r){throw new Error("Not implemented")}highlight(t){throw new Error("Not implemented")}}l([n()],g.prototype,"sublayer",void 0),l([n()],g.prototype,"availableFields",null),l([n()],g.prototype,"filter",null);let a=class extends se(z(L(g))){constructor(){super(...arguments),this.type="building-component-sublayer-3d",this.layerView=null,this._elevationContext="scene",this._isIntegratedMesh=!1,this._supportsLabeling=!1,this.requiredFields=[],this.progressiveLoadFactor=1,this._queryEngine=null}get i3slayer(){return this.sublayer}get layerUid(){return this.sublayer.layer.uid}get sublayerUid(){return this.sublayer.uid}get layerId(){return this.sublayer.layer.id}get sublayerId(){return this.sublayer.id}get layerPopupEnabledAndHasTemplate(){var e,t;return this.sublayer.popupEnabled&&oe(this.sublayer,(t=(e=this.layerView)==null?void 0:e.view.popup)==null?void 0:t.defaultPopupTemplateEnabled)}initialize(){this._updatingHandles.add(()=>[this.sublayer.renderer,this.definitionExpressionFields,this.filterExpressionFields],()=>this._updateRequiredFields()),this._updatingHandles.add(()=>this.sublayer.renderer,t=>this._rendererChange(t),F);const e=()=>this._filterChange();this._updatingHandles.add(()=>this.parsedDefinitionExpression,e),this._updatingHandles.add(()=>this._filter!=null?this._filter.sortedObjectIds:null,e),this._updatingHandles.add(()=>this._filter!=null?this._filter.parsedWhereClause:null,e),this._updatingHandles.add(()=>[this._filter!=null?this._filter.parsedGeometry:null,this.filter!=null?this.filter.spatialRelationship:null],()=>this._geometryFilterChange()),this._updatingHandles.add(()=>this.parsedFilterExpressions,()=>this._updateSymbologyOverride(),F),this.addResolvingPromise(this._updateRequiredFields())}get lodFactor(){return this.view.qualitySettings.sceneService.object.lodFactor}get parsedFilterExpressions(){return this.sublayer.modelName!=="Overview"&&this.layerView?this.layerView.filterExpressions.map(([e,t])=>{let r;try{r=k.create(e,this.sublayer.fieldsIndex)}catch(o){return h.getLogger(this).error("Failed to parse filterExpression: "+o),null}if(!r.isStandardized)return h.getLogger(this).error("filterExpression is using non standard function"),null;const i=[],s=r.fieldNames;return te(s,this.sublayer.fields,{missingFields:i}),i.length>0?(h.getLogger(this).error(`filterExpression references unknown fields: ${i.join(", ")}`),null):[r,t]}).filter(e=>e!=null):[]}get filter(){return this._filter!=null?this._filter.viewFilter:null}set filter(e){e!=null&&I.checkSupport(e)?this._filter!=null?this._filter.viewFilter=e:this._filter=new I({viewFilter:e,layerFieldsIndex:this.sublayer.fieldsIndex,loadAsyncModule:t=>this._loadAsyncModule(t),addSqlFilter:(t,r)=>this.addSqlFilter(t,r,this.logError)}):this._filter=null}isUpdating(){return super.isUpdating()||this._filter!=null&&this._filter.updating}_updateSymbologyOverride(){const e=this.parsedFilterExpressions;e.length>0?this._setSymbologyOverride((t,r)=>{for(const[i,s]of e)try{if(i.testFeature(t))return M(r,s)}catch(o){this.logError(o)}return M(r,null)},this.filterExpressionFields):this._setSymbologyOverride(null,null)}get filterExpressionFields(){return f(this.sublayer.fieldsIndex,this.parsedFilterExpressions.reduce((e,[t])=>e.concat(t.fieldNames),new Array))}get availableFields(){const e=this.sublayer,t=e.fieldsIndex;let r=this.requiredFields;if(e.outFields||e.layer.outFields){const i=[...e.outFields||[],...e.layer.outFields||[]];r=[...E(t,i),...r]}return f(t,r)}_createLayerGraphic(e){const t=new b(null,null,e);return t.layer=this.sublayer.layer,t.sourceLayer=this.sublayer,t}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}async fetchPopupFeatures(e,t){const r=this._validateFetchPopupFeatures(t);if(r)throw r;if(!(t!=null&&t.clientGraphics)||t.clientGraphics.length===0)return[];const i=[],s=[],o=this.sublayer.associatedLayer!=null?await this.sublayer.associatedLayer.load():this.sublayer,p=E(this.sublayer.fieldsIndex,await le(o,C(this.sublayer,t))),y=new Set;for(const m of t.clientGraphics)G(p,m,y)?s.push(m):i.push(m);return s.length===0?i:(this.sublayer.associatedLayer!=null&&await this.sublayer.associatedLayer.load().catch(()=>h.getLogger(this).warn("Failed to load associated feature layer. Displaying popup attributes from cached attributes.")),this.whenGraphicAttributes(s,Array.from(y)).catch(()=>s).then(m=>i.concat(m)))}async _updateRequiredFields(){const e=f(this.sublayer.fieldsIndex,[...this.sublayer.renderer?await this.sublayer.renderer.getRequiredFields(this.sublayer.fieldsIndex):[],...this.definitionExpressionFields||[],...this.filterExpressionFields||[]]);this._set("requiredFields",e)}_validateFetchPopupFeatures(e){const{sublayer:t}=this,{popupEnabled:r}=t;return r?C(t,e)?void 0:new v("buildingscenelayerview3d:fetchPopupFeatures","Layer does not define a popup template",{sublayer:t}):new v("buildingscenelayerview3d:fetchPopupFeatures","Popups are disabled",{sublayer:t})}getFilters(){const e=super.getFilters();return this.addSqlFilter(e,this.parsedDefinitionExpression,this.logError),this._filter!=null&&this._filter.addFilters(e,this.view,this._controller.crsIndex,this._collection),e}createQuery(){const e={outFields:["*"],returnGeometry:!1,outSpatialReference:this.view.spatialReference};return this.filter!=null?this.filter.createQuery(e):new $(e)}queryExtent(e,t){return this._ensureQueryEngine().executeQueryForExtent(this._ensureQuery(e),t==null?void 0:t.signal)}queryFeatureCount(e,t){return this._ensureQueryEngine().executeQueryForCount(this._ensureQuery(e),t==null?void 0:t.signal)}queryFeatures(e,t){return this._ensureQueryEngine().executeQuery(this._ensureQuery(e),t==null?void 0:t.signal).then(r=>{if(!(r!=null&&r.features))return r;const i=this.sublayer,s=i.layer;for(const o of r.features)o.layer=s,o.sourceLayer=i;return r})}queryObjectIds(e,t){return this._ensureQueryEngine().executeQueryForIds(this._ensureQuery(e),t==null?void 0:t.signal)}_ensureQueryEngine(){return this._queryEngine==null&&(this._queryEngine=this._createQueryEngine()),this._queryEngine}_createQueryEngine(){const e=D(this.view.spatialReference,this.view.renderSpatialReference,this._collection);return new J({layerView:this,priority:ne.FEATURE_QUERY_ENGINE,spatialIndex:new K({featureAdapter:new ee({objectIdField:this.sublayer.objectIdField,attributeStorageInfo:this.sublayer.attributeStorageInfo,getFeatureExtent:e}),forAllFeatures:(t,r)=>this._forAllFeatures((i,s,o)=>t({id:i,index:s,meta:o}),r,X.QUERYABLE),getFeatureExtent:e,sourceSpatialReference:re(this.sublayer),viewSpatialReference:this.view.spatialReference})})}_ensureQuery(e){return this._addDefinitionExpressionToQuery(e==null?this.createQuery():$.from(e))}};l([n()],a.prototype,"i3slayer",null),l([n()],a.prototype,"layerView",void 0),l([n()],a.prototype,"lodFactor",null),l([n({readOnly:!0})],a.prototype,"parsedFilterExpressions",null),l([n({type:T})],a.prototype,"filter",null),l([n()],a.prototype,"_filter",void 0),l([n({type:[String],readOnly:!0})],a.prototype,"filterExpressionFields",null),l([n({type:[String],readOnly:!0})],a.prototype,"requiredFields",void 0),l([n({type:[String],readOnly:!0})],a.prototype,"availableFields",null),a=l([_("esri.views.3d.layers.BuildingComponentSublayerView3D")],a);const ce=a;class w extends ue{constructor(t){super(t),this.layer=null,this.sublayerViews=null}highlight(t){throw new Error("Not implemented")}}l([n()],w.prototype,"layer",void 0),l([n()],w.prototype,"sublayerViews",void 0);const ge=L(R);let u=class extends ae(w){constructor(e){super(e),this.type="building-scene-3d",this.sublayerViews=new x,this._abortController=new AbortController,this._loadingComponents=0,this._pendingWhenSublayerViews=new Map,this.ignoresMemoryFactor=!1}get filterExpression(){var i;const e=this.layer.activeFilterId,t=e!=null?this.layer.filters.find(s=>s.id===e):null,r=t!=null?(i=t.filterBlocks)==null?void 0:i.find(s=>s.filterMode.type==="solid"):null;return r?r.filterExpression:null}get filterExpressions(){const e=this.layer.activeFilterId,t=e!=null?this.layer.filters.find(r=>r.id===e):null;return t!=null&&t.filterBlocks?t.filterBlocks.toArray().map(r=>[r.filterExpression??"",me(r)]):[]}get updatingProgressValue(){const e=this.sublayerViews,t=this._loadingComponents+(e?e.length:0);return e.reduce((r,i)=>r+i.updatingProgress,0)/t}isUpdating(){return this._loadingComponents>0||this.sublayerViews&&this.sublayerViews.some(e=>e.updating)}initialize(){ie(this.layer.spatialReference,this.view.spatialReference,this.view.viewingMode),this._initializeSubLayerViews(this.layer.sublayers,this)}destroy(){this.sublayerViews&&(this.sublayerViews.forEach(e=>e.destroy()),this.sublayerViews=null),this._abortController=B(this._abortController)}_initializeSubLayerViews(e,t){const r=this,i=this.view;e.forEach(s=>{if(!s.isEmpty)if(s.type==="building-group"){const o=new ge({sublayer:s,view:i,parent:t});this._initializeSubLayerViews(s.sublayers,o)}else s.geometryType==="mesh"&&(this._loadingComponents++,s.load({signal:this._abortController.signal}).then(()=>{const o=new ce({sublayer:s,layerView:r,view:i,parent:t});this.sublayerViews.push(o);const p=this._pendingWhenSublayerViews.get(s);if(p){for(const y of p)y.resolve(o);this._pendingWhenSublayerViews.delete(s)}this.addHandles([V(()=>o.updating,()=>this.notifyChange("updating"),S),V(()=>o.updatingProgress,()=>this.notifyChange("updatingProgressValue"),S)])}).catch(o=>{N(o)||h.getLogger(this).error(`Error while creating view for sublayer ${s.id}
Layer: ${this.layer.url}
`,o)}).then(()=>{this._loadingComponents--,this.notifyChange("updating"),this.notifyChange("updatingProgressValue")}))})}getGraphicFromIntersectorTarget(e){for(const t of this.sublayerViews.items)if(t.sublayer.uid===e.sublayerUid)return t.getGraphicFromIntersectorTarget(e);return null}async fetchPopupFeatures(e,t){if(!(t!=null&&t.clientGraphics)||t.clientGraphics.length===0)return[];const r=U(t.clientGraphics,s=>s.sourceLayer),i=[];for(const[s,o]of r){const p=this._findComponent(s);p!=null&&i.push(p.fetchPopupFeatures(e,{...t,clientGraphics:o}))}return(await W(i)).flat()}whenGraphicBounds(e){const t=this._findComponent(e.sourceLayer);return t==null?Promise.reject():t.whenGraphicBounds(e)}getAABBFromIntersectorTarget(e){for(const t of this.sublayerViews.items)if(t.sublayer.uid===e.sublayerUid)return t.getAABBFromIntersectorTarget(e);return null}async whenSublayerView(e){const t=this._findComponent(e);if(t!=null)return t;const r=this._pendingWhenSublayerViews.get(e),i=H();return r?r.push(i):this._pendingWhenSublayerViews.set(e,[i]),i.promise}_findComponent(e){return this.sublayerViews.find(t=>e===t.sublayer)}highlight(e){e instanceof b?e=[e]:e instanceof x&&(e=e.toArray());const t=[];if(Array.isArray(e)&&e.length>0&&e[0]instanceof b){const r=e,i=new Map;for(const s of r){let o=i.get(s.sourceLayer);o==null&&(o=[],i.set(s.sourceLayer,o)),o.push(s)}this.sublayerViews.forEach(s=>{const o=i.get(s.sublayer);o&&t.push(s.highlight(o))})}return j(t)}get usedMemory(){return this.sublayerViews.reduce((e,t)=>e+t.usedMemory,0)}get unloadedMemory(){return this.sublayerViews.reduce((e,t)=>e+t.unloadedMemory,0)}};l([n()],u.prototype,"sublayerViews",void 0),l([n({readOnly:!0})],u.prototype,"filterExpression",null),l([n({readOnly:!0})],u.prototype,"filterExpressions",null),l([n(pe)],u.prototype,"updatingProgress",void 0),l([n({readOnly:!0,dependsOn:[]})],u.prototype,"updatingProgressValue",null),u=l([_("esri.views.3d.layers.BuildingSceneLayerView3D")],u);const Ps=u;export{Ps as default};
