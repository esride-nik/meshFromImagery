import{d8 as be,d2 as K,fk as T,fv as Ve,aW as u,a$ as Re,fy as Y,eh as Ge,n$ as ze,gi as ne,f9 as Oe,fu as Ie,p0 as oe,fC as Ee,gG as Te,jM as ae,fe as x,d1 as J,p1 as je,fz as We,l6 as ke,iW as le,p2 as he,i7 as Ue,ah as Fe,fO as qe,gv as Q,a5 as a,a6 as d,a9 as X,bA as ie,cb as z,ce as de,i9 as He,ia as Ne,an as Be,bg as Xe,bt as ce,jq as Ze,dr as ee,kH as Je,B as Qe,gH as q,_ as Ke,lf as De,gJ as H,fZ as Ye,gD as pe,gE as ue,p3 as et,gO as tt,gP as ge,kP as st,mF as me,kN as _e,lp as it,kd as fe,fx as rt,kl as nt,h3 as ot,b9 as P,nU as at,g9 as lt,gM as ht,k8 as dt,k7 as ct,k6 as pt,k5 as ut,km as gt}from"./index-b516d057.js";import{e as mt}from"./defaultUnit-414db021.js";import{s as _t}from"./AnalysisView3D-3b0b8c91.js";import{e as te}from"./interfaces-b9217804.js";import{i as I,l as ye,f as ft}from"./unitFormatUtils-67047561.js";import{t as N}from"./projectVectorToVector-56c29b20.js";import{t as yt}from"./projectPointToWGS84ComparableLonLat-1ba40d40.js";import{T as vt,d as Lt,M as Ct,G as wt,w as St,b as Pt,S as At,L as $t}from"./measurementUtils-2ddcde49.js";import{a as se,t as Mt}from"./UnitNormalizer-81df6daa.js";import{a as bt}from"./ElevationProvider-abb53936.js";import{U as ve}from"./euclideanAreaMeasurementUtils-f9ba1710.js";import{t as Vt,u as E}from"./LineVisualElement-e3bb1937.js";import{V as Le,p as Gt,w as Dt,l as xt}from"./EditGeometryOperations-c2e73f2d.js";import{h as Ce}from"./quantityFormatUtils-e5b1c45f.js";import{g as we,_ as Rt,m as zt}from"./Segment-fd60ac10.js";import{a as Ot}from"./Object3DVisualElement-459b9b9c.js";import{E as It,u as Et,d as G}from"./Material-5f4156ac.js";import{o as Tt,d as jt,c as Wt,H as kt,z as Se,h as Ut,i as Ft,r as qt,j as Ht,n as Nt,f as Pe,A as W,p as Bt,w as Xt}from"./DefaultTechniqueConfiguration-b4dbe32f.js";import{F as Zt,G as Jt}from"./RenderGeometry-5dbc1699.js";import{o as j,f as Qt,S as Kt,A as Yt,l as es,a as ts,E as ss,_ as is}from"./OrderIndependentTransparency-755f7dcc.js";import{o as Ae}from"./interfaces-8918b36f.js";import{R as k}from"./enums-bdecffa2.js";import{r as V}from"./ShaderTechniqueConfiguration-2502462e.js";import{h as rs}from"./lineStippleUtils-0688e06c.js";function $e(t,e,s,i,r){be(U,t),K(F,t,e),N(U,s,U,r),N(F,s,F,r),T(i,F,U),Ve(i,i)}const U=u(),F=u();class ns{get numVertices(){return this._length}get hasStagedVertex(){return this._hasCursorPoint}constructor(e,s){this.validMeasurement=!1,this.positionsWorldCoords=[],this.positionsRenderCoords=[],this.positionsProjectedWorldCoords=[],this.positionsFittedRenderCoords=[],this.positionsGeographic=[],this.positionsSpherical=[],this.positionsStereographic=[],this.pathSegmentLengths=[],this.geodesicPathSegmentLengths=[],this.perimeterSegmentLengths=[],this.intersectingSegments=new Set,this.geodesicIntersectingSegments=new Set,this.triangleIndices=null,this.geodesicTriangleIndices=null,this.areaCentroidWorldCoords=u(),this.areaCentroidRenderCoords=u(),this.geodesicAreaCentroidRenderCoords=u(),this.area=null,this.geodesicArea=null,this.pathLength=null,this.geodesicPathLength=null,this.perimeterLength=null,this._length=0,this._centroidRenderCoords=u(),this._planeWorldCoords=Re(),this._worldUp=u(),this._worldTangent=u(),this._frame=[u(),u(),u()],this._pathVersion=-1,this._hasCursorPoint=!1,this._mode=null,this._tempU=u(),this._tempV=u(),this._tempVec3=u(),this._tempSphere={center:u(),radius:0},this._sceneView=e,this.unitNormalizer=s}update(e,s,i,r,n,o){const l=s!=null,h=this._pathVersion===e.version,p=this._hasCursorPoint===l,c=this._mode===n;return!(h&&!o&&p&&c&&e.isValidPolygon)&&(this._pathVersion=e.version,this._hasCursorPoint=l,this._updateCursorSegmentLength(e,s),this._update(e,s,i,r,n),!0)}_update(e,s,i,r,n){const o=this.unitNormalizer,l=this._sceneView.renderSpatialReference,h=this.unitNormalizer.spatialReference;let p=e.numVertices;const c=!(s==null||s.equals(e.lastPoint)||p>2&&s.equals(e.firstPoint));c&&(p+=1);const g=!e.polygonIsClosed&&p>2,m=e.polygonIsClosed||g;this._resize(p);const f=Y(i.spatialReference),A=Ge(i.spatialReference,f)&&ze(i.spatialReference),{positionsGeographic:C,positionsWorldCoords:M,positionsRenderCoords:$,positionsSpherical:D}=this,O=(y,v)=>{os(i.elevationProvider,y),Q(y,M[v],h),Q(y,$[v],l),A&&(yt(y,C[v]),Q(y,D[v],f),Ve(D[v],D[v]))};e.forEachVertexPosition((y,v)=>O(y,v)),c&&O(s,p-1);const S=this._updatePathLengths(m);if(this.pathLength=this._length>1?I(o.normalizeDistance(S),"meters"):null,A){const y=this._updateGeodesicPathLengths(m,h);this.geodesicPathLength=this._length>1?I(y,"meters"):null}else this.geodesicPathLength=null;if(this._updateMode(n),!m)return this.area=null,this.geodesicArea=null,this.perimeterLength=null,this.triangleIndices=null,this.geodesicTriangleIndices=null,this.intersectingSegments.clear(),this.geodesicIntersectingSegments.clear(),void(this.validMeasurement=!1);this._updateAreaAndPerimeterLength(i,o,l,h,r),A&&this._updateGeodesicArea(i),this.validMeasurement=!0}getData(){return{validMeasurement:this.validMeasurement,numVertices:this.numVertices,hasStagedVertex:this.hasStagedVertex,positionsWorldCoords:this.positionsWorldCoords,positionsRenderCoords:this.positionsRenderCoords,positionsProjectedWorldCoords:this.positionsProjectedWorldCoords,positionsFittedRenderCoords:this.positionsFittedRenderCoords,positionsGeographic:this.positionsGeographic,positionsSpherical:this.positionsSpherical,positionsStereographic:this.positionsStereographic,pathSegmentLengths:this.pathSegmentLengths,geodesicPathSegmentLengths:this.geodesicPathSegmentLengths,perimeterSegmentLengths:this.perimeterSegmentLengths,intersectingSegments:this.intersectingSegments,geodesicIntersectingSegments:this.geodesicIntersectingSegments,triangleIndices:this.triangleIndices,geodesicTriangleIndices:this.geodesicTriangleIndices,areaCentroidWorldCoords:this.areaCentroidWorldCoords,areaCentroidRenderCoords:this.areaCentroidRenderCoords,geodesicAreaCentroidRenderCoords:this.geodesicAreaCentroidRenderCoords,fittingMode:this.fittingMode,area:this.area,geodesicArea:this.geodesicArea,pathLength:this.pathLength,geodesicPathLength:this.geodesicPathLength,perimeterLength:this.perimeterLength,unitNormalizer:this.unitNormalizer,actualMeasurementMode:this.actualMeasurementMode}}_resize(e){for(e<this._length&&(this.positionsWorldCoords.length=e,this.positionsRenderCoords.length=e,this.positionsProjectedWorldCoords.length=e,this.positionsFittedRenderCoords.length=e,this.positionsGeographic.length=e,this.positionsSpherical.length=e,this.positionsStereographic.length=e,this.pathSegmentLengths.length=e,this.geodesicPathSegmentLengths.length=e,this.perimeterSegmentLengths.length=e,this._length=e);this._length<e;)this.positionsWorldCoords.push(u()),this.positionsRenderCoords.push(u()),this.positionsProjectedWorldCoords.push(ne()),this.positionsFittedRenderCoords.push(u()),this.positionsGeographic.push(u()),this.positionsSpherical.push(u()),this.positionsStereographic.push(ne()),this.pathSegmentLengths.push(0),this.geodesicPathSegmentLengths.push(0),this.perimeterSegmentLengths.push(0),++this._length}_updatePathLengths(e){const s=this.positionsWorldCoords,i=this.pathSegmentLengths;let r=0;for(let n=0;n<this._length;++n){const o=i[n]=Oe(s[n],s[(n+1)%this._length]);(n<this._length-1||e)&&(r+=o)}return r}_updateGeodesicPathLengths(e,s){const i=this.positionsGeographic,r=this.geodesicPathSegmentLengths;let n=0;for(let o=0;o<this._length;++o){const l=r[o]=vt(i[o],i[(o+1)%this._length],s??void 0);(o<this._length-1||e)&&(n+=l)}return n}_updateAreaAndPerimeterLength(e,s,i,r,n){const o=e.renderCoordsHelper,l=this.positionsWorldCoords,h=this.positionsRenderCoords,p=this.positionsProjectedWorldCoords,c=this.positionsFittedRenderCoords,g=this._planeWorldCoords,m=this._centroidRenderCoords;se(h,m),o.worldUpAtPosition(m,this._worldUp),o.worldBasisAtPosition(m,Ie.X,this._worldTangent),$e(m,this._worldUp,i,this._worldUp,r),$e(m,this._worldTangent,i,this._worldTangent,r),l.length>2&&Lt(l,g),this.fittingMode=this._selectFittingMode(g,l,this._worldUp,n);let f=0;if(this.fittingMode==="horizontal"){let S=-1/0;h.forEach((y,v)=>{const re=o.getAltitude(h[v]);re>S&&(S=re,f=v)})}const A=l[f];let C=g,M=this._worldTangent;this.fittingMode==="horizontal"?C=this._worldUp:this.fittingMode==="vertical"&&(C=this._tempVec3,M=this._worldUp,oe(g,this._worldUp,C)),be(this._frame[2],C),oe(M,C,this._frame[0]),Ee(this._frame[1],this._frame[0],this._frame[2]),Te(this._frame[1],this._frame[1]);const $=this._tempVec3,D=this._tempU,O=this._tempV;for(let S=0;S<this._length;++S){const y=p[S],v=c[S];T($,l[S],A),ae(y,x(this._frame[0],$),x(this._frame[1],$)),J(D,this._frame[0],y[0]),J(O,this._frame[1],y[1]),K($,D,O),K($,$,A),N($,r,v,i)}this.perimeterLength=this._length>0?I(s.normalizeDistance(this._updatePerimeterLengths()),"meters"):null,se(c,this.areaCentroidRenderCoords),N(this.areaCentroidRenderCoords,i,this.areaCentroidWorldCoords,r),this._updateIntersectingSegments(),this.area=this.intersectingSegments.size===0?ye(s.normalizeArea(this._computeArea()),"square-meters"):null}_updateGeodesicArea(e){const{renderCoordsHelper:s,spatialReference:i}=e,{positionsSpherical:r,positionsStereographic:n}=this,o=this._tempVec3,l=Ct(r,o);if(!l)return void(this.geodesicArea=null);const h=this._tempU,p=this._tempV;je(o,h,p);for(let c=0;c<this._length;++c){const g=x(r[c],h),m=x(r[c],p),f=x(r[c],o);ae(n[c],g/f,m/f)}J(o,o,We(i).radius),s.toRenderCoords(o,Y(i),this.geodesicAreaCentroidRenderCoords),this._updateGeodesicIntersectingSegments(),this.geodesicArea=l&&this.geodesicIntersectingSegments.size===0?ye(this._computeGeodesicArea(),"square-meters"):null}_updatePerimeterLengths(){const e=this.positionsProjectedWorldCoords,s=this.perimeterSegmentLengths;let i=0;for(let r=0;r<this._length;++r)i+=s[r]=ke(e[r],e[(r+1)%this._length]);return i}_updateIntersectingSegments(){const e=this.positionsProjectedWorldCoords,s=this.intersectingSegments;s.clear();for(let i=0;i<this._length;++i)for(let r=i+2;r<this._length;++r){if((r+1)%this._length===i)continue;const n=e[i],o=e[(i+1)%this._length],l=e[r],h=e[(r+1)%this._length];le(n,o,l,h)&&(s.add(i),s.add(r))}}_computeArea(){const e=this.positionsProjectedWorldCoords,s=this.triangleIndices=he(ve(e));let i=0;for(let r=0;r<s.length;r+=3)i+=Ue(e[s[r]],e[s[r+1]],e[s[r+2]]);return i}_updateGeodesicIntersectingSegments(){const e=this.positionsStereographic,s=this.geodesicIntersectingSegments;s.clear();for(let i=0;i<this._length;++i)for(let r=i+2;r<this._length;++r){if((r+1)%this._length===i)continue;const n=e[i],o=e[(i+1)%this._length],l=e[r],h=e[(r+1)%this._length];le(n,o,l,h)&&(s.add(i),s.add(r))}}_computeGeodesicArea(){const e=this.positionsGeographic,s=this.positionsStereographic,i=this.geodesicTriangleIndices=he(ve(s));let r=0;for(let n=0;n<i.length;n+=3)r+=wt(e[i[n]],e[i[n+1]],e[i[n+2]],Fe.WGS84);return r}_selectFittingMode(e,s,i,r){const n=s.map(c=>Math.abs(St(e,c))).reduce((c,g)=>Math.max(c,g),0);Pt(s,this._tempSphere);const o=n/(2*this._tempSphere.radius),l=o<r.maxRelativeErrorCoplanar,h=o<r.maxRelativeErrorAlmostCoplanar;let p="horizontal";return l?p="oblique":h&&(p=Math.abs(x(i,e))>Math.cos(qe(r.verticalAngleThreshold))?"horizontal":"vertical"),p}_updateCursorSegmentLength(e,s){const i=e.lastPoint;e.isValidPolygon||i==null||s==null?(this.geodesicStagedSegmentLength=null,this.stagedSegmentLength=null):(this.geodesicStagedSegmentLength=I(At(i,s),"meters"),this.stagedSegmentLength=I(this.unitNormalizer.normalizeDistance($t(i,s,this.unitNormalizer.spatialReference)),"meters"))}_updateMode(e){if(e===te.Auto){this.actualMeasurementMode="euclidean";let s=0;this.geodesicPathLength!=null&&(s+=this.geodesicPathLength.value),s>as&&(this.actualMeasurementMode="geodesic")}else this.actualMeasurementMode=e===te.Euclidean?"euclidean":"geodesic";this.geodesicPathLength==null&&(this.actualMeasurementMode="euclidean"),this._mode=e}}function os(t,e){e.hasZ||(e.z=bt(t,e,"ground")??0)}const as=1e5;let R=class extends ie{constructor(t){super(t)}initialize(){const t=this.view.spatialReference,e=Y(t),s=e===He?Ne:e,i=!t||Ge(t,s)?s:t,r=new Mt(i);this._measurementDataManager=new ns(this.view,r),this.addHandles([this.analysisViewData.path.on("change",()=>this._update()),z(()=>this.analysisViewData.stagedPoint,()=>this._update(),de),z(()=>this.analysisViewData.mode,()=>this._update(),de)]),this._update()}_update(t=!1){const{analysisViewData:e,view:s}=this,i={maxRelativeErrorCoplanar:.005,maxRelativeErrorAlmostCoplanar:.01,verticalAngleThreshold:80};this._measurementDataManager.update(e.path,e.stagedPoint,s,i,e.mode,t)&&(e.measurementData=this._measurementDataManager.getData())}};a([d({constructOnly:!0})],R.prototype,"view",void 0),a([d({constructOnly:!0})],R.prototype,"analysis",void 0),a([d({constructOnly:!0})],R.prototype,"analysisViewData",void 0),R=a([X("esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurementController")],R);const xe="esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurement3DPathHelper",ls=Be.getLogger(xe);let w=class extends Xe.EventedAccessor{constructor(t={}){super(t),this._version=0,this._internalGeometryChange=!1,this._extent=ce()}set areaMeasurement(t){this._set("areaMeasurement",t),t!=null&&this.view!=null&&this._initialize(t,this.view)}set view(t){this._set("view",t),t!=null&&this.areaMeasurement!=null&&this._initialize(this.areaMeasurement,t)}get constructed(){return this.areaMeasurement!=null&&this.view!=null}get version(){return this._version}get isEmptyPolygon(){return!this.constructed||this._editGeometry.components.length===0}get isValidPolygon(){return this.constructed&&this.polygonIsClosed}get extent(){if(this.constructed&&this._editGeometry.components.length>0&&this._editGeometry.components[0].vertices.length>0){const t=ce(this._extent);return this.forEachVertex(e=>{Ze(t,e.pos)}),t}return null}get spatialReference(){return this.constructed?this._editGeometry.coordinateHelper.spatialReference:null}_initialize(t,e){this.removeAllHandles(),this.addHandles(z(()=>t.geometry,()=>{this._updateEditGeometryFromModelGeometry(t,e)},ee)),this._makeDirty(!0)}_makeDirty(t=!1){this.notifyChange("polygonIsClosed"),this.notifyChange("isValidPolygon"),this.notifyChange("initialized"),this.notifyChange("extent"),t&&this.notifyChange("numVertices")}_updateEditGeometryFromModelGeometry(t,e){if(this._version++,this._internalGeometryChange)return;this.removeHandles("EditGeometry");let s=t.geometry;if(s!=null){const i=Je(s,e.spatialReference);i==null&&Vt(t,s.spatialReference,ls),s=i}this._editGeometryOperations=s!=null?Le.fromGeometry(s,e.state.viewingMode):new Le(new Gt("polygon",Dt(!0,!1,e.spatialReference))),this._makeDirty(!0),this.emit("change"),this.addHandles(this._editGeometry.on("change",i=>{this._makeDirty(i.addedVertices!=null||i.removedVertices!=null),this._internalGeometryChange=!0,t.geometry=this.numVertices>0?this._editGeometry.geometry:null,this._internalGeometryChange=!1}),"EditGeometry")}get _editGeometry(){return this._editGeometryOperations.data}get vertices(){const t=[];return this.forEachVertex(e=>{t.push(e)}),t}get numVertices(){return this.constructed&&this._editGeometry.components.length>0?this._editGeometry.components[0].vertices.length:0}get polygonIsClosed(){return this._editGeometry.components.length>0&&this._editGeometry.components[0].isClosed()}get firstPoint(){if(this.constructed&&this._editGeometry.components.length>0){const t=this._editGeometry.components[0].getFirstVertex();if(t!=null)return this._editGeometry.coordinateHelper.vectorToPoint(t.pos)}return null}get lastPoint(){if(this.constructed&&this._editGeometry.components.length>0){const t=this._editGeometry.components[0].getLastVertex();if(t!=null)return this._editGeometry.coordinateHelper.vectorToPoint(t.pos)}return null}getVertex(t){if(!this.constructed||this._editGeometry.components.length===0||this._editGeometry.components[0].vertices.length===0)return null;const e=this._editGeometry.components[0].vertices[0];let s=e;do{if(s.index===t)return s;s=s.rightEdge.rightVertex}while(s!==e&&s!=null);return null}getVertexPositionAsPoint(t){return this._editGeometry.coordinateHelper.vectorToPoint(t.pos)}getVertexPositionAsPointFromIndex(t){return this._editGeometry.coordinateHelper.vectorToPoint(this.getVertex(t).pos)}forEachVertex(t){this.constructed&&this._editGeometry.components.length>0&&this._editGeometry.components[0].iterateVertices(t)}forEachVertexPosition(t){const e=this._editGeometry.coordinateHelper;this.forEachVertex((s,i)=>{e.vectorToPoint(s.pos,Me),t(Me,i)})}clear(){this.areaMeasurement!=null&&(this.areaMeasurement.geometry=null)}add(t){if(!this.constructed)return null;if(this._editGeometry.components.length===0){const s=this.view;this._editGeometry.components.push(new xt(s.spatialReference,s.state.viewingMode))}const e=this._editGeometryOperations.appendVertex(this._editGeometry.coordinateHelper.pointToVector(t));return this.emit("change"),e}close(){if(!this.constructed||this._editGeometry.components.length===0)return null;const t=this._editGeometryOperations.closeComponent(this._editGeometry.components[0]);return this.emit("change"),t}ensureContains(t,e=""){let s=!1;if(this._editGeometry.components.forEach(i=>{i.iterateVertices(r=>{r===t&&(s=!0)})}),!s)throw new Error(`vertex doesnt exist ${e}`);return s}setVertexPosition(t,e){if(!this.constructed)return null;const s=this._editGeometryOperations.setVertexPosition(t,this._editGeometry.coordinateHelper.pointToVector(e));return this.emit("change"),s}equals(t){if(this.numVertices!==t.numVertices)return!1;let e=!0;return this.forEachVertexPosition((s,i)=>{const r=t.getVertexPositionAsPointFromIndex(i);s.equals(r)||(e=!1)}),!!e}};a([d({value:null})],w.prototype,"areaMeasurement",null),a([d({value:null})],w.prototype,"view",null),a([d()],w.prototype,"isEmptyPolygon",null),a([d()],w.prototype,"isValidPolygon",null),a([d()],w.prototype,"extent",null),a([d()],w.prototype,"spatialReference",null),a([d()],w.prototype,"numVertices",null),a([d()],w.prototype,"polygonIsClosed",null),w=a([X(xe)],w);const Me=new Qe;function hs(t){const e=new Tt,{vertex:s,fragment:i}=e;return jt(s,t),e.attributes.add(q.POSITION,"vec3"),e.attributes.add(q.UV0,"vec2"),e.varyings.add("vUV","vec2"),t.multipassEnabled&&e.varyings.add("depth","float"),s.code.add(Ae`
    void main(void) {
      vUV = uv0;
      ${t.multipassEnabled?"depth = (view * vec4(position, 1.0)).z;":""}
      gl_Position = proj * view * vec4(position, 1.0);
    }
  `),e.include(Wt,t),i.uniforms.add(new kt("size",r=>r.size)),i.uniforms.add(new Se("color1",r=>r.color1)),i.uniforms.add(new Se("color2",r=>r.color2)),i.include(Ut),i.code.add(Ae`
    void main() {
      ${t.multipassEnabled?"terrainDepthTest(depth);":""}
      vec2 uvScaled = vUV / (2.0 * size);

      vec2 uv = fract(uvScaled - 0.25);
      vec2 ab = clamp((abs(uv - 0.5) - 0.25) / fwidth(uvScaled), -0.5, 0.5);
      float fade = smoothstep(0.25, 0.5, max(fwidth(uvScaled.x), fwidth(uvScaled.y)));
      float t = mix(abs(ab.x + ab.y), 0.5, fade);

      fragColor = mix(color2, color1, t);
      ${t.transparencyPassType===j.Color?"fragColor = premultiplyAlpha(fragColor);":""}
    }
  `),e}const ds=Object.freeze(Object.defineProperty({__proto__:null,build:hs},Symbol.toStringTag,{value:"Module"}));class Z extends qt{initializeProgram(e){return new Ht(e.rctx,Z.shader.get().build(this.configuration),It)}_setPipelineState(e){const s=this.configuration,i=e===j.NONE,r=e===j.FrontFace;return Kt({blending:s.transparent?i?ps:Yt(e):null,depthTest:{func:es(e)},depthWrite:i?s.writeDepth?ts:null:ss(e),colorWrite:is,polygonOffset:i||r?s.polygonOffset?cs:null:{factor:-1,units:-25}})}initializePipeline(){return this._setPipelineState(this.configuration.transparencyPassType)}}Z.shader=new Ft(ds,()=>Ke(()=>import("./CheckerBoard.glsl-50f46f3e.js"),["assets/CheckerBoard.glsl-50f46f3e.js","assets/interfaces-8918b36f.js","assets/DefaultTechniqueConfiguration-b4dbe32f.js","assets/index-b516d057.js","assets/index-b252abd2.css","assets/requestImageUtils-b142708c.js","assets/enums-bdecffa2.js","assets/Texture-bcb6d63f.js","assets/contextUtils-81fda295.js","assets/Material-5f4156ac.js","assets/ViewingMode-5d7d590b.js","assets/FramebufferObject-123b7c8d.js","assets/ShaderTechniqueConfiguration-2502462e.js","assets/OrderIndependentTransparency-755f7dcc.js","assets/defaultUnit-414db021.js","assets/getDefaultUnitForView-d1ffbf16.js","assets/AnalysisView3D-3b0b8c91.js","assets/interfaces-b9217804.js","assets/unitFormatUtils-67047561.js","assets/Cyclical-4c223a04.js","assets/projectVectorToVector-56c29b20.js","assets/projectPointToWGS84ComparableLonLat-1ba40d40.js","assets/projectVectorToWGS84ComparableLonLat-5675a9f4.js","assets/measurementUtils-2ddcde49.js","assets/geometryEngine-656a968c.js","assets/geometryEngineBase-dfbd3a67.js","assets/hydrated-40effdd0.js","assets/geodesicUtils-822c19ca.js","assets/UnitNormalizer-81df6daa.js","assets/ElevationProvider-abb53936.js","assets/euclideanAreaMeasurementUtils-f9ba1710.js","assets/measurementUtils-3881da59.js","assets/LineVisualElement-e3bb1937.js","assets/Object3DVisualElement-459b9b9c.js","assets/VisualElement-187372ae.js","assets/RenderGeometry-5dbc1699.js","assets/vec3f32-bac7ea57.js","assets/dehydratedPoint-5a1dfed5.js","assets/hydratedFeatures-2365c307.js","assets/weather-2eb64924.js","assets/RenderState-1d6218ee.js","assets/NestedMap-1b5db22e.js","assets/frustum-f9d53cdf.js","assets/VertexElementDescriptor-2925c6af.js","assets/VertexArrayObject-d19dab8d.js","assets/Octree-7cea9440.js","assets/InterleavedLayout-d76b0d59.js","assets/types-1305598a.js","assets/floatRGBA-ca990bbb.js","assets/Intersector-2e1d9db3.js","assets/Intersector-fa865806.js","assets/boundedPlane-1da2f094.js","assets/verticalOffsetUtils-e5214af9.js","assets/orientedBoundingBox-67c5cd22.js","assets/glUtil-ce5ee52b.js","assets/Scheduler-ff5943a4.js","assets/signal-51ed66f5.js","assets/debugFlags-9a30f077.js","assets/lineStippleUtils-0688e06c.js","assets/EditGeometryOperations-c2e73f2d.js","assets/geometry2dUtils-a99dcf3d.js","assets/quantityFormatUtils-e5b1c45f.js","assets/Segment-fd60ac10.js","assets/viewUtils-9f810d02.js","assets/elevationInfoUtils-be36d866.js","assets/jsxFactory-92036771.js","assets/uuid-709b6c67.js","assets/TextOverlayItem-7f83875e.js"]));const cs={factor:0,units:-25},ps=Qt(k.SRC_ALPHA,k.ONE,k.ONE_MINUS_SRC_ALPHA,k.ONE_MINUS_SRC_ALPHA);class b extends Nt{constructor(){super(...arguments),this.transparencyPassType=j.NONE,this.transparent=!1,this.writeDepth=!0,this.polygonOffset=!1,this.multipassEnabled=!1,this.cullAboveGround=!1}}a([V({count:j.COUNT})],b.prototype,"transparencyPassType",void 0),a([V()],b.prototype,"transparent",void 0),a([V()],b.prototype,"writeDepth",void 0),a([V()],b.prototype,"polygonOffset",void 0),a([V()],b.prototype,"multipassEnabled",void 0),a([V()],b.prototype,"cullAboveGround",void 0),a([V({constValue:!1})],b.prototype,"occlusionPass",void 0);class us extends Zt{constructor(e){super(e,new ms),this._configuration=new b}getConfiguration(e,s){return this._configuration.transparent=this.parameters.transparent,this._configuration.writeDepth=this.parameters.writeDepth,this._configuration.polygonOffset=this.parameters.polygonOffset,this._configuration.transparencyPassType=s.transparencyPassType,this._configuration.multipassEnabled=s.multipassEnabled,this._configuration.cullAboveGround=s.multipassTerrain.cullAboveGround,this._configuration}produces(e,s){return s===Pe.Color||s===Pe.Alpha?e===(this.parameters.transparent?this.parameters.writeDepth?W.TRANSPARENT_MATERIAL:W.TRANSPARENT_DEPTH_WRITE_DISABLED_MATERIAL:W.OPAQUE_MATERIAL)||e===W.DRAPED_MATERIAL:!1}createGLMaterial(e){return new gs(e)}createBufferWriter(){return new Bt(Jt)}}class gs extends Xt{beginSlot(e){return this.ensureTechnique(Z,e)}}class ms extends Et{constructor(){super(...arguments),this.size=De(1,1),this.color1=H(.75,.75,.75,1),this.color2=H(.5,.5,.5,1),this.transparent=!1,this.writeDepth=!0,this.polygonOffset=!1}}class _s extends Ot{constructor(e){super(e),this._checkerBoardMaterial=null,this._renderOccluded=G.OccludeAndTransparent,this._geometry=null,this._size=De(1,1),this._color1=H(1,.5,0,.5),this._color2=H(1,1,1,.5),this.applyProperties(e)}get renderOccluded(){return this._renderOccluded}set renderOccluded(e){e!==this._renderOccluded&&(this._renderOccluded=e,this._updateMaterial())}get geometry(){return this._geometry}set geometry(e){this._geometry=e,this.recreateGeometry()}get size(){return this._size}set size(e){Ye(this._size,e),this._updateMaterial()}get color1(){return this._color1}set color1(e){pe(e,this._color1)||(ue(this._color1,e),this._updateMaterial())}get color2(){return this._color2}set color2(e){pe(e,this._color2)||(ue(this._color2,e),this._updateMaterial())}_updateMaterial(){this._checkerBoardMaterial!=null&&this._checkerBoardMaterial.setParameters({size:this._size,color1:this._color1,color2:this._color2,renderOccluded:this._renderOccluded})}createExternalResources(){this._checkerBoardMaterial=new us({size:this._size,color1:this._color1,color2:this._color2,transparent:!0,writeDepth:!1,polygonOffset:!0,renderOccluded:G.OccludeAndTransparent,isDecoration:this.isDecoration})}destroyExternalResources(){this._checkerBoardMaterial=null}forEachExternalMaterial(e){this._checkerBoardMaterial!=null&&e(this._checkerBoardMaterial)}createGeometries(e){if(this._geometry==null||this._checkerBoardMaterial==null)return;const s=fs;et(s,this.transform);const i=this._geometry,r=[],n=u();i.position.forEach(h=>{T(n,h,s),r.push(n[0],n[1],n[2])});const o=[];i.uv.forEach(h=>{o.push(h[0],h[1])});const l=new tt(this._checkerBoardMaterial,[[q.POSITION,new ge(r,i.triangleIndices,3,!0)],[q.UV0,new ge(o,i.triangleIndices,2,!0)]]);e.addGeometry(l)}}const fs=u();let L=class extends ie{get _parameters(){const{accentColor:t,textColor:e}=this.view.effectiveTheme,s=st(t),i=me(t,.5),r=me(_e(t),.5),n=_e(e,it.Low);return{accentColor:s,transparentAccentColor:i,transparentContrastColor:r,intersectingLineColor:[1,.2,0,1],textColor:e,textBackgroundColor:fe(n,.6),textCalloutColor:fe(n,.5),pathLineWidth:3,perimeterLineWidth:2,projectionLineWidth:2,projectionLineStippleSize:5,labelDistance:25}}get visible(){return this.analysisViewData.visible}get testData(){return{labels:{area:this._areaLabel,perimeterLength:this._perimeterLengthLabel}}}constructor(t){super(t),this._path=null,this._intersectedPath=null,this._perimeter=null,this._intersectedPerimeter=null,this._projectionLines=null,this._measurementArea=null,this._areaLabel=null,this._perimeterLengthLabel=null,this._pathSegments=[],this._perimeterSegments=[],this._origin=u(),this._originTransform=rt(),this.messages=null,this.viewData=ys,this.areaLabel=null,this.perimeterLengthLabel=null,this.loadingMessages=!0}initialize(){const{analysisViewData:t,_parameters:e,view:s}=this;this._path=new E({view:s,attached:!0,width:e.pathLineWidth,polygonOffset:!0,renderOccluded:G.OccludeAndTransparent,isDecoration:!0}),this._intersectedPath=new E({view:s,attached:!0,width:e.pathLineWidth,polygonOffset:!0,renderOccluded:G.OccludeAndTransparent,isDecoration:!0}),this._perimeter=new E({view:s,attached:!0,width:e.perimeterLineWidth,polygonOffset:!0,renderOccluded:G.OccludeAndTransparent,isDecoration:!0}),this._intersectedPerimeter=new E({view:s,attached:!0,width:e.perimeterLineWidth,color:e.intersectingLineColor,polygonOffset:!0,renderOccluded:G.OccludeAndTransparent,isDecoration:!0}),this._projectionLines=new E({view:s,attached:!0,width:e.projectionLineWidth,stipplePattern:rs(e.projectionLineStippleSize),polygonOffset:!0,renderOccluded:G.OccludeAndTransparent,isDecoration:!0}),this._measurementArea=new _s({view:s,attached:!0,isDecoration:!0});const i={attached:!0,view:s,isDecoration:!0};this._areaLabel=new we({...i,fontSize:B.Large}),this._perimeterLengthLabel=new we({...i,fontSize:B.Small}),this.addHandles([z(()=>[t.mode,this.visible,t.unit,t.measurementData,t.stagedPoint],()=>this._update(),ee),z(()=>{var r;return(r=s.state)==null?void 0:r.camera},()=>this._updateLabels(),ee),nt(()=>this._updateMessageBundle()),z(()=>this._parameters,({accentColor:r,transparentAccentColor:n,transparentContrastColor:o,textColor:l,textBackgroundColor:h,textCalloutColor:p})=>{const{_path:c,_intersectedPath:g,_perimeter:m,_projectionLines:f,_measurementArea:A,_areaLabel:C,_perimeterLengthLabel:M}=this;c.color=r,g.color=r,m.color=r,f.color=r,A.color1=n,A.color2=o,C.textColor=l,C.backgroundColor=h,C.calloutColor=p,M.textColor=l,M.backgroundColor=h,M.calloutColor=p},ot)]),this._updateMessageBundle()}destroy(){this._measurementArea=P(this._measurementArea),this._path=P(this._path),this._intersectedPath=P(this._intersectedPath),this._perimeter=P(this._perimeter),this._intersectedPerimeter=P(this._intersectedPerimeter),this._areaLabel=P(this._areaLabel),this._perimeterLengthLabel=P(this._perimeterLengthLabel),this._projectionLines=P(this._projectionLines),this.set("view",null)}_update(){if(this.destroyed||!this.view.ready||!this.view.renderCoordsHelper)return;const{analysisViewData:{measurementData:t},analysisViewData:e}=this;t!=null&&(this._updateViewData(t,e.path,e.stagedPoint),this._updateOrigin(),this._updatePathSegments(),this._updatePerimeterSegments(),this._updateArea(),this._updateProjectionLines(),this._updateLabels())}_updateViewData(t,e,s){const i=t.validMeasurement,r=t.actualMeasurementMode==="geodesic",n=r?t.geodesicArea:t.area;let o=1;if(n){const h=this._toPreferredAreaUnit(n,this.analysisViewData.unit);o=at(Math.sqrt(h.value)/Math.sqrt(300)),o*=Math.sqrt(lt(1,h.unit,"square-meters")),o/=t.unitNormalizer.normalizeDistance(1)}const l={validMeasurement:i,numVertices:t.numVertices,hasStagedVertex:t.hasStagedVertex,path:e,pathVersion:e.version,stagedPoint:s,measurementData:t,mode:t.actualMeasurementMode,positionsGeographic:t.positionsGeographic,positionsRenderCoords:t.positionsRenderCoords,positionsProjected:t.positionsProjectedWorldCoords,positionsFittedRenderCoords:t.positionsFittedRenderCoords,intersectingSegments:r?t.geodesicIntersectingSegments:t.intersectingSegments,triangleIndices:r?t.geodesicTriangleIndices:t.triangleIndices,fittingMode:t.fittingMode,areaCentroid:r?t.geodesicAreaCentroidRenderCoords:t.areaCentroidRenderCoords,pathLengthLabelSegmentIndex:i?0:e.numVertices-2,perimeterLengthLabelSegmentIndex:0,checkerSize:o};this._set("viewData",l)}_updateOrigin(){const t=this.viewData;se(t.positionsRenderCoords,this._origin),ht(this._originTransform,this._origin),this._measurementArea.transform=this._originTransform,this._projectionLines.transform=this._originTransform}_createSegments(t){const e=this.viewData,s=this.view.renderCoordsHelper.spatialReference,i=e.mode,r=[],n=[],o=[],l=e.numVertices,h=e.validMeasurement?l:l-1;for(let c=0;c<h;++c){const g=e[t][c],m=e[t][(c+1)%l];let f=null;switch(i){case"euclidean":f=new zt(g,m);break;case"geodesic":f=new Rt(g,m,s)}e.intersectingSegments.has(c)?o.push(f):n.push(f),r.push(f)}let p=null;return e.validMeasurement&&e.hasStagedVertex&&h>=2?p=r[r.length-2]:e.hasStagedVertex&&h>=1&&(p=r[r.length-1]),{all:r,nonIntersecting:n,intersecting:o,stagedSegment:p}}_updatePathSegments(){const{visible:t}=this,e=this._createSegments("positionsRenderCoords");this._path.setGeometryFromSegments(e.nonIntersecting,this._origin),this._path.visible=t,this._intersectedPath.setGeometryFromSegments(e.intersecting,this._origin),this._intersectedPath.visible=t,this._pathSegments=e.all}_updatePerimeterSegments(){const t=this.visible&&this.viewData.mode==="euclidean",e=this._createSegments("positionsFittedRenderCoords");this._perimeter.setGeometryFromSegments(e.nonIntersecting,this._origin),this._perimeter.visible=t,this._intersectedPerimeter.setGeometryFromSegments(e.intersecting,this._origin),this._intersectedPerimeter.visible=t,this._perimeterSegments=e.all}_updateArea(){const t=this.viewData;switch(t.mode){case"euclidean":this._updateAreaEuclidean(t);break;case"geodesic":this._updateAreaGeodesic()}}_updateAreaEuclidean(t){const e=this.visible;t.validMeasurement&&t.intersectingSegments.size===0&&t.triangleIndices?(this._measurementArea.geometry={uv:t.positionsProjected,position:t.positionsFittedRenderCoords,triangleIndices:t.triangleIndices},this._measurementArea.size=[t.checkerSize,t.checkerSize],this._measurementArea.visible=e):this._measurementArea.visible=!1}_updateAreaGeodesic(){this._measurementArea.visible=!1}_updateProjectionLines(){const t=this.viewData,e=this.visible,s=t.mode,i=t.numVertices;if(i>0&&t.validMeasurement&&s==="euclidean"){const r=[];for(let n=0;n<i;++n){const o=u();T(o,t.positionsRenderCoords[n],this._origin);const l=u();T(l,t.positionsFittedRenderCoords[n],this._origin),r.push([o,l])}this._projectionLines.geometry=r,this._projectionLines.visible=e}else this._projectionLines.geometry=null,this._projectionLines.visible=!1}_updateLabels(){if(this.destroyed)return;const{viewData:t}=this,{measurementData:e,mode:s,path:i}=t;if(!i)return;const r=this.visible,n=this._formatAreaLabel(this.messages,s==="geodesic"?e.geodesicArea:e.area,this.analysisViewData.unit);if(n!=null?(this._areaLabel.geometry={type:"point",point:t.areaCentroid},this._areaLabel.text=n,this._areaLabel.visible=t.validMeasurement&&t.intersectingSegments.size===0&&r):this._areaLabel.visible=!1,this._set("areaLabel",n),t.validMeasurement&&t.intersectingSegments.size===0){const o=t.mode==="geodesic",l=o?e.geodesicPathLength:e.validMeasurement?e.perimeterLength:e.pathLength,h=this._formatLengthLabel(this.messages,l,this.analysisViewData.unit);this._set("perimeterLengthLabel",h),this._perimeterLengthLabel.distance=this._parameters.labelDistance,this._perimeterLengthLabel.anchor="top",this._perimeterLengthLabel.text=h,this._perimeterLengthLabel.visible=!0;let p=!0;for(let c=0;c<t.numVertices;++c){const g=(t.perimeterLengthLabelSegmentIndex+c)%t.numVertices,m=o||!e.validMeasurement?this._pathSegments[g]:this._perimeterSegments[g];if(p=!0,this._perimeterLengthLabel.geometry={type:"segment",segment:m,sampleLocation:"center"},!this._perimeterLengthLabel.overlaps(this._areaLabel))break;p=!1}this._perimeterLengthLabel.visible=p&&r}else this._perimeterLengthLabel.visible=!1}_toPreferredAreaUnit(t,e){return ft(t,this._preferredAreaUnit(t,e))}_preferredAreaUnit(t,e){switch(e){case"metric":return ct(t.value,t.unit);case"imperial":return dt(t.value,t.unit);default:return e}}_preferredLengthUnit(t,e){const s=this._deriveLengthUnitFromAreaUnit(e);switch(s){case"metric":return ut(t.value,t.unit);case"imperial":return pt(t.value,t.unit);default:return s}}_deriveLengthUnitFromAreaUnit(t){switch(t){case"metric":case"ares":case"hectares":return"metric";case"imperial":case"acres":return"imperial";case"square-inches":return"inches";case"square-feet":return"feet";case"square-yards":return"yards";case"square-miles":return"miles";case"square-us-feet":return"us-feet";case"square-millimeters":return"millimeters";case"square-centimeters":return"centimeters";case"square-decimeters":return"decimeters";case"square-meters":return"meters";case"square-kilometers":return"kilometers"}throw new Error("unhandled area unit")}_formatAreaLabel(t,e,s){return t&&e&&Ce(t,e,this._preferredAreaUnit(e,s))}_formatLengthLabel(t,e,s){return t&&e&&Ce(t,e,this._preferredLengthUnit(e,s))}_updateMessageBundle(){this.loadingMessages=!0,gt("esri/core/t9n/Units").then(t=>{this.messages=t,this.view&&this._update()}).finally(()=>{this.loadingMessages=!1})}};var B;a([d()],L.prototype,"_parameters",null),a([d()],L.prototype,"view",void 0),a([d()],L.prototype,"messages",void 0),a([d()],L.prototype,"analysis",void 0),a([d()],L.prototype,"viewData",void 0),a([d()],L.prototype,"analysisViewData",void 0),a([d({readOnly:!0})],L.prototype,"areaLabel",void 0),a([d({readOnly:!0})],L.prototype,"perimeterLengthLabel",void 0),a([d()],L.prototype,"loadingMessages",void 0),a([d()],L.prototype,"visible",null),L=a([X("esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurementVisualization")],L),function(t){t[t.Small=12]="Small",t[t.Large=16]="Large"}(B||(B={}));const ys={validMeasurement:!1,numVertices:0,hasStagedVertex:!1,path:null,pathVersion:-1,stagedPoint:null,measurementData:null,mode:null,positionsGeographic:null,positionsRenderCoords:null,positionsProjected:null,positionsFittedRenderCoords:null,intersectingSegments:null,triangleIndices:null,fittingMode:null,areaCentroid:null,pathLengthLabelSegmentIndex:null,perimeterLengthLabelSegmentIndex:null,checkerSize:null};let _=class extends _t(ie){constructor(t){super(t),this.type="area-measurement-view-3d",this.analysis=null,this.measurementData=null,this.lastDraggedVertex=null,this.stagedPoint=null,this.mode=te.Auto}initialize(){const{analysis:t,view:e}=this;this.path=new w({view:e,areaMeasurement:t}),this.analysisVisualization=new L({view:e,analysis:t,analysisViewData:this}),this.analysisController=new R({view:e,analysis:t,analysisViewData:this})}destroy(){this.analysisController=P(this.analysisController),this.analysisVisualization=P(this.analysisVisualization),this.path.destroy()}get updating(){var t;return!!((t=this.analysisVisualization)!=null&&t.loadingMessages)}get result(){const{measurementData:t}=this;return t==null?{area:null,mode:null,perimeter:null}:t.actualMeasurementMode==="euclidean"?{area:t.area,perimeter:t.perimeterLength,mode:"euclidean"}:{area:t.geodesicArea,perimeter:t.pathLength,mode:"geodesic"}}get viewData(){return this.analysisVisualization.viewData}get validMeasurement(){return this.path.isValidPolygon}get unit(){return this.analysis.unit??this._defaultUnit}get testData(){return{visualization:this.analysisVisualization,controller:this.analysisController}}};a([d({readOnly:!0})],_.prototype,"type",void 0),a([d({constructOnly:!0,nonNullable:!0})],_.prototype,"analysis",void 0),a([d()],_.prototype,"updating",null),a([d()],_.prototype,"analysisVisualization",void 0),a([d()],_.prototype,"analysisController",void 0),a([d()],_.prototype,"result",null),a([d()],_.prototype,"measurementData",void 0),a([d()],_.prototype,"viewData",null),a([d()],_.prototype,"validMeasurement",null),a([d()],_.prototype,"path",void 0),a([d()],_.prototype,"lastDraggedVertex",void 0),a([d()],_.prototype,"stagedPoint",void 0),a([d()],_.prototype,"mode",void 0),a([d()],_.prototype,"unit",null),a([d(mt)],_.prototype,"_defaultUnit",void 0),_=a([X("esri.views.3d.analysis.AreaMeasurementAnalysisView3D")],_);const vs=_,qs=Object.freeze(Object.defineProperty({__proto__:null,default:vs},Symbol.toStringTag,{value:"Module"}));export{qs as A,hs as n};
