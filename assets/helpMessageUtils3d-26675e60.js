import{ez as f,dN as M,f6 as P,aW as S}from"./index-b516d057.js";import{s as T,g as b}from"./elevationInfoUtils-be36d866.js";function k(e,r){const s=e==null?void 0:e.geometry;if(!e||(s==null?void 0:s.type)!=="mesh"||!r)return;const{renderCoordsHelper:c,elevationProvider:x}=r,{camera:d}=r.state,{extent:t}=s,{center:h,spatialReference:o}=t,z=f(o),n=M(o),v=f(c.spatialReference),w=t.width*z,y=t.height*n,l=(t.zmax??0)*n,p=l-(t.zmin??0)*n,C=Math.max(w,y,p)/v,{x:m,y:i}=h,u=h.z??0;P(a,m,i,u),c.toRenderCoords(a,o,a);const g=C/d.computeScreenPixelSizeAt(a);if(g>d.width*H)return"meshTooClose";if(g<A)return"meshTooFar";const R=T(e),{absoluteZ:$}=b(m,i,l,o,r,R);return $<(x.getElevation(m,i,u,o,"ground")??0)*n+p*U?"meshUnderground":"mesh"}const A=20,H=1,U=.1,a=S();export{k as getDrawMeshHelpMessage};
