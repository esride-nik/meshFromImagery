import{bm as n,al as c,an as _,a5 as u,a6 as w,a9 as g}from"./index-b516d057.js";import{r as I,n as f}from"./imageUtils-77e234a2.js";import{m as S}from"./LayerView2D-4970cda5.js";import{h as T}from"./TileInfoView-ce4d65fb.js";import{e as d}from"./TileKey-4b1303ff.js";import{y as V,r as v}from"./TileStrategy-a729431f.js";import{u as x}from"./LayerView-060b46d4.js";import{a as M}from"./RefreshableLayerView-4a86a8ac.js";import"./BitmapTileContainer-5447a798.js";import"./mat3f32-6c416b1c.js";import"./Bitmap-a6124485.js";import"./vec2f32-eaf29605.js";import"./DisplayObject-9a6e3923.js";import"./contextUtils-81fda295.js";import"./enums-bdecffa2.js";import"./Texture-bcb6d63f.js";import"./TiledDisplayObject-e7d105ae.js";import"./WGLContainer-73827040.js";import"./definitions-5366d472.js";import"./FramebufferObject-123b7c8d.js";import"./VertexArrayObject-d19dab8d.js";import"./VertexElementDescriptor-2925c6af.js";import"./WGLBrushVTLSymbol-00207292.js";import"./vec4f32-0d1b2306.js";import"./enums-b1d611e3.js";import"./number-e491b09e.js";import"./StyleDefinition-29c49b98.js";import"./enums-f1a6a48a.js";import"./config-1337d16e.js";import"./GeometryUtils-dd03fc25.js";import"./color-a1c19855.js";import"./ShaderCompiler-77d0dcb6.js";import"./ProgramTemplate-611fcbef.js";import"./Program-96bc94ed.js";import"./MaterialKey-96278cae.js";import"./alignmentUtils-ae955d28.js";import"./heatmapUtils-7f42325f.js";import"./heatmapTextureUtils-6877589a.js";import"./DefaultVertexAttributeLayouts-8962d8eb.js";import"./Container-1d2d049f.js";import"./EffectView-b2b90b02.js";import"./featureConversionUtils-09cf00ff.js";import"./OptimizedFeature-e90b69df.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./OptimizedGeometry-196224d4.js";import"./TileContainer-8209da9f.js";import"./scaleUtils-72744379.js";import"./MapView-feaca8e4.js";import"./Viewpoint-f83262d0.js";import"./Cyclical-4c223a04.js";import"./CollectionFlattener-193451da.js";import"./DefaultUI-af7068c2.js";import"./jsxFactory-92036771.js";import"./uuid-709b6c67.js";import"./UpdatingHandles-7949a657.js";import"./screenUtils-8dc4a7f9.js";import"./signal-51ed66f5.js";import"./Map-1ad4186f.js";import"./Basemap-8d62c69e.js";import"./loadAll-5e767cfa.js";import"./writeUtils-e226a8aa.js";import"./Ground-ed93a93a.js";import"./editableLayers-856f2cb4.js";import"./basemapUtils-6ec10a55.js";import"./TablesMixin-292d1d89.js";import"./HeightModelInfo-b816d32b.js";import"./IViewEvents-9a85f53d.js";import"./interfaces-0421c5e6.js";import"./heightModelInfoUtils-0dd2b6e4.js";import"./ViewingMode-5d7d590b.js";import"./mat2d-d4af8487.js";import"./mat2df32-fb26a8c9.js";import"./mat2df64-4d1a9198.js";import"./capabilities-9d56a1da.js";import"./themeUtils-7dcf5b71.js";import"./globalCss-94006b67.js";import"./accessibleHandler-e91101b2.js";import"./Compass-b37d7d1d.js";import"./GoTo-4d856ce0.js";import"./NavigationToggle-57c00adb.js";import"./Zoom-73b5f25a.js";import"./resources-d4afed0c.js";import"./unitBezier-881ac1eb.js";import"./TileStore-c31b905a.js";import"./quickselect-bc0541de.js";import"./QuantizationParameters-f983cf8d.js";import"./ColorBackground-5c13202f.js";import"./ClipRect-9f8fe7eb.js";import"./QueueProcessor-4b9d43d3.js";const q=new Set([102113,102100,3857,3785,900913]),b=[0,0];let o=class extends M(I(S(x))){constructor(){super(...arguments),this._tileStrategy=null,this._fetchQueue=null,this.layer=null}get tileMatrixSet(){const t=this._getTileMatrixSetBySpatialReference(this.layer.activeLayer);return t?(t.id!==this.layer.activeLayer.tileMatrixSetId&&(this.layer.activeLayer.tileMatrixSetId=t.id),t):null}update(t){this._fetchQueue.pause(),this._fetchQueue.state=t.state,this._tileStrategy.update(t),this._fetchQueue.resume()}attach(){var e;const t=(e=this.tileMatrixSet)==null?void 0:e.tileInfo;t&&(this._tileInfoView=new T(t),this._fetchQueue=new V({tileInfoView:this._tileInfoView,concurrency:16,process:(i,r)=>this.fetchTile(i,r)}),this._tileStrategy=new v({cachePolicy:"keep",resampling:!0,acquireTile:i=>this.acquireTile(i),releaseTile:i=>this.releaseTile(i),tileInfoView:this._tileInfoView}),this.addAttachHandles(this._updatingHandles.add(()=>{var i,r;return[(r=(i=this.layer)==null?void 0:i.activeLayer)==null?void 0:r.styleId,this.tileMatrixSet]},()=>this.doRefresh())),super.attach())}detach(){var t,e;super.detach(),(t=this._tileStrategy)==null||t.destroy(),(e=this._fetchQueue)==null||e.destroy(),this._fetchQueue=this._tileStrategy=this._tileInfoView=null}moveStart(){this.requestUpdate()}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){var e;return((e=this.layer.activeLayer.tileMatrixSets)==null?void 0:e.some(i=>{var r;return n((r=i.tileInfo)==null?void 0:r.spatialReference,t)}))??!1}async doRefresh(){if(this.attached){if(this.suspended)return this._tileStrategy.clear(),void this.requestUpdate();this._fetchQueue.reset(),this._tileStrategy.refresh(t=>this._updatingHandles.addPromise(this._enqueueTileFetch(t)))}}acquireTile(t){const e=this._bitmapView.createTile(t),i=e.bitmap;return[i.x,i.y]=this._tileInfoView.getTileCoords(b,e.key),i.resolution=this._tileInfoView.getTileResolution(e.key),[i.width,i.height]=this._tileInfoView.tileInfo.size,this._updatingHandles.addPromise(this._enqueueTileFetch(e)),this._bitmapView.addChild(e),this.requestUpdate(),e}releaseTile(t){this._fetchQueue.abort(t.key.id),this._bitmapView.removeChild(t),t.once("detach",()=>t.destroy()),this.requestUpdate()}async fetchTile(t,e={}){const i="tilemapCache"in this.layer?this.layer.tilemapCache:null,{signal:r,resamplingLevel:s=0}=e;if(!i)return this._fetchImage(t,r);const a=new d(0,0,0,0);let l;try{await i.fetchAvailabilityUpsample(t.level,t.row,t.col,a,{signal:r}),l=await this._fetchImage(a,r)}catch(p){if(c(p))throw p;if(s<3){const m=this._tileInfoView.getTileParentId(t.id);if(m){const h=new d(m),y=await this.fetchTile(h,{...e,resamplingLevel:s+1});return f(this._tileInfoView,y,h,t)}}throw p}return f(this._tileInfoView,l,a,t)}canResume(){const t=super.canResume();return t&&this.tileMatrixSet!==null}async _enqueueTileFetch(t){if(!this._fetchQueue.has(t.key.id)){try{const e=await this._fetchQueue.push(t.key);t.bitmap.source=e,t.bitmap.width=this._tileInfoView.tileInfo.size[0],t.bitmap.height=this._tileInfoView.tileInfo.size[1],t.once("attach",()=>this.requestUpdate())}catch(e){c(e)||_.getLogger(this).error(e)}this.requestUpdate()}}async _fetchImage(t,e){return this.layer.fetchImageBitmapTile(t.level,t.row,t.col,{signal:e})}_getTileMatrixSetBySpatialReference(t){const e=this.view.spatialReference;if(!t.tileMatrixSets)return null;let i=t.tileMatrixSets.find(r=>{var s;return n((s=r.tileInfo)==null?void 0:s.spatialReference,e)});return!i&&e.isWebMercator&&(i=t.tileMatrixSets.find(r=>{var s;return q.has(((s=r.tileInfo)==null?void 0:s.spatialReference.wkid)??-1)})),i}};u([w({readOnly:!0})],o.prototype,"tileMatrixSet",null),o=u([g("esri.views.2d.layers.WMTSLayerView2D")],o);const he=o;export{he as default};
