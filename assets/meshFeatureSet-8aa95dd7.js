import{e3 as d,ah as y,eH as S,M as w,hs as M,ht as N,hu as g,B as T,db as D,hv as P,hw as F,aK as E,hx as I,hy as x,an as O}from"./index-b516d057.js";const h=()=>O.getLogger("esri.rest.support.meshFeatureSet");function j(e,t,r){const n=r.features;r.features=[],delete r.geometryType;const s=d.fromJSON(r);if(s.geometryType="mesh",!r.assetMaps)return s;const a=v(t,r.assetMaps),o=e.sourceSpatialReference??y.WGS84,l=r.globalIdFieldName,{outFields:i}=e,c=i!=null&&i.length>0?$(i.includes("*")?null:new Set(i)):()=>({});for(const f of n){const u=L(f,l,o,t,a);u!=null&&s.features.push(new S({geometry:u,attributes:c(f)}))}return s}function $(e){return({attributes:t})=>{if(!t)return{};if(!e)return t;for(const r in t)e.has(r)||delete t[r];return t}}function L(e,t,r,n,s){const a=e.attributes[t],o=s.get(a);if(o==null)return h().error("mesh-feature-set:asset-not-found","Service returned a feature which was not found in the asset map",e),null;if(!e.geometry)return h().error("mesh-feature-set:no-geometry","Service returned a feature without geometry",e),null;const{originPoint:l,originVector:i}=R(e,r,n),c=w.fromJSON(e.geometry);c.spatialReference=r;const f=b(e.attributes,n),u=o.projectVertices?new M({origin:i}):new N({origin:i}),m=A(o);return m?g.createWithExternalSource(l,m,{extent:c,transform:f,vertexSpace:u}):g.createIncomplete(l,{extent:c,transform:f,vertexSpace:u})}function R({attributes:e},t,{transformFieldRoles:r}){const n=e[r.originX],s=e[r.originY],a=e[r.originZ];return{originPoint:new T({x:n,y:s,z:a,spatialReference:t}),originVector:D(n,s,a)}}function b(e,{transformFieldRoles:t}){return new P({translation:[e[t.translationX],-e[t.translationZ],e[t.translationY]],rotationAxis:[e[t.rotationX],-e[t.rotationZ],e[t.rotationY]],rotationAngle:e[t.rotationDeg],scale:[e[t.scaleX],e[t.scaleZ],e[t.scaleY]]})}var p;function v(e,t){const r=new Map;for(const n of t){const s=n.parentGlobalId;if(s==null)continue;const a=n.assetName,o=n.assetType,l=n.assetHash,i=n.assetURL,c=n.conversionStatus,f=n.seqNo,u=F(o,e.supportedFormats);if(!u){h().error("mesh-feature-set:unknown-format",`Service returned an asset of type ${o}, but it does not list it as a supported type`);continue}const m=E(r,s,()=>({projectVertices:V(n.flags).projectVertices,files:new Map}));E(m.files,a,()=>({name:a,type:o,mimeType:u,status:C(c),parts:[]})).parts[f]={hash:l,url:i}}return r}function A(e){const t=Array.from(e.files.values()),r=new Array;for(const n of t){if(n.status!==p.COMPLETED)return null;const s=new Array;for(const a of n.parts){if(!a)return null;s.push(new I(a.url,a.hash))}r.push(new x(n.name,n.mimeType,s))}return r}function C(e){switch(e){case"COMPLETED":case"SUBMITTED":return p.COMPLETED;case"INPROGRESS":return p.PENDING;default:return p.FAILED}}function V(e){return{projectVertices:e.includes("PROJECT_VERTICES")}}(function(e){e[e.FAILED=0]="FAILED",e[e.PENDING=1]="PENDING",e[e.COMPLETED=2]="COMPLETED"})(p||(p={}));export{v as assetMapFromAssetMapsJSON,L as extractMesh,j as meshFeatureSetFromJSON};
