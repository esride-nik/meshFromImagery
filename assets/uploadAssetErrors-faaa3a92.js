import{s}from"./index-b516d057.js";const e="upload-assets",r=()=>new Error;class p extends s{constructor(){super(`${e}:unsupported`,"Layer does not support asset uploads.",r())}}class u extends s{constructor(){super(`${e}:no-glb-support`,"Layer does not support glb.",r())}}class d extends s{constructor(){super(`${e}:no-supported-source`,"No supported external source found",r())}}class c extends s{constructor(){super(`${e}:not-base-64`,"Expected gltf data in base64 format after conversion.",r())}}class l extends s{constructor(){super(`${e}:unable-to-prepare-options`,"Unable to prepare uploadAsset request options.",r())}}class i extends s{constructor(a,t){super(`${e}:bad-response`,`Bad response. Uploaded ${a} items and received ${t} results.`,r())}}class $ extends s{constructor(a,t){super(`${e}-layer:upload-failed`,`Failed to upload mesh file ${a}. Error code: ${(t==null?void 0:t.code)??"-1"}. Error message: ${(t==null?void 0:t.messages)??"unknown"}`,r())}}class f extends s{constructor(a){super(`${e}-layer:unsupported-format`,`The service allowed us to upload an asset of FormatID ${a}, but it does not list it in its supported formats.`,r())}}class x extends s{constructor(){super(`${e}:convert3D-failed`,"convert3D failed.")}}export{d as a,$ as c,f as d,x as l,c as n,l as p,p as r,u as t,i as u};
