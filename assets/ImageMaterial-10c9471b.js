import{gH as l,_ as T,a5 as i,kK as _,c9 as A,bB as $}from"./index-b516d057.js";import{o as I,d as O,b as S,P as b,c as x,s as C,e as D,f as n,g as v,h as w,i as N,r as R,j as V,k as L,l as F,m as M,n as U,A as c,p as B,q as G,u as z}from"./DefaultTechniqueConfiguration-b4dbe32f.js";import{r as H}from"./VerticalOffset.glsl-5743f98e.js";import{u as W}from"./Material-5f4156ac.js";import{o as d,s as j,S as k,A as q,h as Q,l as K,a as J,E as X,_ as Y,b as Z,c as ee}from"./OrderIndependentTransparency-755f7dcc.js";import{F as te,G as se}from"./RenderGeometry-5dbc1699.js";import{o as u}from"./interfaces-8918b36f.js";import{r as o}from"./ShaderTechniqueConfiguration-2502462e.js";import{R as E}from"./enums-bdecffa2.js";function ae(t){const e=new I,{vertex:s,fragment:a}=e;return O(s,t),e.include(S,t),e.attributes.add(l.POSITION,"vec3"),e.attributes.add(l.UV0,"vec2"),t.perspectiveInterpolation&&e.attributes.add(l.PERSPECTIVEDIVIDE,"float"),e.varyings.add("vpos","vec3"),t.multipassEnabled&&e.varyings.add("depth","float"),s.code.add(u`
    void main(void) {
      vpos = position;
      ${t.multipassEnabled?"depth = (view * vec4(vpos, 1.0)).z;":""}
      vTexCoord = uv0;
      gl_Position = transformPosition(proj, view, vpos);

      ${t.perspectiveInterpolation?"gl_Position *= perspectiveDivide;":""}
    }
  `),e.include(b,t),e.include(x,t),a.uniforms.add(new C("tex",p=>p.texture),new D("opacity",p=>p.opacity)),e.varyings.add("vTexCoord","vec2"),t.output===n.Alpha?a.code.add(u`
    void main() {
      discardBySlice(vpos);
      ${t.multipassEnabled?"terrainDepthTest(depth);":""}

      float alpha = texture(tex, vTexCoord).a * opacity;
      if (alpha  < ${u.float(v)}) {
        discard;
      }

      fragColor = vec4(alpha);
    }
    `):(a.include(w),a.code.add(u`
    void main() {
      discardBySlice(vpos);
      ${t.multipassEnabled?"terrainDepthTest(depth);":""}
      fragColor = texture(tex, vTexCoord) * opacity;

      if (fragColor.a < ${u.float(v)}) {
        discard;
      }

      fragColor = highlightSlice(fragColor, vpos);
      ${t.transparencyPassType===d.Color?"fragColor = premultiplyAlpha(fragColor);":""}
    }
    `)),e}const re=Object.freeze(Object.defineProperty({__proto__:null,build:ae},Symbol.toStringTag,{value:"Module"}));class g extends R{initializeProgram(e){return new V(e.rctx,g.shader.get().build(this.configuration),y)}_setPipelineState(e,s){const a=this.configuration,p=e===d.NONE,h=e===d.FrontFace;return k({blending:a.output!==n.Color&&a.output!==n.Alpha||!a.transparent?null:p?ie:q(e),culling:Q(a.cullFace),depthTest:{func:K(e)},depthWrite:p?a.writeDepth?J:null:X(e),colorWrite:Y,stencilWrite:a.hasOccludees?L:null,stencilTest:a.hasOccludees?s?F:M:null,polygonOffset:p||h?null:Z(a.enableOffset)})}initializePipeline(){return this._occludeePipelineState=this._setPipelineState(this.configuration.transparencyPassType,!0),this._setPipelineState(this.configuration.transparencyPassType,!1)}getPipeline(e){return e?this._occludeePipelineState:super.getPipeline()}}g.shader=new N(re,()=>T(()=>import("./ImageMaterial.glsl-da4c4fad.js"),["assets/ImageMaterial.glsl-da4c4fad.js","assets/DefaultTechniqueConfiguration-b4dbe32f.js","assets/index-b516d057.js","assets/index-b252abd2.css","assets/requestImageUtils-b142708c.js","assets/enums-bdecffa2.js","assets/Texture-bcb6d63f.js","assets/contextUtils-81fda295.js","assets/interfaces-8918b36f.js","assets/Material-5f4156ac.js","assets/ViewingMode-5d7d590b.js","assets/FramebufferObject-123b7c8d.js","assets/ShaderTechniqueConfiguration-2502462e.js","assets/OrderIndependentTransparency-755f7dcc.js","assets/VerticalOffset.glsl-5743f98e.js","assets/RenderGeometry-5dbc1699.js","assets/vec3f32-bac7ea57.js","assets/ElevationProvider-abb53936.js","assets/dehydratedPoint-5a1dfed5.js","assets/hydratedFeatures-2365c307.js","assets/weather-2eb64924.js","assets/RenderState-1d6218ee.js","assets/NestedMap-1b5db22e.js","assets/frustum-f9d53cdf.js","assets/VertexElementDescriptor-2925c6af.js","assets/VertexArrayObject-d19dab8d.js","assets/Octree-7cea9440.js","assets/InterleavedLayout-d76b0d59.js","assets/types-1305598a.js","assets/floatRGBA-ca990bbb.js","assets/Intersector-2e1d9db3.js","assets/Intersector-fa865806.js","assets/boundedPlane-1da2f094.js","assets/verticalOffsetUtils-e5214af9.js","assets/orientedBoundingBox-67c5cd22.js","assets/glUtil-ce5ee52b.js","assets/Scheduler-ff5943a4.js","assets/signal-51ed66f5.js","assets/debugFlags-9a30f077.js"]));const ie=j(E.ONE,E.ONE_MINUS_SRC_ALPHA);class r extends U{constructor(){super(...arguments),this.output=n.Color,this.cullFace=_.None,this.hasSlicePlane=!1,this.transparent=!1,this.enableOffset=!0,this.writeDepth=!0,this.hasOccludees=!1,this.transparencyPassType=d.NONE,this.multipassEnabled=!1,this.cullAboveGround=!1,this.perspectiveInterpolation=!0}}i([o({count:n.COUNT})],r.prototype,"output",void 0),i([o({count:_.COUNT})],r.prototype,"cullFace",void 0),i([o()],r.prototype,"hasSlicePlane",void 0),i([o()],r.prototype,"transparent",void 0),i([o()],r.prototype,"enableOffset",void 0),i([o()],r.prototype,"writeDepth",void 0),i([o()],r.prototype,"hasOccludees",void 0),i([o({count:d.COUNT})],r.prototype,"transparencyPassType",void 0),i([o()],r.prototype,"multipassEnabled",void 0),i([o()],r.prototype,"cullAboveGround",void 0),i([o()],r.prototype,"perspectiveInterpolation",void 0),i([o({constValue:!1})],r.prototype,"occlusionPass",void 0);const y=new Map([[l.POSITION,0],[l.UV0,2],[l.PERSPECTIVEDIVIDE,3]]);let Pe=class extends te{constructor(e){super(e,new pe),this.supportsEdges=!0,this._vertexAttributeLocations=y,this._configuration=new r}getConfiguration(e,s){return this._configuration.output=e,this._configuration.cullFace=this.parameters.cullFace,this._configuration.hasSlicePlane=this.parameters.hasSlicePlane,this._configuration.transparent=this.parameters.transparent,this._configuration.writeDepth=this.parameters.writeDepth,this._configuration.hasOccludees=this.parameters.hasOccludees,this._configuration.transparencyPassType=s.transparencyPassType,this._configuration.enableOffset=s.camera.relativeElevation<ee,this._configuration.multipassEnabled=s.multipassEnabled,this._configuration.cullAboveGround=s.multipassTerrain.cullAboveGround,this._configuration.perspectiveInterpolation=this.parameters.perspectiveInterpolation,this._configuration}produces(e,s){return s===n.Color||s===n.Alpha||s===n.Highlight?e===c.DRAPED_MATERIAL?!0:s===n.Highlight?e===c.OPAQUE_MATERIAL:e===(this.parameters.transparent?this.parameters.writeDepth?c.TRANSPARENT_MATERIAL:c.TRANSPARENT_DEPTH_WRITE_DISABLED_MATERIAL:c.OPAQUE_MATERIAL):!1}createGLMaterial(e){return new oe(e)}createBufferWriter(){const e=se.clone();return this.parameters.perspectiveInterpolation&&e.f32(l.PERSPECTIVEDIVIDE),new ne(e)}};class oe extends H{constructor(e){super({...e,...e.material.parameters})}_updateParameters(e){return this.updateTexture(this._material.parameters.textureId),this._material.setParameters(this.textureBindParameters),this.ensureTechnique(g,e)}_updateOccludeeState(e){e.hasOccludees!==this._material.parameters.hasOccludees&&(this._material.setParameters({hasOccludees:e.hasOccludees}),this._updateParameters(e))}beginSlot(e){return this._output!==n.Color&&this._output!==n.Alpha||this._updateOccludeeState(e),this._updateParameters(e)}}class ne extends B{write(e,s,a,p,h){for(const f of this.vertexBufferLayout.fields.keys()){const m=a.attributes.get(f);if(m)if(f===l.PERSPECTIVEDIVIDE){A(m.size===1);const P=p.getField(f,$);P&&G(m,P,h)}else z(f,m,e,s,p,h)}}}class pe extends W{constructor(){super(...arguments),this.transparent=!1,this.writeDepth=!0,this.hasSlicePlane=!1,this.cullFace=_.None,this.hasOccludees=!1,this.opacity=1,this.textureId=null,this.initTextureTransparent=!0,this.perspectiveInterpolation=!1}}export{Pe as g,ae as v};
