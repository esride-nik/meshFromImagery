import{fy as v,ah as $,dc as A,fz as d,fA as x,fu as h,fB as m,f6 as y,aW as l,fe as u,d8 as i,fv as R,fC as f}from"./index-b516d057.js";import{H as C,_ as H}from"./boundedPlane-1da2f094.js";function S(n){const{value:e,operations:t}=n;return{operations:t,value:t.create(e)}}function U(n,e,t){return n.operations.setExtent(n.value,e,t.value),t}function P(n){return{operations:n,value:n.create()}}function p(n,e,t=P(n)){return t.operations=n,n.copy(e,t.value),t}function Z(n){return p(x,A(0,0,0,d(n).radius))}const c=2**50;function b(){return p(H,C([0,0,0],[c,0,0],[0,c,0]))}function g(n,e,t){return n.operations.axisAt(n.value,e,h.Z,t)}function j(n,e,t,r){return n.operations.axisAt(n.value,e,t,r)}function k(n,e,t){return n.operations.intersectRay(n.value,e,t)}function q(n,e,t){return n.operations.intersectRayClosestSilhouette(n.value,e,t)}function w(n,e){return n.operations.altitudeAt(n.value,e)}function _(n,e,t,r){return n.operations.setAltitudeAt(n.value,e,t,r)}function D(n,e,t,r){return e!==r&&m(r,e),y(o,r[12],r[13],r[14]),_(n,o,t,o),r[12]=o[0],r[13]=o[1],r[14]=o[2],r}function E(n,e,t){return n.operations.elevate(n.value,e,t.value)}const o=l();function F(n,e,t,r,a){return a[0]=u(n,e),a[1]=u(n,t),a[2]=u(n,r),a}function G(n,e,t,r,a){i(t,n),i(s,e),R(s,s),f(r,s,t),f(a,r,t)}function O(n,e){return n?v(e):e.isGeographic?$.PlateCarree:e}const s=l();export{F as B,G as D,O as F,w as O,g as P,b as R,j as S,_ as T,q as U,D as Z,k as b,S as h,U as j,Z as k,E as q};
