import{al as S,an as R,cb as q,b9 as U,M as $,a5 as h,a6 as f,a9 as I}from"./index-b516d057.js";import{a as w}from"./BitmapContainer-de019d25.js";import{m as E}from"./LayerView2D-4970cda5.js";import{v as H}from"./ExportStrategy-45ef0946.js";import{u as W}from"./LayerView-060b46d4.js";import{a as A}from"./RefreshableLayerView-4a86a8ac.js";import{i as F}from"./WMSLayerView-17758430.js";import"./WGLContainer-73827040.js";import"./definitions-5366d472.js";import"./FramebufferObject-123b7c8d.js";import"./Texture-bcb6d63f.js";import"./contextUtils-81fda295.js";import"./enums-bdecffa2.js";import"./VertexArrayObject-d19dab8d.js";import"./VertexElementDescriptor-2925c6af.js";import"./WGLBrushVTLSymbol-00207292.js";import"./mat3f32-6c416b1c.js";import"./vec4f32-0d1b2306.js";import"./enums-b1d611e3.js";import"./number-e491b09e.js";import"./StyleDefinition-29c49b98.js";import"./enums-f1a6a48a.js";import"./vec2f32-eaf29605.js";import"./config-1337d16e.js";import"./GeometryUtils-dd03fc25.js";import"./color-a1c19855.js";import"./ShaderCompiler-77d0dcb6.js";import"./ProgramTemplate-611fcbef.js";import"./Program-96bc94ed.js";import"./MaterialKey-96278cae.js";import"./alignmentUtils-ae955d28.js";import"./heatmapUtils-7f42325f.js";import"./heatmapTextureUtils-6877589a.js";import"./DefaultVertexAttributeLayouts-8962d8eb.js";import"./Container-1d2d049f.js";import"./EffectView-b2b90b02.js";import"./DisplayObject-9a6e3923.js";import"./featureConversionUtils-09cf00ff.js";import"./OptimizedFeature-e90b69df.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./OptimizedGeometry-196224d4.js";import"./scaleUtils-72744379.js";import"./MapView-feaca8e4.js";import"./Viewpoint-f83262d0.js";import"./Cyclical-4c223a04.js";import"./CollectionFlattener-193451da.js";import"./DefaultUI-af7068c2.js";import"./jsxFactory-92036771.js";import"./uuid-709b6c67.js";import"./UpdatingHandles-7949a657.js";import"./screenUtils-8dc4a7f9.js";import"./signal-51ed66f5.js";import"./Map-1ad4186f.js";import"./Basemap-8d62c69e.js";import"./loadAll-5e767cfa.js";import"./writeUtils-e226a8aa.js";import"./Ground-ed93a93a.js";import"./editableLayers-856f2cb4.js";import"./basemapUtils-6ec10a55.js";import"./TablesMixin-292d1d89.js";import"./HeightModelInfo-b816d32b.js";import"./IViewEvents-9a85f53d.js";import"./interfaces-0421c5e6.js";import"./heightModelInfoUtils-0dd2b6e4.js";import"./ViewingMode-5d7d590b.js";import"./mat2d-d4af8487.js";import"./mat2df32-fb26a8c9.js";import"./mat2df64-4d1a9198.js";import"./capabilities-9d56a1da.js";import"./themeUtils-7dcf5b71.js";import"./globalCss-94006b67.js";import"./accessibleHandler-e91101b2.js";import"./Compass-b37d7d1d.js";import"./GoTo-4d856ce0.js";import"./NavigationToggle-57c00adb.js";import"./Zoom-73b5f25a.js";import"./resources-d4afed0c.js";import"./unitBezier-881ac1eb.js";import"./TileInfoView-ce4d65fb.js";import"./TileKey-4b1303ff.js";import"./TileStrategy-a729431f.js";import"./QueueProcessor-4b9d43d3.js";import"./TileStore-c31b905a.js";import"./quickselect-bc0541de.js";import"./QuantizationParameters-f983cf8d.js";import"./ColorBackground-5c13202f.js";import"./ClipRect-9f8fe7eb.js";import"./Bitmap-a6124485.js";import"./ExportWMSImageParameters-e60a8707.js";let m=class extends F(A(E(W))){constructor(){super(...arguments),this.bitmapContainer=new w}supportsSpatialReference(t){return this.layer.serviceSupportsSpatialReference(t)}update(t){this.strategy.update(t).catch(i=>{S(i)||R.getLogger(this).error(i)})}attach(){const{layer:t}=this,{imageMaxHeight:i,imageMaxWidth:o}=t;this.bitmapContainer=new w,this.container.addChild(this.bitmapContainer),this.strategy=new H({container:this.bitmapContainer,fetchSource:this.fetchImage.bind(this),requestUpdate:this.requestUpdate.bind(this),imageMaxHeight:i,imageMaxWidth:o,imageRotationSupported:!1,imageNormalizationSupported:!1,hidpi:!1}),this.addAttachHandles(q(()=>this.exportImageVersion,()=>this.requestUpdate()))}detach(){this.strategy=U(this.strategy),this.container.removeAllChildren()}moveStart(){}viewChange(){}moveEnd(){this.requestUpdate()}createFetchPopupFeaturesQuery(t){const{view:i,bitmapContainer:o}=this,{x:e,y:p}=t,{spatialReference:b}=i;let r,a=0,d=0;if(o.children.some(C=>{const{width:c,height:g,resolution:y,x:s,y:n}=C,l=s+y*c,x=n-y*g;return e>=s&&e<=l&&p<=n&&p>=x&&(r=new $({xmin:s,ymin:x,xmax:l,ymax:n,spatialReference:b}),a=c,d=g,!0)}),!r)return null;const u=r.width/a,v=Math.round((e-r.xmin)/u),M=Math.round((r.ymax-p)/u);return{extent:r,width:a,height:d,x:v,y:M}}async doRefresh(){this.requestUpdate()}isUpdating(){return this.strategy.updating||this.updateRequested}fetchImage(t,i,o,e){return this.layer.fetchImageBitmap(t,i,o,{timeExtent:this.timeExtent,...e})}};h([f()],m.prototype,"strategy",void 0),h([f()],m.prototype,"updating",void 0),m=h([I("esri.views.2d.layers.WMSLayerView2D")],m);const li=m;export{li as default};
