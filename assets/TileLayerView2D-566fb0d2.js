import{hE as w,ao as y,bm as I,al as m,an as V,a5 as l,a6 as c,a9 as v}from"./index-b516d057.js";import"./EffectView-b2b90b02.js";import"./DisplayObject-9a6e3923.js";import"./Container-1d2d049f.js";import"./contextUtils-81fda295.js";import"./BufferPool-63b313e9.js";import"./enums-b1d611e3.js";import"./WGLContainer-73827040.js";import"./vec4f32-0d1b2306.js";import"./color-a1c19855.js";import"./enums-bdecffa2.js";import"./Texture-bcb6d63f.js";import"./Program-96bc94ed.js";import"./definitions-5366d472.js";import"./MaterialKey-96278cae.js";import"./FramebufferObject-123b7c8d.js";import"./VertexArrayObject-d19dab8d.js";import"./DefaultVertexAttributeLayouts-8962d8eb.js";import"./number-e491b09e.js";import"./StyleDefinition-29c49b98.js";import"./vec2f32-eaf29605.js";import"./enums-fb086c25.js";import"./MagnifierPrograms-5cf229d4.js";import"./OrderIndependentTransparency-755f7dcc.js";import"./interfaces-8918b36f.js";import"./floatRGBA-ca990bbb.js";import"./testSVGPremultipliedAlpha-f5e92e14.js";import{r as H}from"./GraphicsView2D-59987375.js";import"./AttributeStoreView-e5fce3c6.js";import"./featureConversionUtils-09cf00ff.js";import"./vec3f32-bac7ea57.js";import{r as T,o as g,n as f}from"./imageUtils-77e234a2.js";import{m as q}from"./LayerView2D-4970cda5.js";import{a as U}from"./HighlightGraphicContainer-527f73e7.js";import{h as b}from"./TileInfoView-ce4d65fb.js";import{e as d}from"./TileKey-4b1303ff.js";import{y as S,r as C}from"./TileStrategy-a729431f.js";import{u as Q}from"./LayerView-060b46d4.js";import{a as P}from"./RefreshableLayerView-4a86a8ac.js";import{S as k,G as F}from"./MapServiceLayerViewHelper-7f390707.js";import{r as G}from"./drapedUtils-5cffceb9.js";import"./mat3f32-6c416b1c.js";import"./VertexElementDescriptor-2925c6af.js";import"./WGLBrushVTLSymbol-00207292.js";import"./config-1337d16e.js";import"./GeometryUtils-dd03fc25.js";import"./ShaderCompiler-77d0dcb6.js";import"./ProgramTemplate-611fcbef.js";import"./heatmapUtils-7f42325f.js";import"./heatmapTextureUtils-6877589a.js";import"./OptimizedGeometry-196224d4.js";import"./enums-f1a6a48a.js";import"./alignmentUtils-ae955d28.js";import"./cimAnalyzer-ce1886a0.js";import"./fontUtils-56b88a2f.js";import"./BidiEngine-9a40f2f4.js";import"./labelPoint-96433514.js";import"./GeometryUtils-984e8446.js";import"./mat2d-d4af8487.js";import"./mat2df32-fb26a8c9.js";import"./Rect-ea14f53a.js";import"./callExpressionWithFeature-36423058.js";import"./quantizationUtils-17105106.js";import"./Rasterizer-81c172dd.js";import"./rasterizingUtils-364392eb.js";import"./pbf-2651fe50.js";import"./imageutils-3218f9c4.js";import"./Matcher-fcb8339d.js";import"./visualVariablesUtils-b310591f.js";import"./tileUtils-c2f19f52.js";import"./TurboLine-a90259bc.js";import"./defaultsJSON-59981e75.js";import"./ExpandedCIM-76245323.js";import"./QueueProcessor-4b9d43d3.js";import"./signal-51ed66f5.js";import"./CircularArray-ef508845.js";import"./throttle-7bf02de9.js";import"./ComputedAttributeStorage-bbcde1eb.js";import"./OptimizedFeature-e90b69df.js";import"./FieldsIndex-e8db657f.js";import"./UnknownTimeZone-a05df022.js";import"./TimeOnly-879c5107.js";import"./UpdatingHandles-7949a657.js";import"./Viewpoint-f83262d0.js";import"./Cyclical-4c223a04.js";import"./DefaultUI-af7068c2.js";import"./jsxFactory-92036771.js";import"./uuid-709b6c67.js";import"./screenUtils-8dc4a7f9.js";import"./Map-1ad4186f.js";import"./Basemap-8d62c69e.js";import"./loadAll-5e767cfa.js";import"./writeUtils-e226a8aa.js";import"./Ground-ed93a93a.js";import"./CollectionFlattener-193451da.js";import"./editableLayers-856f2cb4.js";import"./basemapUtils-6ec10a55.js";import"./TablesMixin-292d1d89.js";import"./HeightModelInfo-b816d32b.js";import"./IViewEvents-9a85f53d.js";import"./interfaces-0421c5e6.js";import"./heightModelInfoUtils-0dd2b6e4.js";import"./ViewingMode-5d7d590b.js";import"./mat2df64-4d1a9198.js";import"./capabilities-9d56a1da.js";import"./themeUtils-7dcf5b71.js";import"./globalCss-94006b67.js";import"./accessibleHandler-e91101b2.js";import"./Compass-b37d7d1d.js";import"./GoTo-4d856ce0.js";import"./NavigationToggle-57c00adb.js";import"./Zoom-73b5f25a.js";import"./resources-d4afed0c.js";import"./ZoomMomentumEstimator-7437d26a.js";import"./normalizeUtilsSync-7ead5aec.js";import"./projectionSupport-dcf335fc.js";import"./json-48e3ea08.js";import"./defaults-4faa92e6.js";import"./TileStore-c31b905a.js";import"./quickselect-bc0541de.js";import"./QuantizationParameters-f983cf8d.js";import"./createSymbolSchema-001203d9.js";import"./TiledDisplayObject-e7d105ae.js";import"./labelingInfo-aae625ac.js";import"./LabelClass-c3c309a8.js";import"./labelUtils-b29175f3.js";import"./clusterUtils-50a66940.js";import"./MD5-715f37cd.js";import"./util-8b594274.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./BitmapTileContainer-5447a798.js";import"./Bitmap-a6124485.js";import"./TileContainer-8209da9f.js";import"./scaleUtils-72744379.js";import"./MapView-feaca8e4.js";import"./unitBezier-881ac1eb.js";import"./ColorBackground-5c13202f.js";import"./ClipRect-9f8fe7eb.js";import"./BaseGraphicContainer-4835aeec.js";import"./FeatureContainer-57c36de3.js";import"./floorFilterUtils-080a7cd2.js";import"./sublayerUtils-4fbad2bd.js";import"./popupUtils-e4ebc84a.js";const L=[0,0];let h=class extends P(T(q(Q))){constructor(){super(...arguments),this._fetchQueue=null,this._highlightGraphics=new w,this._highlightView=null,this._popupHighlightHelper=null,this._tileStrategy=null,this.layer=null}get resampling(){return!("resampling"in this.layer)||this.layer.resampling!==!1}get tilemapCache(){return"tilemapCache"in this.layer?this.layer.tilemapCache:null}update(t){var i;this._fetchQueue.pause(),this._fetchQueue.state=t.state,this._tileStrategy.update(t),this._fetchQueue.resume(),(i=this._highlightView)==null||i.processUpdate(t)}attach(){const t="tileServers"in this.layer?this.layer.tileServers:null,i=this.tilemapCache;if(this._tileInfoView=new b(this.layer.tileInfo,this.layer.fullExtent,i==null?void 0:i.effectiveMinLOD,i==null?void 0:i.effectiveMaxLOD),this._fetchQueue=new S({tileInfoView:this._tileInfoView,concurrency:t&&10*t.length||10,process:(e,r)=>this.fetchTile(e,r)}),this._tileStrategy=new C({cachePolicy:"keep",resampling:this.resampling,acquireTile:e=>this.acquireTile(e),releaseTile:e=>this.releaseTile(e),tileInfoView:this._tileInfoView}),k(this,this.layer)){const e=this._highlightView=new H({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new U(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1});this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new F({createFetchPopupFeaturesQueryGeometry:(r,p)=>G(r,p,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:(r,p)=>{e.graphicUpdateHandler({graphic:r,property:p})},layerView:this,updatingHandles:this._updatingHandles})}this.requestUpdate(),this.addAttachHandles(this._updatingHandles.add(()=>this.resampling,()=>{this.doRefresh()})),super.attach()}detach(){var t,i;super.detach(),this._tileStrategy.destroy(),this._fetchQueue.clear(),this.container.removeAllChildren(),(t=this._popupHighlightHelper)==null||t.destroy(),(i=this._highlightView)==null||i.destroy(),this._fetchQueue=this._tileStrategy=this._tileInfoView=this._popupHighlightHelper=null}async fetchPopupFeatures(t,i){return this._popupHighlightHelper?this._popupHighlightHelper.fetchPopupFeatures(t,i):[]}highlight(t){return this._popupHighlightHelper?this._popupHighlightHelper.highlight(t):y()}moveStart(){this.requestUpdate()}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){var i;return I((i=this.layer.tileInfo)==null?void 0:i.spatialReference,t)}async doRefresh(){if(this.attached){if(this.suspended)return this._tileStrategy.clear(),void this.requestUpdate();this._fetchQueue.reset(),this._tileStrategy.refresh(t=>this._updatingHandles.addPromise(this._enqueueTileFetch(t)))}}acquireTile(t){const i=this._bitmapView.createTile(t),e=i.bitmap;return[e.x,e.y]=this._tileInfoView.getTileCoords(L,i.key),e.resolution=this._tileInfoView.getTileResolution(i.key),[e.width,e.height]=this._tileInfoView.tileInfo.size,this._updatingHandles.addPromise(this._enqueueTileFetch(i)),this._bitmapView.addChild(i),this.requestUpdate(),i}releaseTile(t){this._fetchQueue.abort(t.key.id),this._bitmapView.removeChild(t),t.once("detach",()=>t.destroy()),this.requestUpdate()}async fetchTile(t,i={}){const e=this.tilemapCache,{signal:r,resamplingLevel:p=0}=i;if(!e)try{return await this._fetchImage(t,r)}catch(o){if(!m(o)&&!this.resampling)return g(this._tileInfoView.tileInfo.size);if(p<3){const n=this._tileInfoView.getTileParentId(t.id);if(n){const u=new d(n),_=await this.fetchTile(u,{...i,resamplingLevel:p+1});return f(this._tileInfoView,_,u,t)}}throw o}const s=new d(0,0,0,0);let a;try{if(await e.fetchAvailabilityUpsample(t.level,t.row,t.col,s,{signal:r}),s.level!==t.level&&!this.resampling)return g(this._tileInfoView.tileInfo.size);a=await this._fetchImage(s,r)}catch(o){if(m(o))throw o;a=await this._fetchImage(t,r)}return this.resampling?f(this._tileInfoView,a,s,t):a}async _enqueueTileFetch(t){if(!this._fetchQueue.has(t.key.id)){try{const i=await this._fetchQueue.push(t.key);t.bitmap.source=i,t.bitmap.width=this._tileInfoView.tileInfo.size[0],t.bitmap.height=this._tileInfoView.tileInfo.size[1],t.once("attach",()=>this.requestUpdate())}catch(i){m(i)||V.getLogger(this).error(i)}this.requestUpdate()}}async _fetchImage(t,i){return this.layer.fetchImageBitmapTile(t.level,t.row,t.col,{signal:i})}};l([c()],h.prototype,"resampling",null),l([c()],h.prototype,"tilemapCache",null),h=l([v("esri.views.2d.layers.TileLayerView2D")],h);const _e=h;export{_e as default};
