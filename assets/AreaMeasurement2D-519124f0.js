import{a5 as a,a6 as n,a9 as U,eL as R,km as I,kl as Q,cb as $,h3 as x,b9 as A,eI as X,B as W,eH as M,dU as Y,kd as G,dT as Z,dV as F,lo as ee,kN as te,lp as se,dS as V,D as z,di as v,ah as L,C as ie,g9 as H,ko as k,gs as re,eJ as ae,gl as oe}from"./index-b516d057.js";import{e as S,O as ne,n as B,i as le}from"./jsxFactory-92036771.js";import{e as me}from"./defaultUnit-414db021.js";import{g as j,$ as ue,j as ce,d as he,D as pe}from"./unitFormatUtils-67047561.js";import{geodesicDensify as D,planarLength as E,simplify as b,geodesicLength as de,geodesicArea as ve,planarArea as ye}from"./geometryEngine-656a968c.js";import{M as C,v as g,y as O,w as T}from"./geodesicUtils-822c19ca.js";import{l as we}from"./ViewingMode-5d7d590b.js";import{l as fe}from"./Draw-ee21c93a.js";import{l as ge,d as _e,v as be,x as $e}from"./InteractiveToolBase-ddd44c70.js";import{S as Le}from"./GraphicManipulator-bf7f8b04.js";import{n as Me,u as Ae}from"./MeasurementWidgetContent-60198b21.js";import{e as N}from"./globalCss-94006b67.js";import"./uuid-709b6c67.js";import"./getDefaultUnitForView-d1ffbf16.js";import"./Cyclical-4c223a04.js";import"./geometryEngineBase-dfbd3a67.js";import"./hydrated-40effdd0.js";import"./dehydratedPoint-5a1dfed5.js";import"./SnappingVisualizer2D-4547907b.js";import"./enums-f1a6a48a.js";import"./snappingUtils-93e84fbe.js";import"./Query-071039d7.js";import"./FullTextSearch-12e0754c.js";import"./QuantizationParameters-f983cf8d.js";import"./screenUtils-8dc4a7f9.js";import"./signal-51ed66f5.js";import"./elevationInfoUtils-be36d866.js";import"./SnappingContext-90969376.js";import"./PointSnappingHint-671c9f09.js";import"./EditGeometryOperations-c2e73f2d.js";import"./geometry2dUtils-a99dcf3d.js";import"./SnappingOperation-4a4ee09b.js";import"./Scheduler-ff5943a4.js";import"./debugFlags-9a30f077.js";import"./RenderState-1d6218ee.js";import"./surfaceCoordinateSystems-1cfad4a3.js";import"./UpdatingHandles-7949a657.js";import"./dehydratedFeatureComparison-7855b188.js";import"./SketchTooltipOptions-cc43c059.js";import"./SnappingDragPipelineStep-e275580d.js";import"./hydratedFeatures-2365c307.js";import"./mat2d-d4af8487.js";import"./mat2df64-4d1a9198.js";import"./interfaces-1a80c8eb.js";import"./drawUtils-bd7471ac.js";import"./interfaces-0421c5e6.js";import"./defaults-4faa92e6.js";import"./defaultsJSON-59981e75.js";import"./drapedUtils-5cffceb9.js";import"./UnitSelect-52961079.js";const y=1e5;let w=class extends ge{constructor(e){super(e),this._drawActive=!1,this._measurementLayer=new R({internal:!0,listMode:"hide",visible:!1}),this._manipulatorLayer=new R({internal:!0,listMode:"hide",visible:!1}),this._vertices=[],this.geodesicDistanceThreshold=1e5,this.measurement=null,this.measurementLabel=null}initialize(){I("esri/core/t9n/Units").then(t=>{this.messages=t}),this.addHandles(Q(async()=>{this.messages=await I("esri/core/t9n/Units")}));const e=this.view;this._draw=new fe({view:e}),e.map.addMany([this._measurementLayer,this._manipulatorLayer]),e.focus(),this.addHandles([$(()=>[this.unit,this.geodesicDistanceThreshold,this.messages],()=>{this._updateGraphics()},x),$(()=>[this.view.effectiveTheme.accentColor,this.view.effectiveTheme.textColor],()=>{if(!this._vertices.length)return;const t=this._vertices.map(({coord:i})=>i);for(const{handle:i}of this._vertices)i.remove();this._vertices=[],this._measurementLayer.removeAll(),this._manipulatorLayer.removeAll(),this.manipulators.removeAll(),this._updateSketch(t)})])}destroy(){const{map:e}=this.view;this._draw.view=null,this._draw=A(this._draw),e.removeMany([this._measurementLayer,this._manipulatorLayer]),this._measurementLayer.removeAll(),this._manipulatorLayer.removeAll(),this._set("measurement",null),this._set("measurementLabel",null),this._measurementLayer=A(this._measurementLayer),this._manipulatorLayer=A(this._manipulatorLayer),this._resetVertices()}get cursor(){return this._drawActive?"crosshair":null}set editable(e){this._set("editable",e),e||this._draw.reset()}onActivate(){this._drawActive||this._vertices.length!==0||this._startSketch()}onShow(){this._measurementLayer.visible=!0,this._manipulatorLayer.visible=!0}onHide(){this._measurementLayer.visible=!1,this._manipulatorLayer.visible=!1}reset(){this.manipulators.removeAll(),this._resetVertices(),this._measurementLayer.removeAll(),this._manipulatorLayer.removeAll(),this._set("measurement",null),this._set("measurementLabel",null),this._draw.reset(),this._drawActive=!1}_resetVertices(){for(const{handle:e}of this._vertices)e.remove();this._vertices=[]}_startSketch(){this._drawActive=!0;const e=this._draw.create("polyline",{mode:"click"});e.on(["vertex-add","vertex-update","vertex-remove","cursor-update","undo","redo"],t=>this._updateSketch(t.vertices)),e.on("draw-complete",()=>this._stopSketch())}_stopSketch(){if(this._vertices.length<3)return this.reset(),void this._startSketch();this.manipulators.forEach(({manipulator:e})=>{e.interactive=!0}),this._drawActive=!1,this.finishToolCreation()}_updateSketch(e){const t=this.view.spatialReference;if(t&&(!K(t)||X())){for(;this._vertices.length>e.length;){const{handle:i,manipulator:r}=this._vertices.pop();i.remove(),this.manipulators.remove(r)}for(let i=this._vertices.length;i<e.length;i++){const[r,m]=e[i],l=ke(new W({x:r,y:m,spatialReference:t}),this.view,this._manipulatorLayer);this.manipulators.add(l);const u=_e(l,(o,s)=>{s.next(be(this.view)).next($e(o.graphic,we.Local)).next(()=>{const c=o.graphic.geometry;this._vertices[i].coord=[c.x,c.y],this._updateGraphics()})});this._vertices.push({manipulator:l,coord:[r,m],handle:u})}if(this._vertices.length){const i=this._vertices.length-1,r=this._vertices[i],[m,l]=e[i];r.coord[0]===m&&r.coord[1]===l||(r.coord=[m,l],r.manipulator.graphic.geometry=new W({x:m,y:l,spatialReference:t}));const u=this._drawActive?this._vertices[i].manipulator:null;this.manipulators.forEach(({manipulator:o})=>{o.interactive=u==null||o!==u})}this._updateGraphics()}}_updateGraphics(){if(this._vertices.length<2)return void this._measurementLayer.removeAll();const e=Se(this._vertices.map(({coord:d})=>d),this.view.spatialReference,this.geodesicDistanceThreshold);if(!e)return;const{measurement:t,fillGeometry:i,outlineGeometry:r}=e;this._set("measurement",t);const m=t?Oe(this.messages,t,this.unit):null;if(this._set("measurementLabel",m),!i&&!r)return;let l,u,o;const{graphics:s}=this._measurementLayer,c=s.length===3,{effectiveTheme:h}=this.view;c?(l=s.at(0),u=s.at(1),o=s.at(2)):(l=new M({symbol:new Y({color:G(h.accentColor,.3),outline:null})}),u=new M({symbol:new Z({color:h.accentColor,width:2})}),o=new M({symbol:new F({color:h.textColor,font:new ee({size:14,family:"sans-serif"}),haloColor:G(te(h.textColor,se.Low),.5),haloSize:2})}),s.removeAll(),s.addMany([l,u,o])),l.geometry=i,u.geometry=r,o.geometry=i==null?void 0:i.centroid,o.symbol.text=(m==null?void 0:m.area)??""}};function ke(e,t,i){const m={style:"circle",color:G(t.effectiveTheme.accentColor,.5),outline:{type:"simple-line",width:0}},l=new V({...m,size:8}),u=new V({...m,size:1.5*8}),o=new M({geometry:e,symbol:l});return new Le({view:t,layer:i,graphic:o,focusedSymbol:u})}function Se(e,t,i){if(e.length===2){const c=new z({paths:e,spatialReference:t});let h;if(t!=null&&t.isGeographic)if(C(t))h=g(c,y);else{const d=v(c,L.WGS84),_=g(d,y);h=v(_,t)}else if(t!=null&&t.isWebMercator)h=D(c,y,"meters");else if(E(c,"meters")>=i){const d=v(c,L.WGS84),_=g(d,y);h=v(_,t)}else h=c;return{measurement:null,fillGeometry:null,outlineGeometry:h}}e.push(e[0]);const r=new z({paths:[e],spatialReference:t}),m=new ie({rings:[e],spatialReference:t});let l,u,o=null,s=null;if(t!=null&&t.isGeographic)if(C(t)){if(o=g(r,y),s=g(m,y),s=b(s),!s)return null;l=O([r],"meters")[0],u=T([s],"square-meters")[0]}else{const c=L.WGS84,h=v(r,c),d=v(m,c);if(o=g(h,y),s=g(d,y),s=b(s),!s)return null;l=O([h],"meters")[0],u=T([s],"square-meters")[0],o=v(o,t),s=v(s,t)}else if(t!=null&&t.isWebMercator){if(o=D(r,y,"meters"),s=D(m,y,"meters"),s=b(s),!s)return null;l=de(r,"meters"),u=ve(s,"square-meters")}else{const c=E(r,"meters");if(c>=i){const h=L.WGS84,d=v(r,h),_=v(m,h);if(o=g(d,y),s=g(_,y),s=b(s),!s)return null;l=O([d],"meters")[0],u=T([s],"square-meters")[0],o=v(o,t),s=v(s,t)}else{if(o=r,s=b(m),!s)return null;l=c,u=ye(s,"square-meters")}}return{measurement:{geometry:s,area:u,perimeter:l},fillGeometry:s,outlineGeometry:o}}function De(e){return e!=null}function K(e){if(!e)return!1;const{isGeographic:t,isWebMercator:i,isWGS84:r}=e;return t&&!r&&!C(e)||!t&&!i}function Oe(e,t,i){if(!t||!e)return null;const r={area:null,perimeter:null},{area:m,perimeter:l}=t;switch(i){case"metric":r.area=ce(e,m,"square-meters");break;case"imperial":r.area=ue(e,m,"square-meters");break;default:{const o=H(m,"square-meters",i);r.area=j(e,o,i);break}}const u=Te(i);if(u)switch(u){case"metric":r.perimeter=pe(e,l,"meters");break;case"imperial":r.perimeter=he(e,l,"meters");break;default:{const o=H(l,"meters",u);r.perimeter=j(e,o,u);break}}else r.perimeter="";return r}function Te(e){switch(e){case"metric":case"ares":case"hectares":return"metric";case"imperial":case"acres":return"imperial";case"square-inches":return"inches";case"square-feet":return"feet";case"square-yards":return"yards";case"square-miles":return"miles";case"square-us-feet":return"us-feet";case"square-meters":return"meters";case"square-kilometers":return"kilometers";case"square-millimeters":return"millimeters";case"square-centimeters":return"centimeters";case"square-decimeters":return"decimeters";default:return null}}a([n()],w.prototype,"_drawActive",void 0),a([n({readOnly:!0})],w.prototype,"cursor",null),a([n({value:!0})],w.prototype,"editable",null),a([n({type:Number})],w.prototype,"geodesicDistanceThreshold",void 0),a([n({readOnly:!0})],w.prototype,"measurement",void 0),a([n({readOnly:!0})],w.prototype,"measurementLabel",void 0),a([n()],w.prototype,"messages",void 0),a([n()],w.prototype,"unit",void 0),a([n({constructOnly:!0})],w.prototype,"view",void 0),w=a([U("esri.widgets.AreaMeasurement2D.AreaMeasurement2DTool")],w);let f=class extends Me{constructor(e){super(e),this.supportedViewType="2d",this.unsupportedErrorMessage="AreaMeasurement2DViewModel is only supported in 2D views.",this.geodesicDistanceThreshold=1e5}initialize(){this.addHandles([$(()=>{var e;return(e=this.view)==null?void 0:e.spatialReference},()=>this.clear()),$(()=>this.unit,e=>{this.tool!=null&&(this.tool.unit=e)},x),$(()=>this.geodesicDistanceThreshold,e=>{this.tool!=null&&(this.tool.geodesicDistanceThreshold=e)},x)])}get measurement(){return this.tool!=null?this.tool.measurement:null}get measurementLabel(){return this.tool!=null?this.tool.measurementLabel:null}get state(){var e;return this.disabled||this.view==null||!De(this.view.spatialReference)?"disabled":(e=this.tool)!=null&&e.measurement?this.tool.active?"measuring":"measured":"ready"}get unit(){return this._validateUnit(this.defaultUnit)}set unit(e){this._overrideIfSome("unit",this._validateUnit(e))}get unitOptions(){return k}set unitOptions(e){this._overrideIfSome("unitOptions",this._validateUnits(e))}async start(){const e=this.view;e!=null&&(await re(()=>e.ready),K(e.spatialReference)&&await ae()),this.createTool({interactive:!0})}clear(){this.removeTool()}constructTool(){return new w({view:this.view,visible:this.visible,geodesicDistanceThreshold:this.geodesicDistanceThreshold,unit:this.unit})}_validateUnit(e){const{unitOptions:t,defaultUnit:i}=this;return e!=null&&t.includes(e)?e:t.includes(i)?i:t.length>0?t[0]:i}_validateUnits(e){if(e==null)return[];const t=e.filter(i=>k.includes(i));return t.length===0?k.slice():t}};a([n(me)],f.prototype,"defaultUnit",void 0),a([n({type:Number})],f.prototype,"geodesicDistanceThreshold",void 0),a([n({readOnly:!0})],f.prototype,"measurement",null),a([n({readOnly:!0})],f.prototype,"measurementLabel",null),a([n({readOnly:!0})],f.prototype,"state",null),a([n({type:String})],f.prototype,"unit",null),a([n({type:[String]})],f.prototype,"unitOptions",null),f=a([U("esri.widgets.AreaMeasurement2D.AreaMeasurement2DViewModel")],f);const P=f,J="esri-area-measurement-2d",q={base:J,newMeasurementButton:`${J}__clear-button`,widgetIcon:le.measureArea};let p=class extends ne{constructor(e,t){super(e,t),this.iconClass=q.widgetIcon,this.icon=null,this.messages=null,this.messagesUnits=null,this.messagesCommon=null,this.viewModel=new P}get active(){return this.viewModel.active}get label(){var e;return((e=this.messages)==null?void 0:e.widgetLabel)??""}set label(e){this._overrideIfSome("label",e)}get unit(){return this.viewModel.unit}set unit(e){this.viewModel.unit=e}get unitOptions(){return this.viewModel.unitOptions}set unitOptions(e){this.viewModel.unitOptions=e}get view(){return this.viewModel.view}set view(e){this.viewModel.view=e}get visible(){return this.viewModel.visible}set visible(e){this.viewModel.visible=e}render(){const{messages:e,messagesCommon:t,messagesUnits:i,unit:r,unitOptions:m,viewModel:l,visible:u}=this,{active:o,measurementLabel:s,state:c,supported:h}=l;return B("div",{"aria-label":e.widgetLabel,class:this.classes(q.base,N.widget,N.panel),key:this,role:"presentation"},u?B(Ae,{active:o,measurementItems:[{key:"area",title:i==null?void 0:i.measures.area,value:s==null?void 0:s.area},{key:"perimeter",title:e.perimeter,value:s==null?void 0:s.perimeter}],messages:{...e,notApplicable:t.notApplicable},newMeasurementButtonClass:q.newMeasurementButton,state:c,supported:h,unit:r,unitOptions:m,onNewMeasurementClick:()=>{oe(l.start())},onUnitChange:d=>{this.unit=d}}):null)}};a([n({readOnly:!0})],p.prototype,"active",null),a([n()],p.prototype,"iconClass",void 0),a([n()],p.prototype,"icon",void 0),a([n()],p.prototype,"label",null),a([n(),S("esri/widgets/AreaMeasurement2D/t9n/AreaMeasurement2D")],p.prototype,"messages",void 0),a([n(),S("esri/core/t9n/Units")],p.prototype,"messagesUnits",void 0),a([n(),S("esri/t9n/common")],p.prototype,"messagesCommon",void 0),a([n()],p.prototype,"uiStrings",void 0),a([n()],p.prototype,"unit",null),a([n()],p.prototype,"unitOptions",null),a([n()],p.prototype,"view",null),a([n({type:P})],p.prototype,"viewModel",void 0),a([n({type:Boolean})],p.prototype,"visible",null),p=a([U("esri.widgets.AreaMeasurement2D")],p);const St=p;export{St as default};
