import{e4 as l,hg as u,hf as v,v as y,s as g}from"./index-b516d057.js";import{i as S}from"./UtilityNetwork-8891cbdb.js";import"./FeatureLayer-c4c5819f.js";import"./jsonUtils-52514725.js";import"./DictionaryLoader-e327eff9.js";import"./Version-1f969b2a.js";import"./FieldsIndex-e8db657f.js";import"./UnknownTimeZone-a05df022.js";import"./HeatmapColorStop-3fff4333.js";import"./heatmapUtils-7f42325f.js";import"./FeatureLayerBase-0746b503.js";import"./HeightModelInfo-b816d32b.js";import"./featureLayerUtils-16361d1f.js";import"./featureQueryAll-40af0622.js";import"./Query-071039d7.js";import"./FullTextSearch-12e0754c.js";import"./QuantizationParameters-f983cf8d.js";import"./AttachmentQuery-bede5a71.js";import"./RelationshipQuery-2c9e4485.js";import"./LayerFloorInfo-4234db4d.js";import"./serviceCapabilitiesUtils-42d4d20c.js";import"./editsZScale-e45bb69c.js";import"./queryZScale-d7a48772.js";import"./APIKeyMixin-bfb00271.js";import"./EditBusLayer-caf9fed8.js";import"./uuid-709b6c67.js";import"./FeatureEffectLayer-1948d1a0.js";import"./FeatureEffect-c80bb16d.js";import"./FeatureFilter-55dd341e.js";import"./FeatureReductionLayer-443167bc.js";import"./clusterUtils-50a66940.js";import"./MD5-715f37cd.js";import"./FeatureReductionSelection-d84c375a.js";import"./LabelClass-c3c309a8.js";import"./labelUtils-b29175f3.js";import"./defaults-4faa92e6.js";import"./defaultsJSON-59981e75.js";import"./OrderedLayer-32293fe1.js";import"./FeatureTemplate-d1d1c7be.js";import"./FeatureType-f30c4b8b.js";import"./fieldProperties-8c831c84.js";import"./labelingInfo-aae625ac.js";import"./versionUtils-5892620e.js";import"./styleUtils-a3d96bf6.js";import"./TopFeaturesQuery-6d0bf5f5.js";async function dt(p,t,m){var n;const o=l(p),i=t.toJSON();t.validationSet&&(i.validationSet=JSON.stringify(t.validationSet));const a={...i,returnEdits:!0,f:"json"},e=u({...o.query,...a}),r=v(e,{...m,method:"post"}),c=`${o.path}/validateNetworkTopology`,{data:f}=await y(c,r),s=S.fromJSON(f);return s.serviceEdits=((n=s.serviceEdits)==null?void 0:n.map(d=>({layerId:d.id,editedFeatures:d.editedFeatures})))??[],s}async function lt(p,t,m){if(!t.gdbVersion)throw new g("submit-validate-network-topology-job:missing-gdb-version","version is missing");const o=l(p),i=t.toJSON();t.validationSet&&(i.validationSet=JSON.stringify(t.validationSet));const a=v(o.query,{query:u({...i,returnEdits:!0,async:!0,f:"json"}),...m,method:"post"}),e=`${o.path}/validateNetworkTopology`,{data:r}=await y(e,a);return r?r.statusUrl:null}export{lt as submitValidateNetworkTopologyJob,dt as validateNetworkTopology};
