import{aS as Y,bn as j,bj as H,eH as K,hk as W,kr as Z,b9 as w,bm as X,al as z,an as F,X as J,a5 as U,a6 as ee,a9 as te}from"./index-b516d057.js";import{I as u}from"./enums-fb086c25.js";import{i as ie,e as se,l as re,t as ae,u as le}from"./TileInfoViewPOT-2edba27b.js";import{l as q}from"./TileInfoView-ce4d65fb.js";import{e as D}from"./TileKey-4b1303ff.js";import{s as oe,i as ne,t as he,d as de}from"./RenderableTile-52f61d09.js";import{r as ce}from"./signal-51ed66f5.js";import{c as ue,e as _e}from"./config-1337d16e.js";import{i as P,a as _}from"./StyleDefinition-29c49b98.js";import{T as g}from"./enums-b1d611e3.js";import{i as ye}from"./TileContainer-8209da9f.js";import{I as b,O as V,R}from"./enums-bdecffa2.js";import{l as N}from"./StyleRepository-00d8a116.js";import{m as pe}from"./LayerView2D-4970cda5.js";import{y as O}from"./TileStrategy-a729431f.js";import{u as me}from"./LayerView-060b46d4.js";import"./Rect-ea14f53a.js";import"./Texture-bcb6d63f.js";import"./contextUtils-81fda295.js";import"./pbf-2651fe50.js";import"./rasterizingUtils-364392eb.js";import"./floatRGBA-ca990bbb.js";import"./mat3f32-6c416b1c.js";import"./FramebufferObject-123b7c8d.js";import"./VertexArrayObject-d19dab8d.js";import"./TiledDisplayObject-e7d105ae.js";import"./DisplayObject-9a6e3923.js";import"./enums-f1a6a48a.js";import"./WGLContainer-73827040.js";import"./definitions-5366d472.js";import"./VertexElementDescriptor-2925c6af.js";import"./WGLBrushVTLSymbol-00207292.js";import"./vec4f32-0d1b2306.js";import"./number-e491b09e.js";import"./vec2f32-eaf29605.js";import"./GeometryUtils-dd03fc25.js";import"./color-a1c19855.js";import"./ShaderCompiler-77d0dcb6.js";import"./ProgramTemplate-611fcbef.js";import"./Program-96bc94ed.js";import"./MaterialKey-96278cae.js";import"./alignmentUtils-ae955d28.js";import"./heatmapUtils-7f42325f.js";import"./heatmapTextureUtils-6877589a.js";import"./DefaultVertexAttributeLayouts-8962d8eb.js";import"./Container-1d2d049f.js";import"./EffectView-b2b90b02.js";import"./featureConversionUtils-09cf00ff.js";import"./OptimizedFeature-e90b69df.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./OptimizedGeometry-196224d4.js";import"./GeometryUtils-984e8446.js";import"./unitBezier-881ac1eb.js";import"./scaleUtils-72744379.js";import"./MapView-feaca8e4.js";import"./Viewpoint-f83262d0.js";import"./Cyclical-4c223a04.js";import"./CollectionFlattener-193451da.js";import"./DefaultUI-af7068c2.js";import"./jsxFactory-92036771.js";import"./uuid-709b6c67.js";import"./UpdatingHandles-7949a657.js";import"./screenUtils-8dc4a7f9.js";import"./Map-1ad4186f.js";import"./Basemap-8d62c69e.js";import"./loadAll-5e767cfa.js";import"./writeUtils-e226a8aa.js";import"./Ground-ed93a93a.js";import"./editableLayers-856f2cb4.js";import"./basemapUtils-6ec10a55.js";import"./TablesMixin-292d1d89.js";import"./HeightModelInfo-b816d32b.js";import"./IViewEvents-9a85f53d.js";import"./interfaces-0421c5e6.js";import"./heightModelInfoUtils-0dd2b6e4.js";import"./ViewingMode-5d7d590b.js";import"./mat2d-d4af8487.js";import"./mat2df32-fb26a8c9.js";import"./mat2df64-4d1a9198.js";import"./capabilities-9d56a1da.js";import"./themeUtils-7dcf5b71.js";import"./globalCss-94006b67.js";import"./accessibleHandler-e91101b2.js";import"./Compass-b37d7d1d.js";import"./GoTo-4d856ce0.js";import"./NavigationToggle-57c00adb.js";import"./Zoom-73b5f25a.js";import"./resources-d4afed0c.js";import"./TileStore-c31b905a.js";import"./quickselect-bc0541de.js";import"./QuantizationParameters-f983cf8d.js";import"./ColorBackground-5c13202f.js";import"./ClipRect-9f8fe7eb.js";import"./QueueProcessor-4b9d43d3.js";const $=512,fe=1e-6,ge=(s,e)=>s+1/(1<<2*e);class Te{constructor(e,t){this._tiles=new Map,this._tileCache=new Y(40,i=>i.dispose()),this._viewSize=[0,0],this._visibleTiles=new Map,this.acquireTile=e.acquireTile,this.releaseTile=e.releaseTile,this.tileInfoView=e.tileInfoView,this._container=t}destroy(){for(const[e,t]of this._tiles)t.dispose();this._tiles=null,this._tileCache.clear(),this._tileCache=null}update(e){this._updateCacheSize(e);const t=this.tileInfoView,i=t.getTileCoverage(e.state,0,!0,"smallest");if(!i)return!0;const{spans:a,lodInfo:r}=i,{level:l}=r,o=this._tiles,d=new Set,n=new Set;for(const{row:h,colFrom:c,colTo:C}of a)for(let m=c;m<=C;m++){const f=D.getId(l,h,r.normalizeCol(m),r.getWorldForColumn(m)),y=this._getOrAcquireTile(f);d.add(f),y.processed()?this._addToContainer(y):n.add(new D(f))}for(const[h,c]of o)c.isCoverage=d.has(h);for(const h of n)this._findPlaceholdersForMissingTiles(h,d);let S=!1;for(const[h,c]of o)c.neededForCoverage=d.has(h),c.neededForCoverage||c.isHoldingForFade&&t.intersects(i,c.key)&&d.add(h),c.isFading&&(S=!0);for(const[h,c]of this._tiles)d.has(h)||this._releaseTile(h);return q.pool.release(i),!S}clear(){this._tiles.clear(),this._tileCache.clear(),this._visibleTiles.clear()}clearCache(){this._tileCache.clear()}_findPlaceholdersForMissingTiles(e,t){const i=[];for(const[r,l]of this._tiles)this._addPlaceholderChild(i,l,e,t);const a=i.reduce(ge,0);Math.abs(1-a)<fe||this._addPlaceholderParent(e.id,t)}_addPlaceholderChild(e,t,i,a){t.key.level<=i.level||!t.hasData()||be(i,t.key)&&(this._addToContainer(t),a.add(t.id),e.push(t.key.level-i.level))}_addPlaceholderParent(e,t){const i=this._tiles;let a=e;for(;;){if(a=ve(a),!a||t.has(a))return;const r=i.get(a);if(r&&r.hasData())return this._addToContainer(r),void t.add(r.id)}}_getOrAcquireTile(e){let t=this._tiles.get(e);return t||(t=this._tileCache.pop(e),t||(t=this.acquireTile(new D(e))),this._tiles.set(e,t),t)}_releaseTile(e){const t=this._tiles.get(e);this.releaseTile(t),this._removeFromContainer(t),this._tiles.delete(e),t.hasData()?this._tileCache.put(e,t,1):t.dispose()}_addToContainer(e){let t;const i=[],a=this._container;if(a.contains(e))return;const r=this._visibleTiles;for(const[l,o]of r)this._canConnectDirectly(e,o)&&i.push(o),t==null&&this._canConnectDirectly(o,e)&&(t=o);if(t!=null){for(const l of i)t.childrenTiles.delete(l),e.childrenTiles.add(l),l.parentTile=e;t.childrenTiles.add(e),e.parentTile=t}else for(const l of i)e.childrenTiles.add(l),l.parentTile=e;r.set(e.id,e),a.addChild(e)}_removeFromContainer(e){if(this._visibleTiles.delete(e.id),this._container.removeChild(e),e.parentTile!=null){e.parentTile.childrenTiles.delete(e);for(const t of e.childrenTiles)e.parentTile!=null&&e.parentTile.childrenTiles.add(t)}for(const t of e.childrenTiles)t.parentTile=e.parentTile;e.parentTile=null,e.childrenTiles.clear()}_canConnectDirectly(e,t){const i=e.key;let{level:a,row:r,col:l,world:o}=t.key;const d=this._visibleTiles;for(;a>0;){if(a--,r>>=1,l>>=1,i.level===a&&i.row===r&&i.col===l&&i.world===o)return!0;if(d.has(`${a}/${r}/${l}/${o}`))return!1}return!1}_updateCacheSize(e){const t=e.state.size;if(t[0]===this._viewSize[0]&&t[1]===this._viewSize[1])return;const i=Math.ceil(t[0]/$)+1,a=Math.ceil(t[1]/$)+1;this._viewSize[0]=t[0],this._viewSize[1]=t[1],this._tileCache.maxSize=5*i*a}}function ve(s){const[e,t,i,a]=s.split("/"),r=parseInt(e,10);return r===0?null:`${r-1}/${parseInt(t,10)>>1}/${parseInt(i,10)>>1}/${parseInt(a,10)}`}function be(s,e){const t=e.level-s.level;return s.row===e.row>>t&&s.col===e.col>>t&&s.world===e.world}const Ce=.5,B=1e-6;class we{constructor(e,t){this.styleRepository=e,this._tileToHandle=new Map,this._viewState={scale:0,rotation:0,center:[0,0],size:[0,0]},this._declutterViewState={scale:0,rotation:0,center:[0,0],size:[0,0]},this._completed=!1,this._fading=ce(!1),this._symbolRepository=new ie(4096,t,()=>new oe),this._symbolDeclutterer=new se(t,this._symbolRepository,(i,a,r)=>new re(i,a,r,this.styleRepository,this._zoom,this._viewState.rotation),(i,a)=>{i.allSymbolsFadingOut=!0,i.lastOpacityUpdate=a,ne(i,a,!0),i.decluttered=!0,i.requestRender()},(i,a)=>this.styleRepository.getStyleLayerByUID(i.styleLayerUID).z-this.styleRepository.getStyleLayerByUID(a.styleLayerUID).z,i=>{const a=this.styleRepository.getStyleLayerByUID(i);if(this._zoom+B<a.minzoom||this._zoom-B>=a.maxzoom)return!1;const r=a.getLayoutProperty("visibility");return!r||r.getValue()!==P.NONE})}get fading(){return this._fading.value}addTile(e){e.decluttered=!1,this._tileToHandle.set(e,e.on("symbols-changed",()=>{this._symbolRepository.add(e),this.restartDeclutter()})),this._symbolRepository.add(e),this.restartDeclutter()}removeTile(e){const t=this._tileToHandle.get(e);t&&(this._symbolRepository.removeTile(e),this.restartDeclutter(),t.remove(),this._tileToHandle.delete(e))}update(e,t){return this._zoom=e,this._viewState={scale:t.scale,rotation:t.rotation,center:[t.center[0],t.center[1]],size:[t.size[0],t.size[1]]},this._continueDeclutter(),this._completed}restartDeclutter(){this._completed=!1,this._symbolDeclutterer.restart(),this._notifyUnstable()}clear(){this._completed=!1,this._symbolRepository=null,this._symbolDeclutterer.restart(),this._tileToHandle.forEach(e=>e.remove()),this._tileToHandle.clear()}get stale(){return this._zoom!==this._declutterZoom||this._viewState.size[0]!==this._declutterViewState.size[0]||this._viewState.size[1]!==this._declutterViewState.size[1]||this._viewState.scale!==this._declutterViewState.scale||this._viewState.rotation!==this._declutterViewState.rotation}deleteStyleLayers(e){this._symbolRepository.deleteStyleLayers(e)}_continueDeclutter(){this._completed&&!this.stale||(this._symbolDeclutterer.running||(this._declutterZoom=this._zoom,this._declutterViewState.center[0]=this._viewState.center[0],this._declutterViewState.center[1]=this._viewState.center[1],this._declutterViewState.rotation=this._viewState.rotation,this._declutterViewState.scale=this._viewState.scale,this._declutterViewState.size[0]=this._viewState.size[0],this._declutterViewState.size[1]=this._viewState.size[1],this._symbolDeclutterer.restart()),this._symbolDeclutterer.setScreenSize(this._viewState.size[0],this._viewState.size[1]),this._completed=this._symbolDeclutterer.continue(ue),this._completed&&this._scheduleNotifyStable())}_scheduleNotifyStable(){this._stableNotificationHandle!=null&&clearTimeout(this._stableNotificationHandle),this._stableNotificationHandle=setTimeout(()=>{this._stableNotificationHandle=null,this._fading.value=!1},(1+Ce)*_e)}_notifyUnstable(){this._stableNotificationHandle!=null&&(clearTimeout(this._stableNotificationHandle),this._stableNotificationHandle=null),this._fading.value=!0}}const I=1e-6;function Q(s,e){if(s){const t=s.getLayoutProperty("visibility");if(!t||t.getValue()!==P.NONE&&(s.minzoom===void 0||s.minzoom<e+I)&&(s.maxzoom===void 0||s.maxzoom>=e-I))return!0}return!1}class Se extends ye{constructor(e){super(e),this._backgroundTiles=[],this._pointToCallbacks=new Map}destroy(){var e,t;this.removeAllChildren(),(e=this._spriteMosaic)==null||e.dispose(),this._spriteMosaic=null,(t=this._glyphMosaic)==null||t.dispose(),this._glyphMosaic=null,this._symbolFader!=null&&(this._symbolFader.clear(),this._symbolFader=null),this._styleRepository=null,this._backgroundTiles=[],this._pointToCallbacks.clear()}get fading(){var e;return((e=this._symbolFader)==null?void 0:e.fading)??!1}setStyleResources(e,t,i){this._spriteMosaic=e,this._glyphMosaic=t,this._styleRepository=i,this._symbolFader==null&&(this._symbolFader=new we(this._styleRepository,this.children)),this._symbolFader.styleRepository=i}setSpriteMosaic(e){var t;(t=this._spriteMosaic)==null||t.dispose(),this._spriteMosaic=e}deleteStyleLayers(e){this._symbolFader!=null&&this._symbolFader.deleteStyleLayers(e)}async hitTest(e){const t=j();return this._pointToCallbacks.set(e,t),this.requestRender(),t.promise}createRenderParams(e){return{...super.createRenderParams(e),renderPass:null,styleLayer:null,styleLayerUID:-1,glyphMosaic:this._glyphMosaic,spriteMosaic:this._spriteMosaic,hasClipping:!!this._clippingInfos}}doRender(e){!this.visible||e.drawPhase!==g.MAP&&e.drawPhase!==g.DEBUG||this._spriteMosaic===void 0||super.doRender(e)}addChild(e){return super.addChild(e),this._symbolFader!=null?this._symbolFader.addTile(e):e.decluttered=!0,this.requestRender(),e}removeChild(e){return this._symbolFader!=null&&this._symbolFader.removeTile(e),this.requestRender(),super.removeChild(e)}renderChildren(e){const{drawPhase:t}=e;if(t!==g.DEBUG){if(this._doRender(e),this._pointToCallbacks.size>0){e.drawPhase=g.HITTEST;const i=e.painter.effects.hittestVTL;i.bind(e),this._doRender(e),i.draw(e,this._pointToCallbacks),i.unbind(e),e.drawPhase=t}}else super.renderChildren(e)}removeAllChildren(){for(let e=0;e<this.children.length;e++){const t=this.children[e];this._symbolFader!=null&&this._symbolFader.removeTile(t),t.dispose()}super.removeAllChildren()}getStencilTarget(){return this.children.filter(e=>e.neededForCoverage&&e.hasData())}restartDeclutter(){this._symbolFader!=null&&this._symbolFader.restartDeclutter()}_doRender(e){const{context:t}=e,i=this._styleRepository;if(!i)return;const a=i.layers;let r=!0;e.drawPhase===g.HITTEST&&(r=!1),i.backgroundBucketIds.length>0&&(e.renderPass="background",this._renderBackgroundLayers(e,i.backgroundBucketIds)),super.renderChildren(e),e.drawPhase===g.MAP&&this._fade(e.displayLevel,e.state);const l=this.children.filter(o=>o.visible&&o.hasData());if(!l||l.length===0)return t.bindVAO(),t.setStencilTestEnabled(!0),void t.setBlendingEnabled(!0);for(const o of l)o.triangleCount=0;t.setStencilWriteMask(0),t.setColorMask(!0,!0,!0,!0),t.setStencilOp(b.KEEP,b.KEEP,b.REPLACE),t.setStencilTestEnabled(!0),t.setBlendingEnabled(!1),t.setDepthTestEnabled(!0),t.setDepthWriteEnabled(!0),t.setDepthFunction(V.LEQUAL),t.setClearDepth(1),t.clear(t.gl.DEPTH_BUFFER_BIT),e.renderPass="opaque";for(let o=a.length-1;o>=0;o--)this._renderStyleLayer(a[o],e,l);t.setDepthWriteEnabled(!1),t.setBlendingEnabled(r),t.setBlendFunctionSeparate(R.ONE,R.ONE_MINUS_SRC_ALPHA,R.ONE,R.ONE_MINUS_SRC_ALPHA),e.renderPass="translucent";for(let o=0;o<a.length;o++)this._renderStyleLayer(a[o],e,l);t.bindVAO(),t.setStencilTestEnabled(!0),t.setBlendingEnabled(!0)}_fade(e,t){this._symbolFader!=null&&(this._symbolFader.update(e,t)||this.requestRender())}_renderStyleLayer(e,t,i){const{painter:a,renderPass:r}=t;if(e===void 0)return;const l=e.getLayoutProperty("visibility");if(l&&l.getValue()===P.NONE)return;let o;switch(e.type){case _.BACKGROUND:return;case _.FILL:if(r!=="opaque"&&t.renderPass!=="translucent")return;o="vtlFill";break;case _.LINE:if(r!=="translucent")return;o="vtlLine";break;case _.CIRCLE:if(r!=="translucent")return;o="vtlCircle";break;case _.SYMBOL:if(r!=="translucent")return;o="vtlSymbol"}if(i=e.type===_.SYMBOL?i.filter(n=>n.decluttered):i.filter(n=>n.neededForCoverage),o!=="vtlSymbol"){const n=t.displayLevel;if(i.length===0||e.minzoom!==void 0&&e.minzoom>=n+I||e.maxzoom!==void 0&&e.maxzoom<n-I)return}const d=e.uid;t.styleLayerUID=d,t.styleLayer=e;for(const n of i)if(n.layerData.has(d)){a.renderObjects(t,i,o);break}}_renderBackgroundLayers(e,t){const{context:i,displayLevel:a,painter:r,state:l}=e,o=this._styleRepository;let d=!1;for(const p of t)if(o.getLayerById(p).type===_.BACKGROUND&&Q(o.getLayerById(p),a)){d=!0;break}if(!d)return;const n=this._tileInfoView.getTileCoverage(e.state,0,!0,"smallest"),{spans:S,lodInfo:h}=n,{level:c}=h,C=H(),m=[];if(this._renderPasses){const p=this._renderPasses[0];this._clippingInfos!=null&&(p.brushes[0].prepareState(e),p.brushes[0].drawMany(e,this._clippingInfos))}const f=this._backgroundTiles;let y,E=0;for(const{row:p,colFrom:T,colTo:x}of S)for(let v=T;v<=x;v++){if(E<f.length)y=f[E],y.key.set(c,p,h.normalizeCol(v),h.getWorldForColumn(v)),this._tileInfoView.getTileBounds(C,y.key,!1),y.x=C[0],y.y=C[3],y.resolution=this._tileInfoView.getTileResolution(c);else{const k=new D(c,p,h.normalizeCol(v),h.getWorldForColumn(v)),M=this._tileInfoView.getTileBounds(H(),k),G=this._tileInfoView.getTileResolution(c);y=new he(k,G,M[0],M[3],512,512,4096,4096),f.push(y)}y.setTransform(l),m.push(y),E++}i.setStencilWriteMask(0),i.setColorMask(!0,!0,!0,!0),i.setStencilOp(b.KEEP,b.KEEP,b.REPLACE),i.setStencilFunction(V.EQUAL,0,255);let A=!0;e.drawPhase===g.HITTEST&&(A=!1),i.setStencilTestEnabled(A);for(const p of t){const T=o.getLayerById(p);T.type===_.BACKGROUND&&Q(T,a)&&(e.styleLayerUID=T.uid,e.styleLayer=T,r.renderObjects(e,m,"vtlBackground"))}q.pool.release(n)}}let L=class extends pe(me){constructor(){super(...arguments),this._styleChanges=[],this._fetchQueue=null,this._parseQueue=null,this._tileHandlerPromise=null,this._isTileHandlerReady=!1}get fading(){var s;return((s=this._vectorTileContainer)==null?void 0:s.fading)??!1}async hitTest(s,e){if(!this._tileHandlerPromise)return null;await this._tileHandlerPromise;const t=await this._vectorTileContainer.hitTest(e);if(!t||t.length===0)return null;const i=t[0]-1,a=this._styleRepository,r=a.getStyleLayerByUID(i);if(!r)return null;const l=a.getStyleLayerIndex(r.id);return[{type:"graphic",mapPoint:s,layer:this.layer,graphic:new K({attributes:{layerId:l,layerName:r.id,layerUID:i},layer:this.layer,sourceLayer:this.layer})}]}update(s){if(this._tileHandlerPromise&&this._isTileHandlerReady)return s.pixelRatio!==this._tileHandler.devicePixelRatio?(this._start(),void(this._tileHandler.devicePixelRatio=s.pixelRatio)):void(this._styleChanges.length>0?this._tileHandlerPromise=this._applyStyleChanges():(this._fetchQueue.pause(),this._parseQueue.pause(),this._fetchQueue.state=s.state,this._parseQueue.state=s.state,this._tileManager.update(s)||this.requestUpdate(),this._parseQueue.resume(),this._fetchQueue.resume()))}attach(){const{style:s}=this.layer.currentStyleInfo;this._styleRepository=new N(s),this._tileInfoView=new ae(this.layer.tileInfo,this.layer.fullExtent),this._vectorTileContainer=new Se(this._tileInfoView),this._tileHandler=new le(this.layer,this._styleRepository,window.devicePixelRatio||1),this.container.addChild(this._vectorTileContainer),this._start(),this.addAttachHandles([this.layer.on("paint-change",e=>{var t,i;if(e.isDataDriven)this._styleChanges.push({type:u.PAINTER_CHANGED,data:e}),this.requestUpdate();else{const a=this._styleRepository,r=a.getLayerById(e.layer);if(!r)return;const l=r.type===_.SYMBOL;a.setPaintProperties(e.layer,e.paint),l&&((t=this._vectorTileContainer)==null||t.restartDeclutter()),(i=this._vectorTileContainer)==null||i.requestRender()}}),this.layer.on("layout-change",e=>{var r,l;const t=this._styleRepository,i=t.getLayerById(e.layer);if(!i)return;const a=W(i.layout,e.layout);if(a!=null){if(Z(a,"visibility")&&Re(a)===1)return t.setLayoutProperties(e.layer,e.layout),i.type===_.SYMBOL&&((r=this._vectorTileContainer)==null||r.restartDeclutter()),void((l=this._vectorTileContainer)==null?void 0:l.requestRender());this._styleChanges.push({type:u.LAYOUT_CHANGED,data:e}),this.requestUpdate()}}),this.layer.on("style-layer-visibility-change",e=>{var a,r;const t=this._styleRepository,i=t.getLayerById(e.layer);i&&(t.setStyleLayerVisibility(e.layer,e.visibility),i.type===_.SYMBOL&&((a=this._vectorTileContainer)==null||a.restartDeclutter()),(r=this._vectorTileContainer)==null||r.requestRender())}),this.layer.on("style-layer-change",e=>{this._styleChanges.push({type:u.LAYER_CHANGED,data:e}),this.requestUpdate()}),this.layer.on("delete-style-layer",e=>{this._styleChanges.push({type:u.LAYER_REMOVED,data:e}),this.requestUpdate()}),this.layer.on("load-style",()=>this._loadStyle()),this.layer.on("spriteSource-change",e=>{this._styleChanges.push({type:u.SPRITES_CHANGED,data:e});const t=this._styleRepository.layers;for(const i of t)switch(i.type){case _.SYMBOL:i.getLayoutProperty("icon-image")&&this._styleChanges.push({type:u.LAYOUT_CHANGED,data:{layer:i.id,layout:i.layout}});break;case _.LINE:i.getPaintProperty("line-pattern")&&this._styleChanges.push({type:u.PAINTER_CHANGED,data:{layer:i.id,paint:i.paint,isDataDriven:i.isPainterDataDriven()}});break;case _.FILL:i.getLayoutProperty("fill-pattern")&&this._styleChanges.push({type:u.PAINTER_CHANGED,data:{layer:i.id,paint:i.paint,isDataDriven:i.isPainterDataDriven()}})}this.requestUpdate()})])}detach(){this._stop(),this.container.removeAllChildren(),this._vectorTileContainer=w(this._vectorTileContainer),this._tileHandler=w(this._tileHandler)}moveStart(){this.requestUpdate()}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}supportsSpatialReference(s){var e;return X((e=this.layer.tileInfo)==null?void 0:e.spatialReference,s)}canResume(){let s=super.canResume();const{currentStyleInfo:e}=this.layer;if(s&&(e!=null&&e.layerDefinition)){const t=this.view.scale,{minScale:i,maxScale:a}=e.layerDefinition;e!=null&&e.layerDefinition&&(i&&i<t&&(s=!1),a&&a>t&&(s=!1))}return s}isUpdating(){return this.fading}acquireTile(s){const e=this._createVectorTile(s);return this._updatingHandles.addPromise(this._fetchQueue.push(e.key).then(t=>this._parseQueue.push({key:e.key,data:t})).then(t=>{e.once("attach",()=>this.requestUpdate()),e.setData(t),this.requestUpdate()}).catch(t=>{z(t)||F.getLogger(this).error(t)})),e}releaseTile(s){const e=s.key.id;this._fetchQueue.abort(e),this._parseQueue.abort(e),this.requestUpdate()}_start(){if(this._stop(),this._tileManager=new Te({acquireTile:t=>this.acquireTile(t),releaseTile:t=>this.releaseTile(t),tileInfoView:this._tileInfoView},this._vectorTileContainer),!this.layer.currentStyleInfo)return;const s=new AbortController,e=this._tileHandler.start({signal:s.signal}).then(()=>{this._fetchQueue=new O({tileInfoView:this._tileInfoView,process:(t,i)=>this._getTileData(t,i),concurrency:15}),this._parseQueue=new O({tileInfoView:this._tileInfoView,process:(t,i)=>this._parseTileData(t,i),concurrency:8}),this.requestUpdate(),this._isTileHandlerReady=!0});this._tileHandler.spriteMosaic.then(t=>{this._vectorTileContainer.setStyleResources(t,this._tileHandler.glyphMosaic,this._styleRepository),this.requestUpdate()}),this._tileHandlerAbortController=s,this._tileHandlerPromise=e}_stop(){if(!this._tileHandlerAbortController||!this._vectorTileContainer)return;const s=this._tileHandlerAbortController;s&&s.abort(),this._tileHandlerPromise=null,this._isTileHandlerReady=!1,this._fetchQueue=w(this._fetchQueue),this._parseQueue=w(this._parseQueue),this._tileManager=w(this._tileManager),this._vectorTileContainer.removeAllChildren()}async _getTileData(s,e){return this._tileHandler.fetchTileData(s,e)}async _parseTileData(s,e){return this._tileHandler.parseTileData(s,e)}async _applyStyleChanges(){this._isTileHandlerReady=!1,this._fetchQueue.pause(),this._parseQueue.pause(),this._fetchQueue.clear(),this._parseQueue.clear(),this._tileManager.clearCache();const s=this._styleChanges;try{await this._tileHandler.updateStyle(s)}catch(r){F.getLogger(this).error("error applying vector-tiles style update",r.message),this._fetchQueue.resume(),this._parseQueue.resume(),this._isTileHandlerReady=!0}const e=this._styleRepository,t=new Set;s.forEach(r=>{if(r.type!==u.LAYER_REMOVED)return;const l=r.data,o=e.getLayerById(l.layer);o&&t.add(o.uid)});const i=new Set;s.forEach(r=>{let l;switch(r.type){case u.PAINTER_CHANGED:e.setPaintProperties(r.data.layer,r.data.paint),l=r.data.layer;break;case u.LAYOUT_CHANGED:e.setLayoutProperties(r.data.layer,r.data.layout),l=r.data.layer;break;case u.LAYER_REMOVED:return void e.deleteStyleLayer(r.data.layer);case u.LAYER_CHANGED:e.setStyleLayer(r.data.layer,r.data.index),l=r.data.layer.id;break;case u.SPRITES_CHANGED:this._vectorTileContainer.setSpriteMosaic(this._tileHandler.setSpriteSource(r.data.spriteSource))}if(l){const o=e.getLayerById(l);o&&i.add(o.uid)}});const a=this._vectorTileContainer.children;if(t.size>0){const r=Array.from(t);this._vectorTileContainer.deleteStyleLayers(r);for(const l of a)l.deleteLayerData(r)}if(this._fetchQueue.resume(),this._parseQueue.resume(),i.size>0){const r=Array.from(i),l=[];for(const o of a){const d=this._updatingHandles.addPromise(this._fetchQueue.push(o.key).then(n=>this._parseQueue.push({key:o.key,data:n,styleLayerUIDs:r})).then(n=>o.setData(n)));l.push(d)}await Promise.all(l)}this._styleChanges=[],this._isTileHandlerReady=!0,this.requestUpdate()}async _loadStyle(){const{style:s}=this.layer.currentStyleInfo,e=J(s);this._isTileHandlerReady=!1,this._fetchQueue.pause(),this._parseQueue.pause(),this._fetchQueue.clear(),this._parseQueue.clear(),this._styleRepository=new N(e),this._vectorTileContainer.destroy(),this._tileManager.clear(),this._tileHandlerAbortController.abort(),this._tileHandlerAbortController=new AbortController;const{signal:t}=this._tileHandlerAbortController;try{this._tileHandlerPromise=this._tileHandler.setStyle(this._styleRepository,e),await this._tileHandlerPromise}catch(a){if(!z(a))throw a}if(t.aborted)return this._fetchQueue.resume(),this._parseQueue.resume(),this._isTileHandlerReady=!0,void this.requestUpdate();const i=await this._tileHandler.spriteMosaic;this._vectorTileContainer.setStyleResources(i,this._tileHandler.glyphMosaic,this._styleRepository),this._fetchQueue.resume(),this._parseQueue.resume(),this._isTileHandlerReady=!0,this.requestUpdate()}_createVectorTile(s){const e=this._tileInfoView.getTileBounds(H(),s),t=this._tileInfoView.getTileResolution(s.level);return new de(s,t,e[0],e[3],512,512,this._styleRepository)}};function Re(s){if(s==null)return 0;switch(s.type){case"partial":return Object.keys(s.diff).length;case"complete":return Math.max(Object.keys(s.oldValue).length,Object.keys(s.newValue).length);case"collection":return Object.keys(s.added).length+Object.keys(s.changed).length+Object.keys(s.removed).length}}U([ee()],L.prototype,"_isTileHandlerReady",void 0),L=U([te("esri.views.2d.layers.VectorTileLayerView2D")],L);const ui=L;export{ui as default};
