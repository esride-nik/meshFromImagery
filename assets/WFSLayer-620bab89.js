import{a5 as i,a6 as r,a9 as j,U as $,dm as P,e3 as C,M as x,s as E,cy as c,du as N,am as U,k as _,aH as J,ew as k,dk as W,ev as X,d_ as D,dl as Y,a0 as L,a1 as Q,a2 as V,ah as T,jD as O,jE as G,cz as R,dO as M,I as Z,j8 as z,ey as A,jF as B,ad as H,jG as K,e0 as ee,dE as S,jX as te,ja as ie,eo as re,jI as oe,a8 as se,aa as ae}from"./index-b516d057.js";import{m as ne,u as pe}from"./jsonUtils-52514725.js";import{l as le,o as de}from"./clientSideDefaults-dfab1319.js";import{v as ue,W as ye,q as me,V as ce,S as fe}from"./wfsUtils-b983817c.js";import{p as he}from"./FeatureEffectLayer-1948d1a0.js";import{c as ge}from"./FeatureReductionLayer-443167bc.js";import{c as we}from"./OrderedLayer-32293fe1.js";import{s as ve}from"./fieldProperties-8c831c84.js";import{C as Fe}from"./LabelClass-c3c309a8.js";import{i as be}from"./labelingInfo-aae625ac.js";import{b as y}from"./Query-071039d7.js";import"./DictionaryLoader-e327eff9.js";import"./Version-1f969b2a.js";import"./FieldsIndex-e8db657f.js";import"./UnknownTimeZone-a05df022.js";import"./HeatmapColorStop-3fff4333.js";import"./heatmapUtils-7f42325f.js";import"./QueryEngineCapabilities-85c4f1d0.js";import"./defaultsJSON-59981e75.js";import"./geojson-573ee405.js";import"./date-294ce3fb.js";import"./OptimizedFeature-e90b69df.js";import"./OptimizedGeometry-196224d4.js";import"./xmlUtils-444cb4c0.js";import"./FeatureEffect-c80bb16d.js";import"./FeatureFilter-55dd341e.js";import"./clusterUtils-50a66940.js";import"./MD5-715f37cd.js";import"./FeatureReductionSelection-d84c375a.js";import"./featureLayerUtils-16361d1f.js";import"./featureQueryAll-40af0622.js";import"./AttachmentQuery-bede5a71.js";import"./RelationshipQuery-2c9e4485.js";import"./FullTextSearch-12e0754c.js";import"./QuantizationParameters-f983cf8d.js";import"./labelUtils-b29175f3.js";import"./defaults-4faa92e6.js";let d=class extends ${constructor(){super(...arguments),this._connection=null,this.capabilities=le(!1,!1),this.type="wfs",this.refresh=P(async e=>{await this.load();const{extent:t}=await this._connection.invoke("refresh",e);return t&&(this.sourceJSON.extent=t),{dataChanged:!0,updates:{extent:this.sourceJSON.extent}}})}load(e){const t=e!=null?e.signal:null;return this.addResolvingPromise(this._startWorker({signal:t})),Promise.resolve(this)}destroy(){var e;(e=this._connection)==null||e.close(),this._connection=null}async openPorts(){return await this.load(),this._connection.openPorts()}async queryFeatures(e,t={}){await this.load(t);const s=await this._connection.invoke("queryFeatures",e?e.toJSON():null,t);return C.fromJSON(s)}async queryFeaturesJSON(e,t={}){return await this.load(t),this._connection.invoke("queryFeatures",e?e.toJSON():null,t)}async queryFeatureCount(e,t={}){return await this.load(t),this._connection.invoke("queryFeatureCount",e?e.toJSON():null,t)}async queryObjectIds(e,t={}){return await this.load(t),this._connection.invoke("queryObjectIds",e?e.toJSON():null,t)}async queryExtent(e,t={}){await this.load(t);const s=await this._connection.invoke("queryExtent",e?e.toJSON():null,t);return{count:s.count,extent:x.fromJSON(s.extent)}}async querySnapping(e,t={}){return await this.load(t),this._connection.invoke("querySnapping",e,t)}async _createLoadOptions(e){var F,b;const{url:t,customParameters:s,name:n,namespaceUri:p,fields:a,geometryType:u,swapXY:f}=this.layer,m=this.layer.originOf("spatialReference")==="defaults"?void 0:this.layer.spatialReference;if(!t)throw new E("wfs-layer:missing-url","WFSLayer must be created with a url");this.wfsCapabilities||(this.wfsCapabilities=await ue(t,{customParameters:s,...e}));const h=["fields","geometryType","name","namespaceUri","swapXY"].some(w=>this.layer[w]==null),l=h?await ye(this.wfsCapabilities,n,p,{spatialReference:m,customParameters:s,signal:e==null?void 0:e.signal}):{...me(a??[]),geometryType:u,name:n,namespaceUri:p,spatialReference:m,swapXY:f},g=ce(this.wfsCapabilities.readFeatureTypes(),l.name,l.namespaceUri),q=c.toJSON(l.geometryType);return{customParameters:s,featureType:g,fields:((F=l.fields)==null?void 0:F.map(w=>w.toJSON()))??[],geometryField:l.geometryField,geometryType:q,getFeatureUrl:this.wfsCapabilities.operations.GetFeature.url,getFeatureOutputFormat:this.wfsCapabilities.operations.GetFeature.outputFormat,objectIdField:l.objectIdField,spatialReference:(b=l.spatialReference)==null?void 0:b.toJSON(),swapXY:!!l.swapXY}}async _startWorker(e){const[t,s]=await N([this._createLoadOptions(e),U("WFSSourceWorker",{...e,strategy:_("feature-layers-workers")?"dedicated":"local",registryTarget:this})]),n=t.error||s.error||null,p=s.value||null;if(n)throw p&&p.close(),n;const a=t.value;this._connection=s.value;const u=(await this._connection.invoke("load",a,e)).extent;this.sourceJSON={dateFieldsTimeReference:{timeZoneIANA:J},extent:u,fields:a.fields,geometryType:a.geometryType,objectIdField:a.objectIdField,geometryField:a.geometryField,drawingInfo:de(a.geometryType),name:a.featureType.title,wfsInfo:{name:a.featureType.name,featureUrl:a.getFeatureUrl,maxFeatures:3e3,swapXY:a.swapXY,supportedSpatialReferences:a.featureType.supportedSpatialReferences,version:"2.0.0",wfsNamespace:a.featureType.namespaceUri}}}};i([r()],d.prototype,"capabilities",void 0),i([r({constructOnly:!0})],d.prototype,"layer",void 0),i([r()],d.prototype,"sourceJSON",void 0),i([r()],d.prototype,"type",void 0),i([r()],d.prototype,"wfsCapabilities",void 0),d=i([j("esri.layers.graphics.sources.WFSSource")],d);var v;const I=ve();let o=v=class extends we(k(ge(he(W(X(D(Y(L(Q(V(ae))))))))))){static fromWFSLayerInfo(e){const{customParameters:t,fields:s,geometryField:n,geometryType:p,name:a,namespaceUri:u,objectIdField:f,spatialReference:m,swapXY:h,url:l,wfsCapabilities:g}=e;return new v({customParameters:t,fields:s,geometryField:n,geometryType:p,name:a,namespaceUri:u,objectIdField:f,spatialReference:m,swapXY:h,url:l,wfsCapabilities:g})}constructor(e){super(e),this.copyright=null,this.customParameters=null,this.dateFieldsTimeZone=null,this.definitionExpression=null,this.displayField=null,this.elevationInfo=null,this.featureUrl=void 0,this.fields=null,this.fieldsIndex=null,this.fullExtent=null,this.geometryType=null,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.objectIdField=null,this.operationalLayerType="WFS",this.maxFeatures=3e3,this.mode=0,this.name=null,this.namespaceUri=null,this.outFields=null,this.popupEnabled=!0,this.popupTemplate=null,this.screenSizePerspectiveEnabled=!0,this.source=new d({layer:this}),this.spatialReference=T.WGS84,this.spatialReferences=[4326],this.swapXY=void 0,this.title="WFS",this.type="wfs",this.url=null,this.version=void 0}destroy(){var e;(e=this.source)==null||e.destroy()}load(e){return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["WFS"]},e).then(()=>this.source.load(e)).then(()=>{this.read(this.source.sourceJSON,{origin:"service",url:this.parsedUrl}),this.revert(["objectIdField","fields","timeInfo","spatialReference","name","namespaceUri"],"service"),O(this.renderer,this.fieldsIndex),G(this.timeInfo,this.fieldsIndex)})),Promise.resolve(this)}get capabilities(){var e;return(e=this.source)==null?void 0:e.capabilities}get createQueryVersion(){return this.commitProperty("definitionExpression"),this.commitProperty("timeExtent"),this.commitProperty("timeOffset"),this.commitProperty("geometryType"),this.commitProperty("capabilities"),(this._get("createQueryVersion")||0)+1}get defaultPopupTemplate(){return this.createPopupTemplate()}writeFields(e,t,s){const n=e.filter(p=>p.name!==fe);this.geometryField&&n.unshift(new R({name:this.geometryField,alias:this.geometryField,type:"geometry"})),M(s,n.map(p=>p.toJSON()),t)}get parsedUrl(){return Z(this.url)}set renderer(e){O(e,this.fieldsIndex),this._set("renderer",e)}get wfsCapabilities(){var e;return(e=this.source)==null?void 0:e.wfsCapabilities}set wfsCapabilities(e){this.source&&(this.source.wfsCapabilities=e)}createPopupTemplate(e){return z(this,e)}createQuery(){const e=new y;e.returnGeometry=!0,e.outFields=["*"],e.where=this.definitionExpression||"1=1";const{timeOffset:t,timeExtent:s}=this;return e.timeExtent=t!=null&&s!=null?s.offset(-t.value,t.unit):s||null,e}getFieldDomain(e,t){var s;return(s=this.getField(e))==null?void 0:s.domain}getField(e){var t;return(t=this.fieldsIndex)==null?void 0:t.get(e)}queryFeatures(e,t){return this.load().then(()=>this.source.queryFeatures(y.from(e)||this.createQuery(),t)).then(s=>{if(s!=null&&s.features)for(const n of s.features)n.layer=n.sourceLayer=this;return s})}queryObjectIds(e,t){return this.load().then(()=>this.source.queryObjectIds(y.from(e)||this.createQuery(),t))}queryFeatureCount(e,t){return this.load().then(()=>this.source.queryFeatureCount(y.from(e)||this.createQuery(),t))}queryExtent(e,t){return this.load().then(()=>this.source.queryExtent(y.from(e)||this.createQuery(),t))}async hasDataChanged(){try{const{dataChanged:e,updates:t}=await this.source.refresh(this.customParameters);return t!=null&&this.read(t,{origin:"service",url:this.parsedUrl,ignoreDefaults:!0}),e}catch{}return!1}};i([r({readOnly:!0})],o.prototype,"capabilities",null),i([r({type:String})],o.prototype,"copyright",void 0),i([r({readOnly:!0})],o.prototype,"createQueryVersion",null),i([r({json:{name:"wfsInfo.customParameters",write:{overridePolicy:e=>({enabled:!!(e&&Object.keys(e).length>0),ignoreOrigin:!0})}}})],o.prototype,"customParameters",void 0),i([r(A("dateFieldsTimeReference"))],o.prototype,"dateFieldsTimeZone",void 0),i([r({readOnly:!0})],o.prototype,"defaultPopupTemplate",null),i([r({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],o.prototype,"definitionExpression",void 0),i([r({type:String})],o.prototype,"displayField",void 0),i([r(B)],o.prototype,"elevationInfo",void 0),i([r({type:String,readOnly:!0,json:{name:"wfsInfo.featureUrl",write:{ignoreOrigin:!0,isRequired:!0}}})],o.prototype,"featureUrl",void 0),i([r({type:[R],json:{name:"layerDefinition.fields",write:{ignoreOrigin:!0,isRequired:!0},origins:{service:{name:"fields"}}}})],o.prototype,"fields",void 0),i([H("fields")],o.prototype,"writeFields",null),i([r(I.fieldsIndex)],o.prototype,"fieldsIndex",void 0),i([r({type:x,json:{name:"extent"}})],o.prototype,"fullExtent",void 0),i([r()],o.prototype,"geometryField",void 0),i([r({type:String,json:{read:{source:"layerDefinition.geometryType",reader:c.read},write:{target:"layerDefinition.geometryType",writer:c.write,ignoreOrigin:!0},origins:{service:{read:c.read}}}})],o.prototype,"geometryType",void 0),i([r({type:String})],o.prototype,"id",void 0),i([r(K)],o.prototype,"labelsVisible",void 0),i([r({type:[Fe],json:{name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:be},write:!0}})],o.prototype,"labelingInfo",void 0),i([r(ee)],o.prototype,"legendEnabled",void 0),i([r({type:["show","hide"]})],o.prototype,"listMode",void 0),i([r({type:String})],o.prototype,"objectIdField",void 0),i([r({type:["WFS"]})],o.prototype,"operationalLayerType",void 0),i([r({type:S,json:{name:"wfsInfo.maxFeatures",write:{ignoreOrigin:!0,isRequired:!0}}})],o.prototype,"maxFeatures",void 0),i([r({type:[0],readOnly:!0,json:{origins:{"web-map":{write:{ignoreOrigin:!0,isRequired:!0}}}}})],o.prototype,"mode",void 0),i([r({type:String,json:{name:"wfsInfo.name",write:{ignoreOrigin:!0,isRequired:!0}}})],o.prototype,"name",void 0),i([r({type:String,json:{name:"wfsInfo.wfsNamespace",write:{ignoreOrigin:!0,isRequired:!0}}})],o.prototype,"namespaceUri",void 0),i([r(te)],o.prototype,"opacity",void 0),i([r(I.outFields)],o.prototype,"outFields",void 0),i([r({readOnly:!0})],o.prototype,"parsedUrl",null),i([r(ie)],o.prototype,"popupEnabled",void 0),i([r({type:re,json:{name:"popupInfo",write:!0}})],o.prototype,"popupTemplate",void 0),i([r({types:ne,json:{origins:{service:{name:"drawingInfo.renderer"},"web-scene":{types:pe,name:"layerDefinition.drawingInfo.renderer",write:!0}},name:"layerDefinition.drawingInfo.renderer",write:{ignoreOrigin:!0}}})],o.prototype,"renderer",null),i([r(oe)],o.prototype,"screenSizePerspectiveEnabled",void 0),i([r({readOnly:!0})],o.prototype,"source",void 0),i([r({type:T,json:{name:"layerDefinition.spatialReference",write:{ignoreOrigin:!0,isRequired:!0},origins:{service:{name:"extent.spatialReference"}}}})],o.prototype,"spatialReference",void 0),i([r({readOnly:!0,type:[S],json:{name:"wfsInfo.supportedSpatialReferences",write:{ignoreOrigin:!0,isRequired:!0}}})],o.prototype,"spatialReferences",void 0),i([r({type:Boolean,value:!1,json:{name:"wfsInfo.swapXY",write:{ignoreOrigin:!0,isRequired:!0}}})],o.prototype,"swapXY",void 0),i([r({json:{write:{ignoreOrigin:!0,isRequired:!0},origins:{service:{name:"name"}}}})],o.prototype,"title",void 0),i([r({json:{read:!1},readOnly:!0})],o.prototype,"type",void 0),i([r(se)],o.prototype,"url",void 0),i([r({type:String,readOnly:!0,json:{name:"wfsInfo.version",write:{ignoreOrigin:!0,isRequired:!0}}})],o.prototype,"version",void 0),i([r()],o.prototype,"wfsCapabilities",null),o=v=i([j("esri.layers.WFSLayer")],o);const st=o;export{st as default};
